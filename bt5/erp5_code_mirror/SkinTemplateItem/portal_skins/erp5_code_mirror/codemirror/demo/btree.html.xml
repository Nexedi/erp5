<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <unicode encoding="cdata"><![CDATA[

ï»¿<!doctype html>\n
\n
<title>CodeMirror: B-Tree visualization</title>\n
<meta charset="utf-8"/>\n
<link rel=stylesheet href="../doc/docs.css">\n
\n
<link rel="stylesheet" href="../lib/codemirror.css">\n
<script src="../lib/codemirror.js"></script>\n
<style type="text/css">\n
      .lineblock { display: inline-block; margin: 1px; height: 5px; }\n
      .CodeMirror {border: 1px solid #aaa; height: 400px}\n
    </style>\n
<div id=nav>\n
  <a href="http://codemirror.net"><h1>CodeMirror</h1><img id=logo src="../doc/logo.png"></a>\n
\n
  <ul>\n
    <li><a href="../index.html">Home</a>\n
    <li><a href="../doc/manual.html">Manual</a>\n
    <li><a href="https://github.com/codemirror/codemirror">Code</a>\n
  </ul>\n
  <ul>\n
    <li><a class=active href="#">B-Tree visualization</a>\n
  </ul>\n
</div>\n
\n
<article>\n
<h2>B-Tree visualization</h2>\n
<form><textarea id="code" name="code">type here, see a summary of the document b-tree below</textarea></form>\n
      <div style="display: inline-block; height: 402px; overflow-y: auto" id="output"></div>\n
\n
    <script id="me">\n
var editor = CodeMirror.fromTextArea(document.getElementById("code"), {\n
  lineNumbers: true,\n
  lineWrapping: true\n
});\n
var updateTimeout;\n
editor.on("change", function(cm) {\n
  clearTimeout(updateTimeout);\n
  updateTimeout = setTimeout(updateVisual, 200);\n
});\n
updateVisual();\n
\n
function updateVisual() {\n
  var out = document.getElementById("output");\n
  out.innerHTML = "";\n
\n
  function drawTree(out, node) {\n
    if (node.lines) {\n
      out.appendChild(document.createElement("div")).innerHTML =\n
        "<b>leaf</b>: " + node.lines.length + " lines, " + Math.round(node.height) + " px";\n
      var lines = out.appendChild(document.createElement("div"));\n
      lines.style.lineHeight = "6px"; lines.style.marginLeft = "10px";\n
      for (var i = 0; i < node.lines.length; ++i) {\n
        var line = node.lines[i], lineElt = lines.appendChild(document.createElement("div"));\n
        lineElt.className = "lineblock";\n
        var gray = Math.min(line.text.length * 3, 230), col = gray.toString(16);\n
        if (col.length == 1) col = "0" + col;\n
        lineElt.style.background = "#" + col + col + col;\n
        lineElt.style.width = Math.max(Math.round(line.height / 3), 1) + "px";\n
      }\n
    } else {\n
      out.appendChild(document.createElement("div")).innerHTML =\n
        "<b>node</b>: " + node.size + " lines, " + Math.round(node.height) + " px";\n
      var sub = out.appendChild(document.createElement("div"));\n
      sub.style.paddingLeft = "20px";\n
      for (var i = 0; i < node.children.length; ++i)\n
        drawTree(sub, node.children[i]);\n
    }\n
  }\n
  drawTree(out, editor.getDoc());\n
}\n
\n
function fillEditor() {\n
  var sc = document.getElementById("me");\n
  var doc = (sc.textContent || sc.innerText || sc.innerHTML).replace(/^\\s*/, "") + "\\n";\n
  doc += doc; doc += doc; doc += doc; doc += doc; doc += doc; doc += doc;\n
  editor.setValue(doc);\n
}\n
    </script>\n
\n
<p><button onclick="fillEditor()">Add a lot of content</button></p>\n
\n
  </article>

]]></unicode> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>btree.html</string> </value>
        </item>
        <item>
            <key> <string>output_encoding</string> </key>
            <value> <string>iso-8859-15</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
