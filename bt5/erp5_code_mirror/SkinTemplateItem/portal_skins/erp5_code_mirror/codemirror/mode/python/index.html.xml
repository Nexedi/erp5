<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <unicode encoding="cdata"><![CDATA[

<!doctype html>\n
\n
<title>CodeMirror: Python mode</title>\n
<meta charset="utf-8"/>\n
<link rel=stylesheet href="../../doc/docs.css">\n
\n
<link rel="stylesheet" href="../../lib/codemirror.css">\n
<script src="../../lib/codemirror.js"></script>\n
<script src="../../addon/cm_edit/matchbrackets.js"></script>\n
<script src="python.js"></script>\n
<style type="text/css">.CodeMirror {border-top: 1px solid black; border-bottom: 1px solid black;}</style>\n
<div id=nav>\n
  <a href="http://codemirror.net"><h1>CodeMirror</h1><img id=logo src="../../doc/logo.png"></a>\n
\n
  <ul>\n
    <li><a href="../../index.html">Home</a>\n
    <li><a href="../../doc/manual.html">Manual</a>\n
    <li><a href="https://github.com/codemirror/codemirror">Code</a>\n
  </ul>\n
  <ul>\n
    <li><a href="../index.html">Language modes</a>\n
    <li><a class=active href="#">Python</a>\n
  </ul>\n
</div>\n
\n
<article>\n
<h2>Python mode</h2>\n
\n
    <div><textarea id="code" name="code">\n
# Literals\n
1234\n
0.0e101\n
.123\n
0b01010011100\n
0o01234567\n
0x0987654321abcdef\n
7\n
2147483647\n
3L\n
79228162514264337593543950336L\n
0x100000000L\n
79228162514264337593543950336\n
0xdeadbeef\n
3.14j\n
10.j\n
10j\n
.001j\n
1e100j\n
3.14e-10j\n
\n
\n
# String Literals\n
\'For\\\'\'\n
"God\\""\n
"""so loved\n
the world"""\n
\'\'\'that he gave\n
his only begotten\\\' \'\'\'\n
\'that whosoever believeth \\\n
in him\'\n
\'\'\n
\n
# Identifiers\n
__a__\n
a.b\n
a.b.c\n
\n
#Unicode identifiers on Python3\n
# a = x\\ddot\n
aâ = xÌ\n
# a = v\\dot\n
aâ = vÌ\n
\n
#F\\vec = m \\cdot a\\vec\n
Fâ = mâ¢aâ \n
\n
# Operators\n
+ - * / % & | ^ ~ < >\n
== != <= >= <> << >> // **\n
and or not in is\n
\n
#infix matrix multiplication operator (PEP 465)\n
A @ B\n
\n
# Delimiters\n
() [] {} , : ` = ; @ .  # Note that @ and . require the proper context on Python 2.\n
+= -= *= /= %= &= |= ^=\n
//= >>= <<= **=\n
\n
# Keywords\n
as assert break class continue def del elif else except\n
finally for from global if import lambda pass raise\n
return try while with yield\n
\n
# Python 2 Keywords (otherwise Identifiers)\n
exec print\n
\n
# Python 3 Keywords (otherwise Identifiers)\n
nonlocal\n
\n
# Types\n
bool classmethod complex dict enumerate float frozenset int list object\n
property reversed set slice staticmethod str super tuple type\n
\n
# Python 2 Types (otherwise Identifiers)\n
basestring buffer file long unicode xrange\n
\n
# Python 3 Types (otherwise Identifiers)\n
bytearray bytes filter map memoryview open range zip\n
\n
# Some Example code\n
import os\n
from package import ParentClass\n
\n
@nonsenseDecorator\n
def doesNothing():\n
    pass\n
\n
class ExampleClass(ParentClass):\n
    @staticmethod\n
    def example(inputStr):\n
        a = list(inputStr)\n
        a.reverse()\n
        return \'\'.join(a)\n
\n
    def __init__(self, mixin = \'Hello\'):\n
        self.mixin = mixin\n
\n
</textarea></div>\n
\n
\n
<h2>Cython mode</h2>\n
\n
<div><textarea id="code-cython" name="code-cython">\n
\n
import numpy as np\n
cimport cython\n
from libc.math cimport sqrt\n
\n
@cython.boundscheck(False)\n
@cython.wraparound(False)\n
def pairwise_cython(double[:, ::1] X):\n
    cdef int M = X.shape[0]\n
    cdef int N = X.shape[1]\n
    cdef double tmp, d\n
    cdef double[:, ::1] D = np.empty((M, M), dtype=np.float64)\n
    for i in range(M):\n
        for j in range(M):\n
            d = 0.0\n
            for k in range(N):\n
                tmp = X[i, k] - X[j, k]\n
                d += tmp * tmp\n
            D[i, j] = sqrt(d)\n
    return np.asarray(D)\n
\n
</textarea></div>\n
\n
    <script>\n
      var editor = CodeMirror.fromTextArea(document.getElementById("code"), {\n
        mode: {name: "python",\n
               version: 3,\n
               singleLineStringErrors: false},\n
        lineNumbers: true,\n
        indentUnit: 4,\n
        matchBrackets: true\n
    });\n
\n
    CodeMirror.fromTextArea(document.getElementById("code-cython"), {\n
        mode: {name: "text/x-cython",\n
               version: 2,\n
               singleLineStringErrors: false},\n
        lineNumbers: true,\n
        indentUnit: 4,\n
        matchBrackets: true\n
      });\n
    </script>\n
    <h2>Configuration Options for Python mode:</h2>\n
    <ul>\n
      <li>version - 2/3 - The version of Python to recognize.  Default is 2.</li>\n
      <li>singleLineStringErrors - true/false - If you have a single-line string that is not terminated at the end of the line, this will show subsequent lines as errors if true, otherwise it will consider the newline as the end of the string. Default is false.</li>\n
      <li>hangingIndent - int - If you want to write long arguments to a function starting on a new line, how much that line should be indented. Defaults to one normal indentation unit.</li>\n
    </ul>\n
    <h2>Advanced Configuration Options:</h2>\n
    <p>Usefull for superset of python syntax like Enthought enaml, IPython magics and  questionmark help</p>\n
    <ul>\n
      <li>singleOperators - RegEx - Regular Expression for single operator matching,  default : <pre>^[\\\\+\\\\-\\\\*/%&amp;|\\\\^~&lt;&gt;!]</pre> including <pre>@</pre> on Python 3</li>\n
      <li>singleDelimiters - RegEx - Regular Expression for single delimiter matching, default :  <pre>^[\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}@,:`=;\\\\.]</pre></li>\n
      <li>doubleOperators - RegEx - Regular Expression for double operators matching, default : <pre>^((==)|(!=)|(&lt;=)|(&gt;=)|(&lt;&gt;)|(&lt;&lt;)|(&gt;&gt;)|(//)|(\\\\*\\\\*))</pre></li>\n
      <li>doubleDelimiters - RegEx - Regular Expressoin for double delimiters matching, default : <pre>^((\\\\+=)|(\\\\-=)|(\\\\*=)|(%=)|(/=)|(&amp;=)|(\\\\|=)|(\\\\^=))</pre></li>\n
      <li>tripleDelimiters - RegEx - Regular Expression for triple delimiters matching, default : <pre>^((//=)|(&gt;&gt;=)|(&lt;&lt;=)|(\\\\*\\\\*=))</pre></li>\n
      <li>identifiers - RegEx - Regular Expression for identifier, default : <pre>^[_A-Za-z][_A-Za-z0-9]*</pre> on Python 2 and <pre>^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*</pre> on Python 3.</li>\n
      <li>extra_keywords - list of string - List of extra words ton consider as keywords</li>\n
      <li>extra_builtins - list of string - List of extra words ton consider as builtins</li>\n
    </ul>\n
\n
\n
    <p><strong>MIME types defined:</strong> <code>text/x-python</code> and <code>text/x-cython</code>.</p>\n
  </article>

]]></unicode> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>index.html</string> </value>
        </item>
        <item>
            <key> <string>output_encoding</string> </key>
            <value> <string>iso-8859-15</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
