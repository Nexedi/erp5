<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <unicode encoding="cdata"><![CDATA[

<!doctype html>\n
\n
<title>CodeMirror: Tcl mode</title>\n
<meta charset="utf-8"/>\n
<link rel=stylesheet href="../../doc/docs.css">\n
\n
<link rel="stylesheet" href="../../lib/codemirror.css">\n
<link rel="stylesheet" href="../../theme/night.css">\n
<script src="../../lib/codemirror.js"></script>\n
<script src="tcl.js"></script>\n
<script src="../../addon/scroll/scrollpastend.js"></script>\n
<div id=nav>\n
  <a href="http://codemirror.net"><h1>CodeMirror</h1><img id=logo src="../../doc/logo.png"></a>\n
\n
  <ul>\n
    <li><a href="../../index.html">Home</a>\n
    <li><a href="../../doc/manual.html">Manual</a>\n
    <li><a href="https://github.com/codemirror/codemirror">Code</a>\n
  </ul>\n
  <ul>\n
    <li><a href="../index.html">Language modes</a>\n
    <li><a class=active href="#">Tcl</a>\n
  </ul>\n
</div>\n
\n
<article>\n
<h2>Tcl mode</h2>\n
<form><textarea id="code" name="code">\n
##############################################################################################\n
##  ##     whois.tcl for eggdrop by Ford_Lawnmower irc.geekshed.net #Script-Help        ##  ##\n
##############################################################################################\n
## To use this script you must set channel flag +whois (ie .chanset #chan +whois)           ##\n
##############################################################################################\n
##      ____                __                 ###########################################  ##\n
##     / __/___ _ ___ _ ___/ /____ ___   ___   ###########################################  ##\n
##    / _/ / _ `// _ `// _  // __// _ \\ / _ \\  ###########################################  ##\n
##   /___/ \\_, / \\_, / \\_,_//_/   \\___// .__/  ###########################################  ##\n
##        /___/ /___/                 /_/      ###########################################  ##\n
##                                             ###########################################  ##\n
##############################################################################################\n
##  ##                             Start Setup.                                         ##  ##\n
##############################################################################################\n
namespace eval whois {\n
## change cmdchar to the trigger you want to use                                        ##  ##\n
  variable cmdchar "!"\n
## change command to the word trigger you would like to use.                            ##  ##\n
## Keep in mind, This will also change the .chanset +/-command                          ##  ##\n
  variable command "whois"\n
## change textf to the colors you want for the text.                                    ##  ##\n
  variable textf "\\017\\00304"\n
## change tagf to the colors you want for tags:                                         ##  ##\n
  variable tagf "\\017\\002"\n
## Change logo to the logo you want at the start of the line.                           ##  ##\n
  variable logo "\\017\\00304\\002\\[\\00306W\\003hois\\00304\\]\\017"\n
## Change lineout to the results you want. Valid results are channel users modes topic  ##  ##\n
  variable lineout "channel users modes topic"\n
##############################################################################################\n
##  ##                           End Setup.                                              ## ##\n
##############################################################################################\n
  variable channel ""\n
  setudef flag $whois::command\n
  bind pub -|- [string trimleft $whois::cmdchar]${whois::command} whois::list\n
  bind raw -|- "311" whois::311\n
  bind raw -|- "312" whois::312\n
  bind raw -|- "319" whois::319\n
  bind raw -|- "317" whois::317\n
  bind raw -|- "313" whois::multi\n
  bind raw -|- "310" whois::multi\n
  bind raw -|- "335" whois::multi\n
  bind raw -|- "301" whois::301\n
  bind raw -|- "671" whois::multi\n
  bind raw -|- "320" whois::multi\n
  bind raw -|- "401" whois::multi\n
  bind raw -|- "318" whois::318\n
  bind raw -|- "307" whois::307\n
}\n
proc whois::311 {from key text} {\n
  if {[regexp -- {^[^\\s]+\\s(.+?)\\s(.+?)\\s(.+?)\\s\\*\\s\\:(.+)$} $text wholematch nick ident host realname]} {\n
    putserv "PRIVMSG $whois::channel :${whois::logo} ${whois::tagf}Host:${whois::textf} \\\n
        $nick \\(${ident}@${host}\\) ${whois::tagf}Realname:${whois::textf} $realname"\n
  }\n
}\n
proc whois::multi {from key text} {\n
  if {[regexp {\\:(.*)$} $text match $key]} {\n
    putserv "PRIVMSG $whois::channel :${whois::logo} ${whois::tagf}Note:${whois::textf} [subst $$key]"\n
        return 1\n
  }\n
}\n
proc whois::312 {from key text} {\n
  regexp {([^\\s]+)\\s\\:} $text match server\n
  putserv "PRIVMSG $whois::channel :${whois::logo} ${whois::tagf}Server:${whois::textf} $server"\n
}\n
proc whois::319 {from key text} {\n
  if {[regexp {.+\\:(.+)$} $text match channels]} {\n
    putserv "PRIVMSG $whois::channel :${whois::logo} ${whois::tagf}Channels:${whois::textf} $channels"\n
  }\n
}\n
proc whois::317 {from key text} {\n
  if {[regexp -- {.*\\s(\\d+)\\s(\\d+)\\s\\:} $text wholematch idle signon]} {\n
    putserv "PRIVMSG $whois::channel :${whois::logo} ${whois::tagf}Connected:${whois::textf} \\\n
        [ctime $signon] ${whois::tagf}Idle:${whois::textf} [duration $idle]"\n
  }\n
}\n
proc whois::301 {from key text} {\n
  if {[regexp {^.+\\s[^\\s]+\\s\\:(.*)$} $text match awaymsg]} {\n
    putserv "PRIVMSG $whois::channel :${whois::logo} ${whois::tagf}Away:${whois::textf} $awaymsg"\n
  }\n
}\n
proc whois::318 {from key text} {\n
  namespace eval whois {\n
        variable channel ""\n
  }\n
  variable whois::channel ""\n
}\n
proc whois::307 {from key text} {\n
  putserv "PRIVMSG $whois::channel :${whois::logo} ${whois::tagf}Services:${whois::textf} Registered Nick"\n
}\n
proc whois::list {nick host hand chan text} {\n
  if {[lsearch -exact [channel info $chan] "+${whois::command}"] != -1} {\n
    namespace eval whois {\n
          variable channel ""\n
        }\n
    variable whois::channel $chan\n
    putserv "WHOIS $text"\n
  }\n
}\n
putlog "\\002*Loaded* \\017\\00304\\002\\[\\00306W\\003hois\\00304\\]\\017 \\002by \\\n
Ford_Lawnmower irc.GeekShed.net #Script-Help"\n
</textarea></form>\n
    <script>\n
      var editor = CodeMirror.fromTextArea(document.getElementById("code"), {\n
        theme: "night",\n
        lineNumbers: true,\n
        indentUnit: 2,\n
        scrollPastEnd: true,\n
        mode: "text/x-tcl"\n
      });\n
    </script>\n
\n
    <p><strong>MIME types defined:</strong> <code>text/x-tcl</code>.</p>\n
\n
  </article>

]]></unicode> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>index.html</string> </value>
        </item>
        <item>
            <key> <string>output_encoding</string> </key>
            <value> <string>iso-8859-15</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
