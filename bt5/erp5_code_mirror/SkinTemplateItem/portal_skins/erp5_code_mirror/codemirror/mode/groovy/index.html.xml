<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <unicode encoding="cdata"><![CDATA[

<!doctype html>\n
\n
<title>CodeMirror: Groovy mode</title>\n
<meta charset="utf-8"/>\n
<link rel=stylesheet href="../../doc/docs.css">\n
\n
<link rel="stylesheet" href="../../lib/codemirror.css">\n
<script src="../../lib/codemirror.js"></script>\n
<script src="../../addon/cm_edit/matchbrackets.js"></script>\n
<script src="groovy.js"></script>\n
<style>.CodeMirror {border-top: 1px solid #500; border-bottom: 1px solid #500;}</style>\n
<div id=nav>\n
  <a href="http://codemirror.net"><h1>CodeMirror</h1><img id=logo src="../../doc/logo.png"></a>\n
\n
  <ul>\n
    <li><a href="../../index.html">Home</a>\n
    <li><a href="../../doc/manual.html">Manual</a>\n
    <li><a href="https://github.com/codemirror/codemirror">Code</a>\n
  </ul>\n
  <ul>\n
    <li><a href="../index.html">Language modes</a>\n
    <li><a class=active href="#">Groovy</a>\n
  </ul>\n
</div>\n
\n
<article>\n
<h2>Groovy mode</h2>\n
<form><textarea id="code" name="code">\n
//Pattern for groovy script\n
def p = ~/.*\\.groovy/\n
new File( \'d:\\\\scripts\' ).eachFileMatch(p) {f ->\n
  // imports list\n
  def imports = []\n
  f.eachLine {\n
    // condition to detect an import instruction\n
    ln -> if ( ln =~ \'^import .*\' ) {\n
      imports << "${ln - \'import \'}"\n
    }\n
  }\n
  // print thmen\n
  if ( ! imports.empty ) {\n
    println f\n
    imports.each{ println "   $it" }\n
  }\n
}\n
\n
/* Coin changer demo code from http://groovy.codehaus.org */\n
\n
enum UsCoin {\n
  quarter(25), dime(10), nickel(5), penny(1)\n
  UsCoin(v) { value = v }\n
  final value\n
}\n
\n
enum OzzieCoin {\n
  fifty(50), twenty(20), ten(10), five(5)\n
  OzzieCoin(v) { value = v }\n
  final value\n
}\n
\n
def plural(word, count) {\n
  if (count == 1) return word\n
  word[-1] == \'y\' ? word[0..-2] + "ies" : word + "s"\n
}\n
\n
def change(currency, amount) {\n
  currency.values().inject([]){ list, coin ->\n
     int count = amount / coin.value\n
     amount = amount % coin.value\n
     list += "$count ${plural(coin.toString(), count)}"\n
  }\n
}\n
</textarea></form>\n
\n
    <script>\n
      var editor = CodeMirror.fromTextArea(document.getElementById("code"), {\n
        lineNumbers: true,\n
        matchBrackets: true,\n
        mode: "text/x-groovy"\n
      });\n
    </script>\n
\n
    <p><strong>MIME types defined:</strong> <code>text/x-groovy</code></p>\n
  </article>

]]></unicode> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>index.html</string> </value>
        </item>
        <item>
            <key> <string>output_encoding</string> </key>
            <value> <string>iso-8859-15</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
