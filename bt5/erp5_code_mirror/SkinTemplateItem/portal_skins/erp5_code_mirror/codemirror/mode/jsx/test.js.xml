<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Cacheable__manager_id</string> </key>
            <value> <string>http_cache</string> </value>
        </item>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts60604381.42</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>test.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

// CodeMirror, copyright (c) by Marijn Haverbeke and others\n
// Distributed under an MIT license: http://codemirror.net/LICENSE\n
\n
(function() {\n
  var mode = CodeMirror.getMode({indentUnit: 2}, "jsx")\n
  function MT(name) { test.mode(name, mode, Array.prototype.slice.call(arguments, 1)) }\n
\n
  MT("selfclose",\n
     "[keyword var] [def x] [operator =] [bracket&tag <] [tag foo] [bracket&tag />] [operator +] [number 1];")\n
\n
  MT("openclose",\n
     "([bracket&tag <][tag foo][bracket&tag >]hello [atom &amp;][bracket&tag </][tag foo][bracket&tag >][operator ++])")\n
\n
  MT("attr",\n
     "([bracket&tag <][tag foo] [attribute abc]=[string \'value\'][bracket&tag >]hello [atom &amp;][bracket&tag </][tag foo][bracket&tag >][operator ++])")\n
\n
  MT("braced_attr",\n
     "([bracket&tag <][tag foo] [attribute abc]={[number 10]}[bracket&tag >]hello [atom &amp;][bracket&tag </][tag foo][bracket&tag >][operator ++])")\n
\n
  MT("braced_text",\n
     "([bracket&tag <][tag foo][bracket&tag >]hello {[number 10]} [atom &amp;][bracket&tag </][tag foo][bracket&tag >][operator ++])")\n
\n
  MT("nested_tag",\n
     "([bracket&tag <][tag foo][bracket&tag ><][tag bar][bracket&tag ></][tag bar][bracket&tag ></][tag foo][bracket&tag >][operator ++])")\n
\n
  MT("nested_jsx",\n
     "[keyword return] (",\n
     "  [bracket&tag <][tag foo][bracket&tag >]",\n
     "    say {[number 1] [operator +] [bracket&tag <][tag bar] [attribute attr]={[number 10]}[bracket&tag />]}!",\n
     "  [bracket&tag </][tag foo][bracket&tag >][operator ++]",\n
     ")")\n
\n
  MT("preserve_js_context",\n
     "[variable x] [operator =] [string-2 `quasi${][bracket&tag <][tag foo][bracket&tag />][string-2 }quoted`]")\n
\n
  MT("line_comment",\n
     "([bracket&tag <][tag foo] [comment // hello]",\n
     "   [bracket&tag ></][tag foo][bracket&tag >][operator ++])")\n
\n
  MT("line_comment_not_in_tag",\n
     "([bracket&tag <][tag foo][bracket&tag >] // hello",\n
     "  [bracket&tag </][tag foo][bracket&tag >][operator ++])")\n
\n
  MT("block_comment",\n
     "([bracket&tag <][tag foo] [comment /* hello]",\n
     "[comment    line 2]",\n
     "[comment    line 3 */] [bracket&tag ></][tag foo][bracket&tag >][operator ++])")\n
\n
  MT("block_comment_not_in_tag",\n
     "([bracket&tag <][tag foo][bracket&tag >]/* hello",\n
     "    line 2",\n
     "    line 3 */ [bracket&tag </][tag foo][bracket&tag >][operator ++])")\n
\n
  MT("missing_attr",\n
     "([bracket&tag <][tag foo] [attribute selected][bracket&tag />][operator ++])")\n
\n
  MT("indent_js",\n
     "([bracket&tag <][tag foo][bracket&tag >]",\n
     "    [bracket&tag <][tag bar] [attribute baz]={[keyword function]() {",\n
     "        [keyword return] [number 10]",\n
     "      }}[bracket&tag />]",\n
     "  [bracket&tag </][tag foo][bracket&tag >])")\n
\n
  MT("spread",\n
     "([bracket&tag <][tag foo] [attribute bar]={[meta ...][variable baz] [operator /][number 2]}[bracket&tag />])")\n
\n
  MT("tag_attribute",\n
     "([bracket&tag <][tag foo] [attribute bar]=[bracket&tag <][tag foo][bracket&tag />/>][operator ++])")\n
})()\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>2966</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
