<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <unicode encoding="cdata"><![CDATA[

<!doctype html>\n
\n
<title>CodeMirror: Puppet mode</title>\n
<meta charset="utf-8"/>\n
<link rel=stylesheet href="../../doc/docs.css">\n
\n
<link rel="stylesheet" href="../../lib/codemirror.css">\n
<script src="../../lib/codemirror.js"></script>\n
<script src="../../addon/cm_edit/matchbrackets.js"></script>\n
<script src="puppet.js"></script>\n
<style>\n
      .CodeMirror {border-top: 1px solid black; border-bottom: 1px solid black;}\n
      .cm-s-default span.cm-arrow { color: red; }\n
    </style>\n
<div id=nav>\n
  <a href="http://codemirror.net"><h1>CodeMirror</h1><img id=logo src="../../doc/logo.png"></a>\n
\n
  <ul>\n
    <li><a href="../../index.html">Home</a>\n
    <li><a href="../../doc/manual.html">Manual</a>\n
    <li><a href="https://github.com/codemirror/codemirror">Code</a>\n
  </ul>\n
  <ul>\n
    <li><a href="../index.html">Language modes</a>\n
    <li><a class=active href="#">Puppet</a>\n
  </ul>\n
</div>\n
\n
<article>\n
<h2>Puppet mode</h2>\n
<form><textarea id="code" name="code">\n
# == Class: automysqlbackup\n
#\n
# Puppet module to install AutoMySQLBackup for periodic MySQL backups.\n
#\n
# class { \'automysqlbackup\':\n
#   backup_dir => \'/mnt/backups\',\n
# }\n
#\n
\n
class automysqlbackup (\n
  $bin_dir = $automysqlbackup::params::bin_dir,\n
  $etc_dir = $automysqlbackup::params::etc_dir,\n
  $backup_dir = $automysqlbackup::params::backup_dir,\n
  $install_multicore = undef,\n
  $config = {},\n
  $config_defaults = {},\n
) inherits automysqlbackup::params {\n
\n
# Ensure valid paths are assigned\n
  validate_absolute_path($bin_dir)\n
  validate_absolute_path($etc_dir)\n
  validate_absolute_path($backup_dir)\n
\n
# Create a subdirectory in /etc for config files\n
  file { $etc_dir:\n
    ensure => directory,\n
    owner => \'root\',\n
    group => \'root\',\n
    mode => \'0750\',\n
  }\n
\n
# Create an example backup file, useful for reference\n
  file { "${etc_dir}/automysqlbackup.conf.example":\n
    ensure => file,\n
    owner => \'root\',\n
    group => \'root\',\n
    mode => \'0660\',\n
    source => \'puppet:///modules/automysqlbackup/automysqlbackup.conf\',\n
  }\n
\n
# Add files from the developer\n
  file { "${etc_dir}/AMB_README":\n
    ensure => file,\n
    source => \'puppet:///modules/automysqlbackup/AMB_README\',\n
  }\n
  file { "${etc_dir}/AMB_LICENSE":\n
    ensure => file,\n
    source => \'puppet:///modules/automysqlbackup/AMB_LICENSE\',\n
  }\n
\n
# Install the actual binary file\n
  file { "${bin_dir}/automysqlbackup":\n
    ensure => file,\n
    owner => \'root\',\n
    group => \'root\',\n
    mode => \'0755\',\n
    source => \'puppet:///modules/automysqlbackup/automysqlbackup\',\n
  }\n
\n
# Create the base backup directory\n
  file { $backup_dir:\n
    ensure => directory,\n
    owner => \'root\',\n
    group => \'root\',\n
    mode => \'0755\',\n
  }\n
\n
# If you\'d like to keep your config in hiera and pass it to this class\n
  if !empty($config) {\n
    create_resources(\'automysqlbackup::backup\', $config, $config_defaults)\n
  }\n
\n
# If using RedHat family, must have the RPMforge repo\'s enabled\n
  if $install_multicore {\n
    package { [\'pigz\', \'pbzip2\']: ensure => installed }\n
  }\n
\n
}\n
</textarea></form>\n
    <script>\n
      var editor = CodeMirror.fromTextArea(document.getElementById("code"), {\n
        mode: "text/x-puppet",\n
        matchBrackets: true,\n
        indentUnit: 4\n
      });\n
    </script>\n
\n
    <p><strong>MIME types defined:</strong> <code>text/x-puppet</code>.</p>\n
\n
  </article>

]]></unicode> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>index.html</string> </value>
        </item>
        <item>
            <key> <string>output_encoding</string> </key>
            <value> <string>iso-8859-15</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
