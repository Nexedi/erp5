<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <unicode encoding="cdata"><![CDATA[

<!doctype html>\n
\n
<title>CodeMirror: Clojure mode</title>\n
<meta charset="utf-8"/>\n
<link rel=stylesheet href="../../doc/docs.css">\n
\n
<link rel="stylesheet" href="../../lib/codemirror.css">\n
<script src="../../lib/codemirror.js"></script>\n
<script src="clojure.js"></script>\n
<style>.CodeMirror {background: #f8f8f8;}</style>\n
<div id=nav>\n
  <a href="http://codemirror.net"><h1>CodeMirror</h1><img id=logo src="../../doc/logo.png"></a>\n
\n
  <ul>\n
    <li><a href="../../index.html">Home</a>\n
    <li><a href="../../doc/manual.html">Manual</a>\n
    <li><a href="https://github.com/codemirror/codemirror">Code</a>\n
  </ul>\n
  <ul>\n
    <li><a href="../index.html">Language modes</a>\n
    <li><a class=active href="#">Clojure</a>\n
  </ul>\n
</div>\n
\n
<article>\n
<h2>Clojure mode</h2>\n
<form><textarea id="code" name="code">\n
; Conway\'s Game of Life, based on the work of:\n
;; Laurent Petit https://gist.github.com/1200343\n
;; Christophe Grand http://clj-me.cgrand.net/2011/08/19/conways-game-of-life\n
\n
(ns ^{:doc "Conway\'s Game of Life."}\n
 game-of-life)\n
\n
;; Core game of life\'s algorithm functions\n
\n
(defn neighbours\n
  "Given a cell\'s coordinates, returns the coordinates of its neighbours."\n
  [[x y]]\n
  (for [dx [-1 0 1] dy (if (zero? dx) [-1 1] [-1 0 1])]\n
    [(+ dx x) (+ dy y)]))\n
\n
(defn step\n
  "Given a set of living cells, computes the new set of living cells."\n
  [cells]\n
  (set (for [[cell n] (frequencies (mapcat neighbours cells))\n
             :when (or (= n 3) (and (= n 2) (cells cell)))]\n
         cell)))\n
\n
;; Utility methods for displaying game on a text terminal\n
\n
(defn print-board\n
  "Prints a board on *out*, representing a step in the game."\n
  [board w h]\n
  (doseq [x (range (inc w)) y (range (inc h))]\n
    (if (= y 0) (print "\\n"))\n
    (print (if (board [x y]) "[X]" " . "))))\n
\n
(defn display-grids\n
  "Prints a squence of boards on *out*, representing several steps."\n
  [grids w h]\n
  (doseq [board grids]\n
    (print-board board w h)\n
    (print "\\n")))\n
\n
;; Launches an example board\n
\n
(def\n
  ^{:doc "board represents the initial set of living cells"}\n
   board #{[2 1] [2 2] [2 3]})\n
\n
(display-grids (take 3 (iterate step board)) 5 5)\n
\n
;; Let\'s play with characters\n
(println \\1 \\a \\# \\\\\n
         \\" \\( \\newline\n
         \\} \\" \\space\n
         \\tab \\return \\backspace\n
         \\u1000 \\uAaAa \\u9F9F)\n
\n
;; Let\'s play with numbers\n
(+ 1 -1 1/2 -1/2 -0.5 0.5)\n
\n
</textarea></form>\n
    <script>\n
      var editor = CodeMirror.fromTextArea(document.getElementById("code"), {});\n
    </script>\n
\n
    <p><strong>MIME types defined:</strong> <code>text/x-clojure</code>.</p>\n
\n
  </article>

]]></unicode> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>index.html</string> </value>
        </item>
        <item>
            <key> <string>output_encoding</string> </key>
            <value> <string>iso-8859-15</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
