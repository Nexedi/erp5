<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Cacheable__manager_id</string> </key>
            <value> <string>http_cache</string> </value>
        </item>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts60604372.67</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>rulers.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

// CodeMirror, copyright (c) by Marijn Haverbeke and others\n
// Distributed under an MIT license: http://codemirror.net/LICENSE\n
\n
(function(mod) {\n
  if (typeof exports == "object" && typeof module == "object") // CommonJS\n
    mod(require("../../lib/codemirror"));\n
  else if (typeof define == "function" && define.amd) // AMD\n
    define(["../../lib/codemirror"], mod);\n
  else // Plain browser env\n
    mod(CodeMirror);\n
})(function(CodeMirror) {\n
  "use strict";\n
\n
  CodeMirror.defineOption("rulers", false, function(cm, val, old) {\n
    if (old && old != CodeMirror.Init) {\n
      clearRulers(cm);\n
      cm.off("refresh", refreshRulers);\n
    }\n
    if (val && val.length) {\n
      setRulers(cm);\n
      cm.on("refresh", refreshRulers);\n
    }\n
  });\n
\n
  function clearRulers(cm) {\n
    for (var i = cm.display.lineSpace.childNodes.length - 1; i >= 0; i--) {\n
      var node = cm.display.lineSpace.childNodes[i];\n
      if (/(^|\\s)CodeMirror-ruler($|\\s)/.test(node.className))\n
        node.parentNode.removeChild(node);\n
    }\n
  }\n
\n
  function setRulers(cm) {\n
    var val = cm.getOption("rulers");\n
    var cw = cm.defaultCharWidth();\n
    var left = cm.charCoords(CodeMirror.Pos(cm.firstLine(), 0), "div").left;\n
    var minH = cm.display.scroller.offsetHeight + 30;\n
    for (var i = 0; i < val.length; i++) {\n
      var elt = document.createElement("div");\n
      elt.className = "CodeMirror-ruler";\n
      var col, conf = val[i];\n
      if (typeof conf == "number") {\n
        col = conf;\n
      } else {\n
        col = conf.column;\n
        if (conf.className) elt.className += " " + conf.className;\n
        if (conf.color) elt.style.borderColor = conf.color;\n
        if (conf.lineStyle) elt.style.borderLeftStyle = conf.lineStyle;\n
        if (conf.width) elt.style.borderLeftWidth = conf.width;\n
      }\n
      elt.style.left = (left + col * cw) + "px";\n
      elt.style.top = "-50px";\n
      elt.style.bottom = "-20px";\n
      elt.style.minHeight = minH + "px";\n
      cm.display.lineSpace.insertBefore(elt, cm.display.cursorDiv);\n
    }\n
  }\n
\n
  function refreshRulers(cm) {\n
    clearRulers(cm);\n
    setRulers(cm);\n
  }\n
});\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>2090</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
