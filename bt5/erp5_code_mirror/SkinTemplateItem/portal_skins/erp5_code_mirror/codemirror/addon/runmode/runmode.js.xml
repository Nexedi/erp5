<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Cacheable__manager_id</string> </key>
            <value> <string>http_cache</string> </value>
        </item>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts60604374.42</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>runmode.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

// CodeMirror, copyright (c) by Marijn Haverbeke and others\n
// Distributed under an MIT license: http://codemirror.net/LICENSE\n
\n
(function(mod) {\n
  if (typeof exports == "object" && typeof module == "object") // CommonJS\n
    mod(require("../../lib/codemirror"));\n
  else if (typeof define == "function" && define.amd) // AMD\n
    define(["../../lib/codemirror"], mod);\n
  else // Plain browser env\n
    mod(CodeMirror);\n
})(function(CodeMirror) {\n
"use strict";\n
\n
CodeMirror.runMode = function(string, modespec, callback, options) {\n
  var mode = CodeMirror.getMode(CodeMirror.defaults, modespec);\n
  var ie = /MSIE \\d/.test(navigator.userAgent);\n
  var ie_lt9 = ie && (document.documentMode == null || document.documentMode < 9);\n
\n
  if (callback.appendChild) {\n
    var tabSize = (options && options.tabSize) || CodeMirror.defaults.tabSize;\n
    var node = callback, col = 0;\n
    node.innerHTML = "";\n
    callback = function(text, style) {\n
      if (text == "\\n") {\n
        // Emitting LF or CRLF on IE8 or earlier results in an incorrect display.\n
        // Emitting a carriage return makes everything ok.\n
        node.appendChild(document.createTextNode(ie_lt9 ? \'\\r\' : text));\n
        col = 0;\n
        return;\n
      }\n
      var content = "";\n
      // replace tabs\n
      for (var pos = 0;;) {\n
        var idx = text.indexOf("\\t", pos);\n
        if (idx == -1) {\n
          content += text.slice(pos);\n
          col += text.length - pos;\n
          break;\n
        } else {\n
          col += idx - pos;\n
          content += text.slice(pos, idx);\n
          var size = tabSize - col % tabSize;\n
          col += size;\n
          for (var i = 0; i < size; ++i) content += " ";\n
          pos = idx + 1;\n
        }\n
      }\n
\n
      if (style) {\n
        var sp = node.appendChild(document.createElement("span"));\n
        sp.className = "cm-" + style.replace(/ +/g, " cm-");\n
        sp.appendChild(document.createTextNode(content));\n
      } else {\n
        node.appendChild(document.createTextNode(content));\n
      }\n
    };\n
  }\n
\n
  var lines = CodeMirror.splitLines(string), state = (options && options.state) || CodeMirror.startState(mode);\n
  for (var i = 0, e = lines.length; i < e; ++i) {\n
    if (i) callback("\\n");\n
    var stream = new CodeMirror.StringStream(lines[i]);\n
    if (!stream.string && mode.blankLine) mode.blankLine(state);\n
    while (!stream.eol()) {\n
      var style = mode.token(stream, state);\n
      callback(stream.current(), style, i, stream.start, state);\n
      stream.start = stream.pos;\n
    }\n
  }\n
};\n
\n
});\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>2499</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
