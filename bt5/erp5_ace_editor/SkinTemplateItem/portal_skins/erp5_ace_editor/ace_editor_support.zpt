<tal:block tal:define='site_root python: here.getWebSiteValue() or here.getPortalObject();
                       portal_url python: site_root.absolute_url();
                       portal_type python: here.getPortalType();
                       div_id string:${id}_ace;
                       mode python: here.Base_getAceEditorMode();
                       container_div_id string:${div_id}_container;
                       params python: getattr(here, "getParameterSignature", None)
                       '>
  <style type="text/css">
  .ace_scroller {
    overflow-x: auto !important;
  }

  .ace_sb {
    overflow-y: auto !important;
  }

  .ace_gutter {
    background-color: #97B0D1 !important;
  }

  .ace_content {
    background-color: white !important;
  }

  .ace_layer {
    background-color: transparent !important;
  }

  .field label {
    width: 20% !important;
  }

  .ace_line {
    color: black !important;
  }

  .ace_editor_save_button {
    position: absolute;
    top: 5px;
    right: 20px;
    width: 30px;
    height: 30px;
    border: none;
    background-color: transparent;
    cursor: pointer;
  }

  .ace_editor_maximize_fullscreen_message {
    display: table;
    position: absolute;
    bottom: 0;
    right: 20px;
    width: 40%;
    z-index: 424242;
    padding: 20px;
    background-color: #DAE6F6;
    border: 1px solid #97B0D1;
    opacity: 0.3;
    cursor: pointer;
    font-weight: bold;
  }

  .ace_editor_maximize_fullscreen_error_message {
    background-color: red;
  }

  .ace_editor_maximize_fullscreen_message > div {
    font-size: 14px;
    display: table-cell;
    vertical-align: middle;
  }

  #maximize_message {
    display: block !important;
    position: absolute !important;
    bottom: 0 !important;
    right: 0px !important;
    z-index: 4243 !important;
    padding: 10px;
    font-size: 16px;
    font-weight: bold;
    background-color: black;
    color: white;
  }

  .maximize {
    display: block !important;
    position: absolute !important;
    top: 0 !important;
    left: 0 !important;
    z-index: 4242 !important;
    overflow: hidden !important;
  }

  input.ace_editor_action_button {
    padding: 2px;
    margin-top: 5px;
    margin-right: 5px;
  }

  div:full-screen {
    width: 100% !important;
    height: 100% !important;
  }

  div:-webkit-full-screen  {
    width: 100% !important;
    height: 100% !important;
  }

  div:-moz-full-screen {
    width: 100% !important;
    height: 100% !important;
  }
  </style>

  <style type="text/css" tal:content="structure string:
  #${div_id} * {
    font-family: monospace !important;
  }">
  </style>

  <input type="button" value="Maximize" onclick="maximize()"
         class="ace_editor_action_button" />

  <textarea tal:attributes="id id; name id" tal:content="content"
            style="display: none;"></textarea>

  <div tal:attributes="id string:${container_div_id}"
       style="width: 200px; height: 400px; overflow: hidden !important;
              border: 1px solid #97B0D1; background-color: white !important;">
    <div style="position: relative !important; width: 100%; height: 100%;"
         tal:content="content"
         tal:attributes="id div_id"></div>
  </div>

  <script type="text/javascript"
          tal:attributes="src string:${portal_url}/ace/ace.js"></script>
  <script type="text/javascript"
          tal:attributes="src string:${portal_url}/ace/mode-${mode}.js"></script>
  <script type="text/javascript"
          tal:attributes="src string:${portal_url}/ace/ext-settings_menu.js"></script>
  <script type="text/javascript"
          tal:attributes="src string:${portal_url}/ace/ext-language_tools.js"></script>
  <script type="text/javascript"
          tal:define='fullscreen_button string:<input type="button" value="Fullscreen" onclick="switchToFullScreen()" class="ace_editor_action_button" />;
                      save_button string:<button class="ace_editor_save_button" onclick="saveDocument(event)"><img src="images/save2.png" width="30" height="30" border="0" /></button>;'

          tal:content="structure string:
  ace_editor_container_div = null;
  ace_editor = null;
  var mode = '${mode}';
  var portal_type = '${portal_type}';
  var params = '${params}';

  function maximizeFullscreenRemoveSaveMessage() {
    $('.ace_editor_maximize_fullscreen_message').remove();
  }

  function switchToFullScreen(id) {
    element = document.getElementById('${container_div_id}');
    if((document.fullScreenElement && document.fullScreenElement !== null) ||
       (!document.mozFullScreen && !document.webkitIsFullScreen)) {
      if (element.requestFullScreen) {
        element.requestFullScreen();
      }
      else if(element.mozRequestFullScreen) {
        element.mozRequestFullScreen();
      }
      else if(element.webkitRequestFullScreen) {
        element.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
      }
      ace_editor.resize(true);
    }
  }

  function setContainerDivSize(event) {
    width = $(window).width() - ace_editor_container_div.offset().left * 2 - 1;
    if(width < 200)
      width = 200;
    ace_editor_container_div.width(width);

    height = $(window).height() - ace_editor_container_div.offset().top - 40;
    if(height < 400)
      height = 400;
    ace_editor_container_div.height(height);

    if(event != null)
      ace_editor.resize(true);
  }

  ace_editor_container_div_parent_before_maximized = null;
  ace_editor_maximize_mode_message = $('<span id=&quot;maximize_message&quot;>Press Alt-M to leave maximize mode</span>');

  function unmaximize(event) {
    maximizeFullscreenRemoveSaveMessage();
    $('body').css('overflow', 'visible');
    ace_editor_container_div.removeClass('maximize');
    ace_editor_container_div.appendTo(ace_editor_container_div_parent_before_maximized);
    setContainerDivSize(event);
  }

  function maximize() {
    body_element = $('body');
    body_element.css('overflow', 'hidden');

    ace_editor_container_div_parent_before_maximized = ace_editor_container_div.parent();

    ace_editor_container_div.prependTo(body_element);
    ace_editor_container_div.addClass('maximize');
    ace_editor_container_div.width($(window).width());
    ace_editor_container_div.height($(window).height());

    body_element.prepend(ace_editor_maximize_mode_message);
    ace_editor_maximize_mode_message.css('opacity', 1.0);
    ace_editor_maximize_mode_message.animate({opacity: 0.25}, 1500,
                                             function() { $(this).remove(); });

    ace_editor.commands.addCommand({
      name: 'unmaximize',
      bindKey: {win: 'Alt-m', mac: 'Alt-m'},
      exec: unmaximize
    });

    ace_editor.resize(true);
    ace_editor.focus()
  }

  // Save source code only through an AJAX request
  function saveDocument(event) {
    event.stopPropagation();
    event.preventDefault();

    clickSaveButton('Base_edit');

    /* If the save is successful, then update validation state field (requires
     * editor_validation_state CSS class to be set on the field) and error
     * message (requires error CSS class to be set on the field) on the main
     * page. If inside maximize/fullscreen mode, display an box with the
     * result as well
     */
    function successHandler(data) {
      transition_message = $('#transition_message');
      transition_message.css('opacity', 0.0);
      transition_message.html(data);
      transition_message.animate({opacity: 1.0},
                                 {duration: 3000, queue: false});

      var maximize_fullscreen_message = data;

      var validation_state_span = $('div.input > .editor_validation_state');
      if(validation_state_span.length) {
        // Animate field to emphasize the change
        function getTranslatedValidationStateTitleHandler(data) {
          validation_state_span.css('opacity', 0.0);
          validation_state_span.html(data);
          validation_state_span.animate({opacity: 1.0},
                                        {duration: 3000, queue: false});
        }

        $.ajax({type: 'GET',
                url: 'getTranslatedValidationStateTitle',
                success: getTranslatedValidationStateTitleHandler});
      }

      updateErrorWarningMessageDivWithJump();

      // Animate fields to emphasize the change
      if(error_element.length) {
        error_element.css('opacity', 0.0);
        error_element.animate({opacity: 1.0}, {duration: 3000, queue: false});
      }

      if(warning_element.length) {
        warning_element.css('opacity', 0.0);
        warning_element.animate({opacity: 1.0}, {duration: 3000, queue: false});
      }

      if($('.maximize').length ||
         (document.fullScreenElement && document.fullScreenElement !== null &&
          (document.mozFullScreen || document.webkitIsFullScreen))) {
        var msg_elem_classes = 'ace_editor_maximize_fullscreen_message';
        if(error_arr.length || warning_arr.length) {
          maximize_fullscreen_message = (error_arr.join('<br />') + '<br />' +
                                         warning_arr.join('<br />'));

          msg_elem_classes += ' ace_editor_maximize_fullscreen_error_message';
        }

        // Clear previous saving message if any
        maximizeFullscreenRemoveSaveMessage();

        msg_elem = $('<div class=&quot;' + msg_elem_classes + '&quot;>' +
                     '<div>' + maximize_fullscreen_message + '</div></div>');

        msg_elem.appendTo($('#${div_id}'));

        function animateMessageComplete() {
          if(!error_arr.length && !warning_arr.length)
            $(this).remove();
          else
            $(this).bind('click', function() { $(this).remove() });
        }
        msg_elem.animate({opacity: 1.0}, 1500, animateMessageComplete);
      }
    }

    function errorHandler(data, textStatus) {
      alert('Saving failed: ' + textStatus);
    }

    var edit_data = $('form#main_form').serialize();
    edit_data += '&message_only:int=1';
    $.ajax({type: 'POST',
            url: 'Base_edit',
            data: edit_data,
            success: successHandler,
            error: errorHandler});

    return false;
  }

  function fillMessageElementAndArray(list, elem, arr) {
    $.each(list, function(i, dict) {
           line = dict['line'];
           column = dict['column'];
           if(line != null && column != null)
             arr.push('<a href=&quot;#&quot; onclick=&quot;c=ace_editor.getCursorPosition();c.row=' + (line - 1) + ';c.column=' + column + ';ace_editor.gotoLine(line);ace_editor.moveCursorToPosition(c);ace_editor.focus();event.stopPropagation();event.preventDefault();&quot;>' + dict['message'] + '</a>');
           else
             arr.push(dict['message']);
    });

    elem.html(arr.join('<br />'));
  }

  function getErrorWarningMessageDictHandler(data) {
    error_warning_dict = $.parseJSON(data);

    if(error_element.length) {
      error_arr.length = 0;
      fillMessageElementAndArray(error_warning_dict['error_list'],
                                 error_element, error_arr);
    }

    if(warning_element.length) {
      warning_arr.length = 0;
      fillMessageElementAndArray(error_warning_dict['warning_list'],
                                 warning_element, warning_arr);
    }
  }

  function updateErrorWarningMessageDivWithJump() {
    if(!error_element.length && !warning_element.length)
      return;

    $.ajax({type: 'GET',
            async: false,
            url: 'Component_getErrorWarningMessageDictAsJson',
            success: getErrorWarningMessageDictHandler})
  }

  window.onload = function() {
    ace_editor_container_div = $('#${container_div_id}');
    setContainerDivSize(null);
    window.onresize = setContainerDivSize;

    ace_editor = ace.edit('${div_id}');

    ace.require('ace/ext/settings_menu').init(ace_editor);
    ace_editor.commands.addCommands([{
        name: 'showSettingsMenu',
        bindKey: {win: 'Alt-p', mac: 'Alt-p'},
        exec: function(editor) { editor.showSettingsMenu(); },
        readOnly: true
    }, {name: 'save',
        bindKey: {win: 'Ctrl-S', mac: 'Command-S'},
        exec: function() {
          saveDocument($.Event('click'));
        }
    }]);
    
    ace_editor.resize(true);

    var Mode = require('ace/mode/' + mode).Mode;
    ace_editor.getSession().setMode(new Mode());
    ace_editor.getSession().setUseSoftTabs(true);
    ace_editor.getSession().setTabSize(2);

    var href_line_array = /.*?[^#]*line=(\d+)/.exec(window.location.href)
    if(href_line_array && href_line_array.length == 2) {
      ace_editor.focus();
      ace_editor.gotoLine(href_line_array[1], 0, false);
    }

    ace.require('ace/ext/language_tools');
    ace_editor.setOptions({ enableBasicAutocompletion: true, enableSnippets: true });
    var data_options = {};
    data_options.portal_type = portal_type;
    if (params !== 'None') {
      data_options.bound_names = ['context','container','script','traverse_subpath','printed','same_type','string','sequence','random','DateTime','whrandom','reorder','sets','test','math'],
      data_options.params = params;
    }
    timer = 0;
    function checkPythonSourceCode() {
      if (timer) {
        window.clearTimeout(timer);
        timer = 0;
      }
      data_options.code = ace_editor.getSession().getValue();
      timer = window.setTimeout(function() {
        $.post('${portal_url}/ERP5Site_checkPythonSourceCodeAsJSON',
          {'data': JSON.stringify(data_options)},
          function(data){
            ace_editor.getSession().setAnnotations(data.annotations);
          }
        )
      }, 500);
    }

    if (mode === 'python') {
      checkPythonSourceCode();
    }

    var textarea = $('#${id}');
    ace_editor.getSession().on('change', function() {
      changed = true; // This is the dirty flag for onbeforeunload warning in erp5.js
      textarea.val(ace_editor.getSession().getValue());
      if (mode === 'python') {
        checkPythonSourceCode();
      }
    });

    /* Only display the source code saving button if the main save button is
     * displayed. This specific save button allows to save without reloading the
     * page (and thus keep the cursor position and mode (maximize/fullscreen)
     * through an AJAX request.
     *
     * TODO: Use RenderJS instead to avoid this ugly hack as only some fields
     *       are reloaded and this is not generic at all.
     */
    if($$('div.actions > button.save[name=Base_edit:method]').length)
      $$('${save_button}').appendTo($('#${div_id}'));

    error_element = $$('div.input > .error');
    error_arr = [];
    warning_element = $$('div.input > .warning');
    warning_arr = [];

    updateErrorWarningMessageDivWithJump();

    if(typeof document.cancelFullScreen != 'undefined' ||
       (typeof document.mozFullScreenEnabled != 'undefined' && document.mozFullScreenEnabled) ||
       typeof document.webkitCancelFullScreen != 'undefined') {
      $$(document).bind('webkitfullscreenchange mozfullscreenchange fullscreenchange',
                        maximizeFullscreenRemoveSaveMessage);

      $$('${fullscreen_button}').insertAfter($$('input.ace_editor_action_button'));
    }
  };">
  </script>
</tal:block>