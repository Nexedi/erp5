<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <unicode encoding="cdata"><![CDATA[

<tal:block tal:define=\'site_root python: here.getWebSiteValue() or here.getPortalObject();\n
                       portal_url python: site_root.absolute_url();\n
                       div_id string:${id}_ace;\n
                       mode python: here.Base_getAceEditorMode();\n
                       container_div_id string:${div_id}_container;\n
                       \'>\n
  <style type="text/css">\n
  .ace_scroller {\n
    overflow-x: auto !important;\n
  }\n
\n
  .ace_sb {\n
    overflow-y: auto !important;\n
  }\n
\n
  .ace_gutter {\n
    background-color: #97B0D1 !important;\n
  }\n
\n
  .ace_content {\n
    background-color: white !important;\n
  }\n
\n
  .ace_layer {\n
    background-color: transparent !important;\n
  }\n
\n
  .field label {\n
    width: 20% !important;\n
  }\n
\n
  .ace_line {\n
    color: black !important;\n
  }\n
\n
  .ace_editor_save_button {\n
    position: absolute;\n
    top: 5px;\n
    right: 20px;\n
    width: 30px;\n
    height: 30px;\n
    border: none;\n
    background-color: transparent;\n
    cursor: pointer;\n
  }\n
\n
  .ace_editor_maximize_fullscreen_message {\n
    display: table;\n
    position: absolute;\n
    bottom: 0;\n
    right: 20px;\n
    width: 40%;\n
    z-index: 424242;\n
    padding: 20px;\n
    background-color: #DAE6F6;\n
    border: 1px solid #97B0D1;\n
    opacity: 0.3;\n
    cursor: pointer;\n
    font-weight: bold;\n
  }\n
\n
  .ace_editor_maximize_fullscreen_error_message {\n
    background-color: red;\n
  }\n
\n
  .ace_editor_maximize_fullscreen_message > div {\n
    font-size: 14px;\n
    display: table-cell;\n
    vertical-align: middle;\n
  }\n
\n
  #maximize_message {\n
    display: block !important;\n
    position: absolute !important;\n
    bottom: 0 !important;\n
    right: 0px !important;\n
    z-index: 4243 !important;\n
    padding: 10px;\n
    font-size: 16px;\n
    font-weight: bold;\n
    background-color: black;\n
    color: white;\n
  }\n
\n
  .maximize {\n
    display: block !important;\n
    position: absolute !important;\n
    top: 0 !important;\n
    left: 0 !important;\n
    z-index: 4242 !important;\n
    overflow: hidden !important;\n
  }\n
\n
  input.ace_editor_action_button {\n
    padding: 2px;\n
    margin-top: 5px;\n
    margin-right: 5px;\n
  }\n
\n
  div:full-screen {\n
    width: 100% !important;\n
    height: 100% !important;\n
  }\n
\n
  div:-webkit-full-screen  {\n
    width: 100% !important;\n
    height: 100% !important;\n
  }\n
\n
  div:-moz-full-screen {\n
    width: 100% !important;\n
    height: 100% !important;\n
  }\n
  </style>\n
\n
  <style type="text/css" tal:content="structure string:\n
  #${div_id} * {\n
    font-family: monospace !important;\n
  }">\n
  </style>\n
\n
  <input type="button" value="Maximize" onclick="maximize()"\n
         class="ace_editor_action_button" />\n
\n
  <textarea tal:attributes="id id; name id" tal:content="content"\n
            style="display: none;"></textarea>\n
\n
  <div tal:attributes="id string:${container_div_id}"\n
       style="width: 200px; height: 400px; overflow: hidden !important;\n
              border: 1px solid #97B0D1; background-color: white !important;">\n
    <div style="position: relative !important; width: 100%; height: 100%;"\n
         tal:content="content"\n
         tal:attributes="id div_id"></div>\n
  </div>\n
\n
  <script type="text/javascript"\n
          tal:attributes="src string:${portal_url}/ace/ace.js"></script>\n
  <script type="text/javascript"\n
          tal:attributes="src string:${portal_url}/ace/mode-${mode}.js"></script>\n
  <script type="text/javascript"\n
          tal:attributes="src string:${portal_url}/ace/ext-settings_menu.js"></script>\n
  <script type="text/javascript"\n
          tal:attributes="src string:${portal_url}/ace/ext-language_tools.js"></script>\n
  <script type="text/javascript"\n
          tal:define=\'fullscreen_button string:<input type="button" value="Fullscreen" onclick="switchToFullScreen()" class="ace_editor_action_button" />;\n
                      save_button string:<button class="ace_editor_save_button" onclick="saveDocument(event)"><img src="images/save2.png" width="30" height="30" border="0" /></button>;\'\n
\n
          tal:content="structure string:\n
  ace_editor_container_div = null;\n
  ace_editor = null;\n
  var mode = \'${mode}\';\n
\n
  function maximizeFullscreenRemoveSaveMessage() {\n
    $(\'.ace_editor_maximize_fullscreen_message\').remove();\n
  }\n
\n
  function switchToFullScreen(id) {\n
    element = document.getElementById(\'${container_div_id}\');\n
    if((document.fullScreenElement && document.fullScreenElement !== null) ||\n
       (!document.mozFullScreen && !document.webkitIsFullScreen)) {\n
      if (element.requestFullScreen) {\n
        element.requestFullScreen();\n
      }\n
      else if(element.mozRequestFullScreen) {\n
        element.mozRequestFullScreen();\n
      }\n
      else if(element.webkitRequestFullScreen) {\n
        element.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\n
      }\n
      ace_editor.resize(true);\n
    }\n
  }\n
\n
  function setContainerDivSize(event) {\n
    width = $(window).width() - ace_editor_container_div.offset().left * 2 - 1;\n
    if(width < 200)\n
      width = 200;\n
    ace_editor_container_div.width(width);\n
\n
    height = $(window).height() - ace_editor_container_div.offset().top * 2 - 1;\n
    if(height < 400)\n
      height = 400;\n
    ace_editor_container_div.height(height);\n
\n
    if(event != null)\n
      ace_editor.resize(true);\n
  }\n
\n
  ace_editor_container_div_parent_before_maximized = null;\n
  ace_editor_maximize_mode_message = $(\'<span id=&quot;maximize_message&quot;>Press Alt-M to leave maximize mode</span>\');\n
\n
  function unmaximize(event) {\n
    maximizeFullscreenRemoveSaveMessage();\n
    $(\'body\').css(\'overflow\', \'visible\');\n
    ace_editor_container_div.removeClass(\'maximize\');\n
    ace_editor_container_div.appendTo(ace_editor_container_div_parent_before_maximized);\n
    setContainerDivSize(event);\n
  }\n
\n
  function maximize() {\n
    body_element = $(\'body\');\n
    body_element.css(\'overflow\', \'hidden\');\n
\n
    ace_editor_container_div_parent_before_maximized = ace_editor_container_div.parent();\n
\n
    ace_editor_container_div.prependTo(body_element);\n
    ace_editor_container_div.addClass(\'maximize\');\n
    ace_editor_container_div.width($(window).width());\n
    ace_editor_container_div.height($(window).height());\n
\n
    body_element.prepend(ace_editor_maximize_mode_message);\n
    ace_editor_maximize_mode_message.css(\'opacity\', 1.0);\n
    ace_editor_maximize_mode_message.animate({opacity: 0.25}, 1500,\n
                                             function() { $(this).remove(); });\n
\n
    ace_editor.commands.addCommand({\n
      name: \'unmaximize\',\n
      bindKey: {win: \'Alt-m\', mac: \'Alt-m\'},\n
      exec: unmaximize\n
    });\n
\n
    ace_editor.resize(true);\n
    ace_editor.focus()\n
  }\n
\n
  // Save source code only through an AJAX request\n
  function saveDocument(event) {\n
    event.stopPropagation();\n
    event.preventDefault();\n
\n
    clickSaveButton(\'Base_edit\');\n
\n
    /* If the save is successful, then update validation state field (requires\n
     * editor_validation_state CSS class to be set on the field) and error\n
     * message (requires error CSS class to be set on the field) on the main\n
     * page. If inside maximize/fullscreen mode, display an box with the\n
     * result as well\n
     */\n
    function successHandler(data) {\n
      transition_message = $(\'#transition_message\');\n
      transition_message.css(\'opacity\', 0.0);\n
      transition_message.html(data);\n
      transition_message.animate({opacity: 1.0},\n
                                 {duration: 3000, queue: false});\n
\n
      var maximize_fullscreen_message = data;\n
\n
      var validation_state_span = $(\'div.input > .editor_validation_state\');\n
      if(validation_state_span.length) {\n
        // Animate field to emphasize the change\n
        function getTranslatedValidationStateTitleHandler(data) {\n
          validation_state_span.css(\'opacity\', 0.0);\n
          validation_state_span.html(data);\n
          validation_state_span.animate({opacity: 1.0},\n
                                        {duration: 3000, queue: false});\n
        }\n
\n
        $.ajax({type: \'GET\',\n
                url: \'getTranslatedValidationStateTitle\',\n
                success: getTranslatedValidationStateTitleHandler});\n
      }\n
\n
      updateErrorWarningMessageDivWithJump();\n
\n
      // Animate fields to emphasize the change\n
      if(error_element.length) {\n
        error_element.css(\'opacity\', 0.0);\n
        error_element.animate({opacity: 1.0}, {duration: 3000, queue: false});\n
      }\n
\n
      if(warning_element.length) {\n
        warning_element.css(\'opacity\', 0.0);\n
        warning_element.animate({opacity: 1.0}, {duration: 3000, queue: false});\n
      }\n
\n
      if($(\'.maximize\').length ||\n
         (document.fullScreenElement && document.fullScreenElement !== null &&\n
          (document.mozFullScreen || document.webkitIsFullScreen))) {\n
        var msg_elem_classes = \'ace_editor_maximize_fullscreen_message\';\n
        if(error_arr.length || warning_arr.length) {\n
          maximize_fullscreen_message = (error_arr.join(\'<br />\') + \'<br />\' +\n
                                         warning_arr.join(\'<br />\'));\n
\n
          msg_elem_classes += \' ace_editor_maximize_fullscreen_error_message\';\n
        }\n
\n
        // Clear previous saving message if any\n
        maximizeFullscreenRemoveSaveMessage();\n
\n
        msg_elem = $(\'<div class=&quot;\' + msg_elem_classes + \'&quot;>\' +\n
                     \'<div>\' + maximize_fullscreen_message + \'</div></div>\');\n
\n
        msg_elem.appendTo($(\'#${div_id}\'));\n
\n
        function animateMessageComplete() {\n
          if(!error_arr.length && !warning_arr.length)\n
            $(this).remove();\n
          else\n
            $(this).bind(\'click\', function() { $(this).remove() });\n
        }\n
        msg_elem.animate({opacity: 1.0}, 1500, animateMessageComplete);\n
      }\n
    }\n
\n
    function errorHandler(data, textStatus) {\n
      alert(\'Saving failed: \' + textStatus);\n
    }\n
\n
    var edit_data = $(\'form#main_form\').serialize();\n
    edit_data += \'&message_only:int=1\';\n
    $.ajax({type: \'POST\',\n
            url: \'Base_edit\',\n
            data: edit_data,\n
            success: successHandler,\n
            error: errorHandler});\n
\n
    return false;\n
  }\n
\n
  function fillMessageElementAndArray(list, elem, arr) {\n
    $.each(list, function(i, dict) {\n
           line = dict[\'line\'];\n
           column = dict[\'column\'];\n
           if(line != null && column != null)\n
             arr.push(\'<a href=&quot;#&quot; onclick=&quot;c=ace_editor.getCursorPosition();c.row=\' + (line - 1) + \';c.column=\' + column + \';ace_editor.gotoLine(line);ace_editor.moveCursorToPosition(c);ace_editor.focus();event.stopPropagation();event.preventDefault();&quot;>\' + dict[\'message\'] + \'</a>\');\n
           else\n
             arr.push(dict[\'message\']);\n
    });\n
\n
    elem.html(arr.join(\'<br />\'));\n
  }\n
\n
  function getErrorWarningMessageDictHandler(data) {\n
    error_warning_dict = $.parseJSON(data);\n
\n
    if(error_element.length) {\n
      error_arr.length = 0;\n
      fillMessageElementAndArray(error_warning_dict[\'error_list\'],\n
                                 error_element, error_arr);\n
    }\n
\n
    if(warning_element.length) {\n
      warning_arr.length = 0;\n
      fillMessageElementAndArray(error_warning_dict[\'warning_list\'],\n
                                 warning_element, warning_arr);\n
    }\n
  }\n
\n
  function updateErrorWarningMessageDivWithJump() {\n
    if(!error_element.length && !warning_element.length)\n
      return;\n
\n
    $.ajax({type: \'GET\',\n
            async: false,\n
            url: \'Component_getErrorWarningMessageDictAsJson\',\n
            success: getErrorWarningMessageDictHandler})\n
  }\n
\n
  window.onload = function() {\n
    ace_editor_container_div = $(\'#${container_div_id}\');\n
    setContainerDivSize(null);\n
    window.onresize = setContainerDivSize;\n
\n
    ace_editor = ace.edit(\'${div_id}\');\n
\n
    ace.require(\'ace/ext/settings_menu\').init(ace_editor);\n
    ace_editor.commands.addCommands([{\n
        name: \'showSettingsMenu\',\n
        bindKey: {win: \'Alt-p\', mac: \'Alt-p\'},\n
        exec: function(editor) { editor.showSettingsMenu(); },\n
        readOnly: true\n
    }, {name: \'save\',\n
        bindKey: {win: \'Ctrl-S\', mac: \'Command-S\'},\n
        exec: function() {\n
          saveDocument($.Event(\'click\'));\n
        }\n
    }]);\n
    \n
    ace_editor.resize(true);\n
\n
    var Mode = require(\'ace/mode/\' + mode).Mode;\n
    ace_editor.getSession().setMode(new Mode());\n
    ace_editor.getSession().setUseSoftTabs(true);\n
    ace_editor.getSession().setTabSize(2);\n
\n
    var href_line_array = /.*?[^#]*line=(\\d+)/.exec(window.location.href)\n
    if(href_line_array && href_line_array.length == 2) {\n
      ace_editor.focus();\n
      ace_editor.gotoLine(href_line_array[1], 0, false);\n
    }\n
\n
    ace.require(\'ace/ext/language_tools\');\n
    ace_editor.setOptions({ enableBasicAutocompletion: true, enableSnippets: true });\n
\n
    timer = 0;\n
    function checkPythonSourceCode() {\n
      if (timer) {\n
        window.clearTimeout(timer);\n
        timer = 0;\n
      }\n
      timer = window.setTimeout(function() {\n
        $.post(\'${portal_url}/ERP5Site_checkPythonSourceCodeAsJSON\',\n
          {\'data\': JSON.stringify(\n
          { code: ace_editor.getSession().getValue() })},\n
          function(data){\n
            ace_editor.getSession().setAnnotations(data.annotations);\n
          }\n
        )\n
      }, 500);\n
    }\n
\n
    if (mode === \'python\') {\n
      checkPythonSourceCode();\n
    }\n
\n
    var textarea = $(\'#${id}\');\n
    ace_editor.getSession().on(\'change\', function() {\n
      changed = true; // This is the dirty flag for onbeforeunload warning in erp5.js\n
      textarea.val(ace_editor.getSession().getValue());\n
      if (mode === \'python\') {\n
        checkPythonSourceCode();\n
      }\n
    });\n
\n
    /* Only display the source code saving button if the main save button is\n
     * displayed. This specific save button allows to save without reloading the\n
     * page (and thus keep the cursor position and mode (maximize/fullscreen)\n
     * through an AJAX request.\n
     *\n
     * TODO: Use RenderJS instead to avoid this ugly hack as only some fields\n
     *       are reloaded and this is not generic at all.\n
     */\n
    if($$(\'div.actions > button.save[name=Base_edit:method]\').length)\n
      $$(\'${save_button}\').appendTo($(\'#${div_id}\'));\n
\n
    error_element = $$(\'div.input > .error\');\n
    error_arr = [];\n
    warning_element = $$(\'div.input > .warning\');\n
    warning_arr = [];\n
\n
    updateErrorWarningMessageDivWithJump();\n
\n
    if(typeof document.cancelFullScreen != \'undefined\' ||\n
       (typeof document.mozFullScreenEnabled != \'undefined\' && document.mozFullScreenEnabled) ||\n
       typeof document.webkitCancelFullScreen != \'undefined\') {\n
      $$(document).bind(\'webkitfullscreenchange mozfullscreenchange fullscreenchange\',\n
                        maximizeFullscreenRemoveSaveMessage);\n
\n
      $$(\'${fullscreen_button}\').insertAfter($$(\'input.ace_editor_action_button\'));\n
    }\n
  };">\n
  </script>\n
</tal:block>

]]></unicode> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>ace_editor_support</string> </value>
        </item>
        <item>
            <key> <string>output_encoding</string> </key>
            <value> <string>utf-8</string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <unicode></unicode> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
