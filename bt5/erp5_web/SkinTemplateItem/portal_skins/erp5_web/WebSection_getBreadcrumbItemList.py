"""
 This script is part of ERP5 Web

 ERP5 Web is a business template of ERP5 which provides a way
 to create web sites which can display selected
 ERP5 contents through multiple custom web layouts.

 This script returns a list of tuples in the form
 (title, value) where title is the *translated* title of the
 document provided as value. The document value
 must be wrapped in the acquisition context
 (ex. Web Site / Section / Module / Document).

 The reason why the title is generated by this script
 is because the layout of a breadcrumb (ex. horizontal,
 vertical, tree, etc.) is independent of the kind of
 titles we want to use to represent each the breadcrumb
 items. It is therefore the responsability of this
 script to decide how to identify a document which will
 be displayed in a breadcrumb (ex. by title,
 by short title, by reference, by version) and to translate
 whatever is relevant to be translated.

 Page templates which use this script
 and need to generate the URLs of document values
 should use the getPermanentURL API (called on the
 current section) in order to benefit from
 virtual hosting features and in order to make sure
 that generated URLs are as much as possible permanent
 URLs. Never use getUrl or getPath to generate URLs.
 You may also use absolute_url but in this case you
 will lose all the benefits from permanent URLs.

 As a rule of thumb: for viewable content, use
 getPermanentURL; for editable content, use absolute_url

 This script should be customised if necessary to
 implement Web Section specific breadcrumb behaviour.
 Typical behaviours include:

 - CMS like breadcrumb (hierarchy of contents)
 
 - Wiki like breadcrumb (history of navigation)
 
 - or any other behaviour

 The default implementation is hierarchical.

 Customisation can be portal_type based, class based
 or can simply result from putting a WebSection_getBreadcrumbItemList
 directly inside a given section rather than in a skin
 folder. The later is recommended for hosting
 multiple sites on a single ERP5Site instance.
"""
from zExceptions import Unauthorized
if document is None: document = context
crumb_list = []

# Implementation consists in browsing the aq_parent sequence
web_site = context.getWebSiteValue()
chain_list = document.Base_getAcquisitionParentValueList(upper_portal_type='Web Site')
chain_list.reverse()

last_breadcrumb_offset = 1
max_breadcrumb_length = web_site.getLayoutProperty('layout_max_breadcrumb_length', None)
chain_list_length = len(chain_list)

is_web_section_default_document = bool(context.REQUEST.get('is_web_section_default_document', False))
if is_web_section_default_document:
  last_breadcrumb_offset = 2

for chain_index in xrange(0, chain_list_length):
  try:
    crumb = chain_list[chain_index]
    if chain_index == 0:
      title = context.Base_translateString('Home')
    else:
      title = crumb.Base_getTitle()
  except Unauthorized:
    # We should ignore any item in the chain which raises 
    # a security exception. We use a catchall except here
    # because there is no way to import Unauthorized permission
    title = None

  if title is not None:
    full_title = title
    # shorten it only if it exceeds maximum specified length or
    # not last element in breadcrumb (include default Web Page which is not show but part of chain_list)
    if max_breadcrumb_length is not None and \
       (chain_index + last_breadcrumb_offset < chain_list_length) and \
       (len(title) - 4 > max_breadcrumb_length):
      title = '%s ...' %(title[:max_breadcrumb_length])
    crumb_list.append((title, crumb, full_title))

return crumb_list
