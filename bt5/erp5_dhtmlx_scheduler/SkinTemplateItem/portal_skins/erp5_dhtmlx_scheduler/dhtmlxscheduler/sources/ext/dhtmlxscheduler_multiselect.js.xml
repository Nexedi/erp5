<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts65189554.87</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>dhtmlxscheduler_multiselect.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/*\r\n
@license\r\n
dhtmlxScheduler v.4.3.1 \r\n
\r\n
This software is covered by GPL license. You also can obtain Commercial or Enterprise license to use it in non-GPL project - please contact sales@dhtmlx.com. Usage without proper license is prohibited.\r\n
\r\n
(c) Dinamenta, UAB.\r\n
*/\r\n
scheduler.form_blocks["multiselect"]={\r\n
\trender:function(sns) {\r\n
\t\tvar _result = "<div class=\'dhx_multi_select_"+sns.name+"\' style=\'overflow: auto; height: "+sns.height+"px; position: relative;\' >";\r\n
\t\tfor (var i=0; i<sns.options.length; i++) {\r\n
\t\t\t_result += "<label><input type=\'checkbox\' value=\'"+sns.options[i].key+"\'/>"+sns.options[i].label+"</label>";\r\n
\t\t\tif(convertStringToBoolean(sns.vertical)) _result += \'<br/>\';\r\n
\t\t}\r\n
\t\t_result += "</div>";\r\n
\t\treturn _result;\r\n
\t},\r\n
\tset_value:function(node,value,ev,config){\r\n
\t\t\r\n
\t\tvar _children = node.getElementsByTagName(\'input\');\r\n
\t\tfor(var i=0;i<_children.length;i++) {\r\n
\t\t\t_children[i].checked = false; //unchecking all inputs on the form\r\n
\t\t}\r\n
\t\t\r\n
\t\tfunction _mark_inputs(ids) { // ids = [ 0: undefined, 1: undefined, 2: true, \'custom_name\': false ... ]\r\n
\t\t\tvar _children = node.getElementsByTagName(\'input\');\r\n
\t\t\tfor(var i=0;i<_children.length; i++) {\r\n
\t\t\t\t_children[i].checked = !! ids[_children[i].value];\r\n
\t\t\t}\t\t\t\r\n
\t\t}\r\n
\r\n
\t\tvar _ids = {};\r\n
\t\tif (ev[config.map_to]) {\r\n
\t\t\tvar results = (ev[config.map_to] + "").split(\',\');\r\n
\t\t\tfor (var i = 0; i < results.length; i++) {\r\n
\t\t\t\t_ids[results[i]] = true;\r\n
\t\t\t}\r\n
\t\t\t_mark_inputs(_ids);\r\n
\t\t} else {\r\n
\t\t\tif (scheduler._new_event || !config.script_url)\r\n
\t\t\t\treturn;\r\n
\t\t\tvar divLoading = document.createElement(\'div\');\r\n
\t\t\tdivLoading.className = \'dhx_loading\';\r\n
\t\t\tdivLoading.style.cssText = "position: absolute; top: 40%; left: 40%;";\r\n
\t\t\tnode.appendChild(divLoading);\r\n
\t\t\tdhtmlxAjax.get(config.script_url + \'?dhx_crosslink_\' + config.map_to + \'=\' + ev.id + \'&uid=\' + scheduler.uid(), function(loader) {\r\n
\t\t\t\tvar _result = loader.doXPath("//data/item");\r\n
\t\t\t\tvar _ids = {};\r\n
\t\t\t\tfor (var i = 0; i < _result.length; i++) {\r\n
\t\t\t\t\t_ids[_result[i].getAttribute(config.map_to)] = true;\r\n
\t\t\t\t}\r\n
\t\t\t\t_mark_inputs(_ids);\r\n
\t\t\t\tnode.removeChild(divLoading);\r\n
\t\t\t});\r\n
\t\t}\r\n
\t},\r\n
\tget_value:function(node,ev,config){\r\n
\t\tvar _result = [];\r\n
\t\tvar _children = node.getElementsByTagName("input");\r\n
\t\tfor(var i=0;i<_children.length;i++) {\r\n
\t\t\tif(_children[i].checked)\r\n
\t\t\t\t_result.push(_children[i].value); \r\n
\t\t}\r\n
\t\treturn _result.join(\',\'); \r\n
\t},\r\n
\t\r\n
\tfocus:function(node){\r\n
\t}\r\n
};

]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>2432</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
