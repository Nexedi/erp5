<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts65189536.25</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>dhtmlxscheduler.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>195132</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/*\r\n
@license\r\n
dhtmlxScheduler v.4.3.1 \r\n
\r\n
This software is covered by GPL license. You also can obtain Commercial or Enterprise license to use it in non-GPL project - please contact sales@dhtmlx.com. Usage without proper license is prohibited.\r\n
\r\n
(c) Dinamenta, UAB.\r\n
*/\r\n
window.dhtmlXScheduler = window.scheduler = { version: "4.3.1" };\r\n
\r\n
if (!window.dhtmlx) {\r\n
\tdhtmlx = function(obj){\r\n
\t\tfor (var a in obj) dhtmlx[a]=obj[a];\r\n
\t\treturn dhtmlx; //simple singleton\r\n
\t};\r\n
}\r\n
dhtmlx.extend_api=function(name,map,ext){\r\n
    var t = window[name];\r\n
    if (!t) return; //component not defined\r\n
    window[name]=function(obj){\r\n
        var that;\r\n
\r\n
        if (obj && typeof obj == "object" && !obj.tagName){\r\n
            that = t.apply(this,(map._init?map._init(obj):arguments));\r\n
            //global settings\r\n
            for (var a in dhtmlx)\r\n
                if (map[a]) this[map[a]](dhtmlx[a]);\r\n
            //local settings\r\n
            for (var a in obj){\r\n
                if (map[a]) this[map[a]](obj[a]);\r\n
                else if (a.indexOf("on")===0){\r\n
                    this.attachEvent(a,obj[a]);\r\n
                }\r\n
            }\r\n
        } else\r\n
            that = t.apply(this,arguments);\r\n
        if (map._patch) map._patch(this);\r\n
        return that||this;\r\n
    };\r\n
    window[name].prototype=t.prototype;\r\n
    if (ext)\r\n
        dhtmlXHeir(window[name].prototype,ext);\r\n
};\r\n
\r\n
dhtmlxAjax={\r\n
    get:function(url,callback){\r\n
        var t=new dtmlXMLLoaderObject(true);\r\n
        t.async=(arguments.length<3);\r\n
        t.waitCall=callback;\r\n
        t.loadXML(url);\r\n
        return t;\r\n
    },\r\n
    post:function(url,post,callback){\r\n
        var t=new dtmlXMLLoaderObject(true);\r\n
        t.async=(arguments.length<4);\r\n
        t.waitCall=callback;\r\n
        t.loadXML(url,true,post);\r\n
        return t;\r\n
    },\r\n
    getSync:function(url){\r\n
        return this.get(url,null,true);\r\n
    },\r\n
    postSync:function(url,post){\r\n
        return this.post(url,post,null,true);\r\n
    }\r\n
};\r\n
\r\n
/**\r\n
 *     @desc: xmlLoader object\r\n
 *     @type: private\r\n
 *     @param: funcObject - xml parser function\r\n
 *     @param: object - jsControl object\r\n
 *     @param: async - sync/async mode (async by default)\r\n
 *     @param: rSeed - enable/disable random seed ( prevent IE caching)\r\n
 *     @topic: 0\r\n
 */\r\n
function dtmlXMLLoaderObject(funcObject, dhtmlObject, async, rSeed){\r\n
    this.xmlDoc="";\r\n
\r\n
    if (typeof (async) != "undefined")\r\n
        this.async=async;\r\n
    else\r\n
        this.async=true;\r\n
\r\n
    this.onloadAction=funcObject||null;\r\n
    this.mainObject=dhtmlObject||null;\r\n
    this.waitCall=null;\r\n
    this.rSeed=rSeed||false;\r\n
    return this;\r\n
}\r\n
\r\n
dtmlXMLLoaderObject.count = 0;\r\n
\r\n
/**\r\n
 *     @desc: xml loading handler\r\n
 *     @type: private\r\n
 *     @param: dtmlObject - xmlLoader object\r\n
 *     @topic: 0\r\n
 */\r\n
dtmlXMLLoaderObject.prototype.waitLoadFunction=function(dhtmlObject){\r\n
    var once = true;\r\n
    this.check=function (){\r\n
        if ((dhtmlObject)&&(dhtmlObject.onloadAction)){\r\n
            if ((!dhtmlObject.xmlDoc.readyState)||(dhtmlObject.xmlDoc.readyState == 4)){\r\n
                if (!once)\r\n
                    return;\r\n
\r\n
                once=false; //IE 5 fix\r\n
                dtmlXMLLoaderObject.count++;\r\n
                if (typeof dhtmlObject.onloadAction == "function")\r\n
                    dhtmlObject.onloadAction(dhtmlObject.mainObject, null, null, null, dhtmlObject);\r\n
\r\n
                if (dhtmlObject.waitCall){\r\n
                    dhtmlObject.waitCall.call(this,dhtmlObject);\r\n
                    dhtmlObject.waitCall=null;\r\n
                }\r\n
            }\r\n
        }\r\n
    };\r\n
    return this.check;\r\n
};\r\n
\r\n
/**\r\n
 *     @desc: return XML top node\r\n
 *     @param: tagName - top XML node tag name (not used in IE, required for Safari and Mozilla)\r\n
 *     @type: private\r\n
 *     @returns: top XML node\r\n
 *     @topic: 0\r\n
 */\r\n
dtmlXMLLoaderObject.prototype.getXMLTopNode=function(tagName, oldObj){\r\n
    var z;\r\n
\r\n
    if (this.xmlDoc.responseXML){\r\n
        var temp = this.xmlDoc.responseXML.getElementsByTagName(tagName);\r\n
        if(temp.length === 0 && tagName.indexOf(":")!=-1)\r\n
            var temp = this.xmlDoc.responseXML.getElementsByTagName((tagName.split(":"))[1]);\r\n
        z = temp[0];\r\n
    } else\r\n
        z = this.xmlDoc.documentElement;\r\n
\r\n
    if (z){\r\n
        this._retry=false;\r\n
        return z;\r\n
    }\r\n
\r\n
    if (!this._retry&&_isIE){\r\n
        this._retry=true;\r\n
        var oldObj = this.xmlDoc;\r\n
        this.loadXMLString(this.xmlDoc.responseText.replace(/^[\\s]+/,""), true);\r\n
        return this.getXMLTopNode(tagName, oldObj);\r\n
    }\r\n
\r\n
    dhtmlxError.throwError("LoadXML", "Incorrect XML", [\r\n
        (oldObj||this.xmlDoc),\r\n
        this.mainObject\r\n
    ]);\r\n
\r\n
    return document.createElement("DIV");\r\n
};\r\n
\r\n
/**\r\n
 *     @desc: load XML from string\r\n
 *     @type: private\r\n
 *     @param: xmlString - xml string\r\n
 *     @topic: 0\r\n
 */\r\n
dtmlXMLLoaderObject.prototype.loadXMLString=function(xmlString, silent){\r\n
\r\n
    if (!_isIE){\r\n
        var parser = new DOMParser();\r\n
        this.xmlDoc=parser.parseFromString(xmlString, "text/xml");\r\n
    } else {\r\n
        this.xmlDoc=new ActiveXObject("Microsoft.XMLDOM");\r\n
        this.xmlDoc.async=this.async;\r\n
        this.xmlDoc.onreadystatechange = function(){};\r\n
        this.xmlDoc["loadXM"+"L"](xmlString);\r\n
    }\r\n
\r\n
    if (silent)\r\n
        return;\r\n
\r\n
    if (this.onloadAction)\r\n
        this.onloadAction(this.mainObject, null, null, null, this);\r\n
\r\n
    if (this.waitCall){\r\n
        this.waitCall();\r\n
        this.waitCall=null;\r\n
    }\r\n
};\r\n
/**\r\n
 *     @desc: load XML\r\n
 *     @type: private\r\n
 *     @param: filePath - xml file path\r\n
 *     @param: postMode - send POST request\r\n
 *     @param: postVars - list of vars for post request\r\n
 *     @topic: 0\r\n
 */\r\n
dtmlXMLLoaderObject.prototype.loadXML=function(filePath, postMode, postVars, rpc){\r\n
    if (this.rSeed)\r\n
        filePath+=((filePath.indexOf("?") != -1) ? "&" : "?")+"a_dhx_rSeed="+(new Date()).valueOf();\r\n
    this.filePath=filePath;\r\n
\r\n
    if ((!_isIE)&&(window.XMLHttpRequest))\r\n
        this.xmlDoc=new XMLHttpRequest();\r\n
    else {\r\n
        this.xmlDoc=new ActiveXObject("Microsoft.XMLHTTP");\r\n
    }\r\n
\r\n
    if (this.async)\r\n
        this.xmlDoc.onreadystatechange=new this.waitLoadFunction(this);\r\n
    if (typeof postMode == "string")\r\n
        this.xmlDoc.open(postMode, filePath, this.async);\r\n
    else\r\n
        this.xmlDoc.open(postMode ? "POST" : "GET", filePath, this.async);\r\n
\r\n
    if (rpc){\r\n
        this.xmlDoc.setRequestHeader("User-Agent", "dhtmlxRPC v0.1 ("+navigator.userAgent+")");\r\n
        this.xmlDoc.setRequestHeader("Content-type", "text/xml");\r\n
    }\r\n
\r\n
    else if (postMode)\r\n
        this.xmlDoc.setRequestHeader(\'Content-type\', \'application/x-www-form-urlencoded\');\r\n
\r\n
    this.xmlDoc.setRequestHeader("X-Requested-With","XMLHttpRequest");\r\n
    this.xmlDoc.send(null||postVars);\r\n
\r\n
    if (!this.async)\r\n
        (new this.waitLoadFunction(this))();\r\n
};\r\n
/**\r\n
 *     @desc: destructor, cleans used memory\r\n
 *     @type: private\r\n
 *     @topic: 0\r\n
 */\r\n
dtmlXMLLoaderObject.prototype.destructor=function(){\r\n
    this._filterXPath = null;\r\n
    this._getAllNamedChilds = null;\r\n
    this._retry = null;\r\n
    this.async = null;\r\n
    this.rSeed = null;\r\n
    this.filePath = null;\r\n
    this.onloadAction = null;\r\n
    this.mainObject = null;\r\n
    this.xmlDoc = null;\r\n
    this.doXPath = null;\r\n
    this.doXPathOpera = null;\r\n
    this.doXSLTransToObject = null;\r\n
    this.doXSLTransToString = null;\r\n
    this.loadXML = null;\r\n
    this.loadXMLString = null;\r\n
    // this.waitLoadFunction = null;\r\n
    this.doSerialization = null;\r\n
    this.xmlNodeToJSON = null;\r\n
    this.getXMLTopNode = null;\r\n
    this.setXSLParamValue = null;\r\n
    return null;\r\n
};\r\n
\r\n
dtmlXMLLoaderObject.prototype.xmlNodeToJSON = function(node){\r\n
    var t={};\r\n
    for (var i=0; i<node.attributes.length; i++)\r\n
        t[node.attributes[i].name]=node.attributes[i].value;\r\n
    t["_tagvalue"]=node.firstChild?node.firstChild.nodeValue:"";\r\n
    for (var i=0; i<node.childNodes.length; i++){\r\n
        var name=node.childNodes[i].tagName;\r\n
        if (name){\r\n
            if (!t[name]) t[name]=[];\r\n
            t[name].push(this.xmlNodeToJSON(node.childNodes[i]));\r\n
        }\r\n
    }\r\n
    return t;\r\n
};\r\n
\r\n
/**\r\n
 *     @desc: Call wrapper\r\n
 *     @type: private\r\n
 *     @param: funcObject - action handler\r\n
 *     @param: dhtmlObject - user data\r\n
 *     @returns: function handler\r\n
 *     @topic: 0\r\n
 */\r\n
function callerFunction(funcObject, dhtmlObject){\r\n
    this.handler=function(e){\r\n
        if (!e)\r\n
            e=window.event;\r\n
        funcObject(e, dhtmlObject);\r\n
        return true;\r\n
    };\r\n
    return this.handler;\r\n
}\r\n
\r\n
/**\r\n
 *     @desc: Calculate absolute position of html object\r\n
 *     @type: private\r\n
 *     @param: htmlObject - html object\r\n
 *     @topic: 0\r\n
 */\r\n
function getAbsoluteLeft(htmlObject){\r\n
    return getOffset(htmlObject).left;\r\n
}\r\n
/**\r\n
 *     @desc: Calculate absolute position of html object\r\n
 *     @type: private\r\n
 *     @param: htmlObject - html object\r\n
 *     @topic: 0\r\n
 */\r\n
function getAbsoluteTop(htmlObject){\r\n
    return getOffset(htmlObject).top;\r\n
}\r\n
\r\n
function getOffsetSum(elem) {\r\n
    var top=0, left=0;\r\n
    while(elem) {\r\n
        top = top + parseInt(elem.offsetTop);\r\n
        left = left + parseInt(elem.offsetLeft);\r\n
        elem = elem.offsetParent;\r\n
    }\r\n
    return {top: top, left: left};\r\n
}\r\n
function getOffsetRect(elem) {\r\n
    var box = elem.getBoundingClientRect();\r\n
    var body = document.body;\r\n
    var docElem = document.documentElement;\r\n
    var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\r\n
    var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\r\n
    var clientTop = docElem.clientTop || body.clientTop || 0;\r\n
    var clientLeft = docElem.clientLeft || body.clientLeft || 0;\r\n
    var top  = box.top +  scrollTop - clientTop;\r\n
    var left = box.left + scrollLeft - clientLeft;\r\n
    return { top: Math.round(top), left: Math.round(left) };\r\n
}\r\n
function getOffset(elem) {\r\n
    if (elem.getBoundingClientRect) {\r\n
        return getOffsetRect(elem);\r\n
    } else {\r\n
        return getOffsetSum(elem);\r\n
    }\r\n
}\r\n
\r\n
/**\r\n
 *     @desc: Convert string to it boolean representation\r\n
 *     @type: private\r\n
 *     @param: inputString - string for covertion\r\n
 *     @topic: 0\r\n
 */\r\n
function convertStringToBoolean(inputString){\r\n
    if (typeof (inputString) == "string")\r\n
        inputString=inputString.toLowerCase();\r\n
\r\n
    switch (inputString){\r\n
        case "1":\r\n
        case "true":\r\n
        case "yes":\r\n
        case "y":\r\n
        case 1:\r\n
        case true:\r\n
            return true;\r\n
        default:\r\n
            return false;\r\n
    }\r\n
}\r\n
\r\n
/**\r\n
 *     @desc: find out what symbol to use as url param delimiters in further params\r\n
 *     @type: private\r\n
 *     @param: str - current url string\r\n
 *     @topic: 0\r\n
 */\r\n
function getUrlSymbol(str){\r\n
    if (str.indexOf("?") != -1)\r\n
        return "&";\r\n
    else\r\n
        return "?";\r\n
}\r\n
\r\n
function dhtmlDragAndDropObject(){\r\n
    if (window.dhtmlDragAndDrop)\r\n
        return window.dhtmlDragAndDrop;\r\n
\r\n
    this.lastLanding=0;\r\n
    this.dragNode=0;\r\n
    this.dragStartNode=0;\r\n
    this.dragStartObject=0;\r\n
    this.tempDOMU=null;\r\n
    this.tempDOMM=null;\r\n
    this.waitDrag=0;\r\n
    window.dhtmlDragAndDrop=this;\r\n
\r\n
    return this;\r\n
}\r\n
\r\n
dhtmlDragAndDropObject.prototype.removeDraggableItem=function(htmlNode){\r\n
    htmlNode.onmousedown=null;\r\n
    htmlNode.dragStarter=null;\r\n
    htmlNode.dragLanding=null;\r\n
};\r\n
\r\n
dhtmlDragAndDropObject.prototype.addDraggableItem=function(htmlNode, dhtmlObject){\r\n
    htmlNode.onmousedown=this.preCreateDragCopy;\r\n
    htmlNode.dragStarter=dhtmlObject;\r\n
    this.addDragLanding(htmlNode, dhtmlObject);\r\n
};\r\n
\r\n
dhtmlDragAndDropObject.prototype.addDragLanding=function(htmlNode, dhtmlObject){\r\n
    htmlNode.dragLanding=dhtmlObject;\r\n
};\r\n
\r\n
dhtmlDragAndDropObject.prototype.preCreateDragCopy=function(e){\r\n
    if ((e||window.event) && (e||event).button == 2)\r\n
        return;\r\n
\r\n
    if (window.dhtmlDragAndDrop.waitDrag){\r\n
        window.dhtmlDragAndDrop.waitDrag=0;\r\n
        document.body.onmouseup=window.dhtmlDragAndDrop.tempDOMU;\r\n
        document.body.onmousemove=window.dhtmlDragAndDrop.tempDOMM;\r\n
        return false;\r\n
    }\r\n
\r\n
    if (window.dhtmlDragAndDrop.dragNode)\r\n
        window.dhtmlDragAndDrop.stopDrag(e);\r\n
\r\n
    window.dhtmlDragAndDrop.waitDrag=1;\r\n
    window.dhtmlDragAndDrop.tempDOMU=document.body.onmouseup;\r\n
    window.dhtmlDragAndDrop.tempDOMM=document.body.onmousemove;\r\n
    window.dhtmlDragAndDrop.dragStartNode=this;\r\n
    window.dhtmlDragAndDrop.dragStartObject=this.dragStarter;\r\n
    document.body.onmouseup=window.dhtmlDragAndDrop.preCreateDragCopy;\r\n
    document.body.onmousemove=window.dhtmlDragAndDrop.callDrag;\r\n
    window.dhtmlDragAndDrop.downtime = new Date().valueOf();\r\n
\r\n
\r\n
    if ((e)&&(e.preventDefault)){\r\n
        e.preventDefault();\r\n
        return false;\r\n
    }\r\n
    return false;\r\n
};\r\n
\r\n
dhtmlDragAndDropObject.prototype.callDrag=function(e){\r\n
    if (!e)\r\n
        e=window.event;\r\n
    var dragger=window.dhtmlDragAndDrop;\r\n
    if ((new Date()).valueOf()-dragger.downtime<100) return;\r\n
\r\n
    //if ((e.button == 0)&&(_isIE))\r\n
    //\treturn dragger.stopDrag();\r\n
\r\n
    if (!dragger.dragNode){\r\n
        if (dragger.waitDrag){\r\n
            dragger.dragNode=dragger.dragStartObject._createDragNode(dragger.dragStartNode, e);\r\n
\r\n
            if (!dragger.dragNode)\r\n
                return dragger.stopDrag();\r\n
\r\n
            dragger.dragNode.onselectstart=function(){return false;};\r\n
            dragger.gldragNode=dragger.dragNode;\r\n
            document.body.appendChild(dragger.dragNode);\r\n
            document.body.onmouseup=dragger.stopDrag;\r\n
            dragger.waitDrag=0;\r\n
            dragger.dragNode.pWindow=window;\r\n
            dragger.initFrameRoute();\r\n
        }\r\n
        else return dragger.stopDrag(e, true);\r\n
    }\r\n
\r\n
    if (dragger.dragNode.parentNode != window.document.body && dragger.gldragNode){\r\n
        var grd = dragger.gldragNode;\r\n
\r\n
        if (dragger.gldragNode.old)\r\n
            grd=dragger.gldragNode.old;\r\n
\r\n
        //if (!document.all) dragger.calculateFramePosition();\r\n
        grd.parentNode.removeChild(grd);\r\n
        var oldBody = dragger.dragNode.pWindow;\r\n
\r\n
        if (grd.pWindow &&\tgrd.pWindow.dhtmlDragAndDrop.lastLanding)\r\n
            grd.pWindow.dhtmlDragAndDrop.lastLanding.dragLanding._dragOut(grd.pWindow.dhtmlDragAndDrop.lastLanding);\r\n
\r\n
        //\t\tvar oldp=dragger.dragNode.parentObject;\r\n
        if (_isIE){\r\n
            var div = document.createElement("Div");\r\n
            div.innerHTML=dragger.dragNode.outerHTML;\r\n
            dragger.dragNode=div.childNodes[0];\r\n
        } else\r\n
            dragger.dragNode=dragger.dragNode.cloneNode(true);\r\n
\r\n
        dragger.dragNode.pWindow=window;\r\n
        //\t\tdragger.dragNode.parentObject=oldp;\r\n
\r\n
        dragger.gldragNode.old=dragger.dragNode;\r\n
        document.body.appendChild(dragger.dragNode);\r\n
        oldBody.dhtmlDragAndDrop.dragNode=dragger.dragNode;\r\n
    }\r\n
\r\n
    dragger.dragNode.style.left=e.clientX+15 + \r\n
        (dragger.fx ? dragger.fx*(-1) : 0) +\r\n
        (document.body.scrollLeft||document.documentElement.scrollLeft)+"px";\r\n
    dragger.dragNode.style.top=e.clientY+3+\r\n
        (dragger.fy ? dragger.fy*(-1) : 0) +\r\n
        (document.body.scrollTop||document.documentElement.scrollTop)+"px";\r\n
\r\n
    var z;\r\n
    if (!e.srcElement)\r\n
        z = e.target;\r\n
    else\r\n
        z=e.srcElement;\r\n
    dragger.checkLanding(z, e);\r\n
};\r\n
\r\n
dhtmlDragAndDropObject.prototype.calculateFramePosition=function(n){\r\n
    //this.fx = 0, this.fy = 0;\r\n
    if (window.name){\r\n
        var el = parent.frames[window.name].frameElement.offsetParent;\r\n
        var fx = 0;\r\n
        var fy = 0;\r\n
\r\n
        while (el){\r\n
            fx+=el.offsetLeft;\r\n
            fy+=el.offsetTop;\r\n
            el=el.offsetParent;\r\n
        }\r\n
\r\n
        if ((parent.dhtmlDragAndDrop)){\r\n
            var ls = parent.dhtmlDragAndDrop.calculateFramePosition(1);\r\n
            fx+=ls.split(\'_\')[0]*1;\r\n
            fy+=ls.split(\'_\')[1]*1;\r\n
        }\r\n
\r\n
        if (n)\r\n
            return fx+"_"+fy;\r\n
        else\r\n
            this.fx=fx;\r\n
        this.fy=fy;\r\n
    }\r\n
    return "0_0";\r\n
};\r\n
\r\n
dhtmlDragAndDropObject.prototype.checkLanding=function(htmlObject, e){\r\n
    if ((htmlObject)&&(htmlObject.dragLanding)){\r\n
        if (this.lastLanding)\r\n
            this.lastLanding.dragLanding._dragOut(this.lastLanding);\r\n
        this.lastLanding=htmlObject;\r\n
        this.lastLanding=this.lastLanding.dragLanding._dragIn(this.lastLanding, this.dragStartNode, e.clientX,\r\n
            e.clientY, e);\r\n
        this.lastLanding_scr=(_isIE ? e.srcElement : e.target);\r\n
    } else {\r\n
        if ((htmlObject)&&(htmlObject.tagName != "BODY"))\r\n
            this.checkLanding(htmlObject.parentNode, e);\r\n
        else {\r\n
            if (this.lastLanding)\r\n
                this.lastLanding.dragLanding._dragOut(this.lastLanding, e.clientX, e.clientY, e);\r\n
            this.lastLanding=0;\r\n
\r\n
            if (this._onNotFound)\r\n
                this._onNotFound();\r\n
        }\r\n
    }\r\n
};\r\n
\r\n
dhtmlDragAndDropObject.prototype.stopDrag=function(e, mode){\r\n
    var dragger=window.dhtmlDragAndDrop;\r\n
\r\n
    if (!mode){\r\n
        dragger.stopFrameRoute();\r\n
        var temp = dragger.lastLanding;\r\n
        dragger.lastLanding=null;\r\n
\r\n
        if (temp)\r\n
            temp.dragLanding._drag(dragger.dragStartNode, dragger.dragStartObject, temp,\r\n
                (_isIE ? event.srcElement : e.target));\r\n
    }\r\n
    dragger.lastLanding=null;\r\n
\r\n
    if ((dragger.dragNode)&&(dragger.dragNode.parentNode == document.body))\r\n
        dragger.dragNode.parentNode.removeChild(dragger.dragNode);\r\n
    dragger.dragNode=0;\r\n
    dragger.gldragNode=0;\r\n
    dragger.fx=0;\r\n
    dragger.fy=0;\r\n
    dragger.dragStartNode=0;\r\n
    dragger.dragStartObject=0;\r\n
    document.body.onmouseup=dragger.tempDOMU;\r\n
    document.body.onmousemove=dragger.tempDOMM;\r\n
    dragger.tempDOMU=null;\r\n
    dragger.tempDOMM=null;\r\n
    dragger.waitDrag=0;\r\n
};\r\n
\r\n
dhtmlDragAndDropObject.prototype.stopFrameRoute=function(win){\r\n
    if (win)\r\n
        window.dhtmlDragAndDrop.stopDrag(1, 1);\r\n
\r\n
    for (var i = 0; i < window.frames.length; i++){\r\n
        try{\r\n
            if ((window.frames[i] != win)&&(window.frames[i].dhtmlDragAndDrop))\r\n
                window.frames[i].dhtmlDragAndDrop.stopFrameRoute(window);\r\n
        } catch(e){}\r\n
    }\r\n
\r\n
    try{\r\n
        if ((parent.dhtmlDragAndDrop)&&(parent != window)&&(parent != win))\r\n
            parent.dhtmlDragAndDrop.stopFrameRoute(window);\r\n
    } catch(e){}\r\n
};\r\n
\r\n
dhtmlDragAndDropObject.prototype.initFrameRoute=function(win, mode){\r\n
    if (win){\r\n
        window.dhtmlDragAndDrop.preCreateDragCopy();\r\n
        window.dhtmlDragAndDrop.dragStartNode=win.dhtmlDragAndDrop.dragStartNode;\r\n
        window.dhtmlDragAndDrop.dragStartObject=win.dhtmlDragAndDrop.dragStartObject;\r\n
        window.dhtmlDragAndDrop.dragNode=win.dhtmlDragAndDrop.dragNode;\r\n
        window.dhtmlDragAndDrop.gldragNode=win.dhtmlDragAndDrop.dragNode;\r\n
        window.document.body.onmouseup=window.dhtmlDragAndDrop.stopDrag;\r\n
        window.waitDrag=0;\r\n
\r\n
        if (((!_isIE)&&(mode))&&((!_isFF)||(_FFrv < 1.8)))\r\n
            window.dhtmlDragAndDrop.calculateFramePosition();\r\n
    }\r\n
    try{\r\n
        if ((parent.dhtmlDragAndDrop)&&(parent != window)&&(parent != win))\r\n
            parent.dhtmlDragAndDrop.initFrameRoute(window);\r\n
    }catch(e){}\r\n
\r\n
    for (var i = 0; i < window.frames.length; i++){\r\n
        try{\r\n
            if ((window.frames[i] != win)&&(window.frames[i].dhtmlDragAndDrop))\r\n
                window.frames[i].dhtmlDragAndDrop.initFrameRoute(window, ((!win||mode) ? 1 : 0));\r\n
        } catch(e){}\r\n
    }\r\n
};\r\n
\r\n
_isFF = false;\r\n
_isIE = false;\r\n
_isOpera = false;\r\n
_isKHTML = false;\r\n
_isMacOS = false;\r\n
_isChrome = false;\r\n
_FFrv = false;\r\n
_KHTMLrv = false;\r\n
_OperaRv = false;\r\n
\r\n
if (navigator.userAgent.indexOf(\'Macintosh\') != -1)\r\n
    _isMacOS=true;\r\n
\r\n
\r\n
if (navigator.userAgent.toLowerCase().indexOf(\'chrome\')>-1)\r\n
    _isChrome=true;\r\n
\r\n
if ((navigator.userAgent.indexOf(\'Safari\') != -1)||(navigator.userAgent.indexOf(\'Konqueror\') != -1)){\r\n
    _KHTMLrv = parseFloat(navigator.userAgent.substr(navigator.userAgent.indexOf(\'Safari\')+7, 5));\r\n
\r\n
    if (_KHTMLrv > 525){ //mimic FF behavior for Safari 3.1+\r\n
        _isFF=true;\r\n
        _FFrv = 1.9;\r\n
    } else\r\n
        _isKHTML=true;\r\n
} else if (navigator.userAgent.indexOf(\'Opera\') != -1){\r\n
    _isOpera=true;\r\n
    _OperaRv=parseFloat(navigator.userAgent.substr(navigator.userAgent.indexOf(\'Opera\')+6, 3));\r\n
}\r\n
\r\n
\r\n
else if (navigator.appName.indexOf("Microsoft") != -1){\r\n
    _isIE=true;\r\n
    if ((navigator.appVersion.indexOf("MSIE 8.0")!= -1 || navigator.appVersion.indexOf("MSIE 9.0")!= -1 || navigator.appVersion.indexOf("MSIE 10.0")!= -1 ) && document.compatMode != "BackCompat"){\r\n
        _isIE=8;\r\n
    }\r\n
} else if (navigator.appName  == \'Netscape\' && navigator.userAgent.indexOf("Trident") != -1){\r\n
\t//ie11\r\n
\t_isIE=8;\r\n
} else {\r\n
    _isFF=true;\r\n
    _FFrv = parseFloat(navigator.userAgent.split("rv:")[1]);\r\n
}\r\n
\r\n
\r\n
//multibrowser Xpath processor\r\n
dtmlXMLLoaderObject.prototype.doXPath=function(xpathExp, docObj, namespace, result_type){\r\n
    if (_isKHTML || (!_isIE && !window.XPathResult))\r\n
        return this.doXPathOpera(xpathExp, docObj);\r\n
\r\n
    if (_isIE){ //IE\r\n
        if (!docObj)\r\n
            if (!this.xmlDoc.nodeName)\r\n
                docObj=this.xmlDoc.responseXML;\r\n
            else\r\n
                docObj=this.xmlDoc;\r\n
\r\n
        if (!docObj)\r\n
            dhtmlxError.throwError("LoadXML", "Incorrect XML", [\r\n
                (docObj||this.xmlDoc),\r\n
                this.mainObject\r\n
            ]);\r\n
\r\n
        if (namespace)\r\n
            docObj.setProperty("SelectionNamespaces", "xmlns:xsl=\'"+namespace+"\'"); //\r\n
\r\n
        if (result_type == \'single\'){\r\n
            return docObj.selectSingleNode(xpathExp);\r\n
        }\r\n
        else {\r\n
            return docObj.selectNodes(xpathExp)||new Array(0);\r\n
        }\r\n
    } else { //Mozilla\r\n
        var nodeObj = docObj;\r\n
\r\n
        if (!docObj){\r\n
            if (!this.xmlDoc.nodeName){\r\n
                docObj=this.xmlDoc.responseXML;\r\n
            }\r\n
            else {\r\n
                docObj=this.xmlDoc;\r\n
            }\r\n
        }\r\n
\r\n
        if (!docObj)\r\n
            dhtmlxError.throwError("LoadXML", "Incorrect XML", [\r\n
                (docObj||this.xmlDoc),\r\n
                this.mainObject\r\n
            ]);\r\n
\r\n
        if (docObj.nodeName.indexOf("document") != -1){\r\n
            nodeObj=docObj;\r\n
        }\r\n
        else {\r\n
            nodeObj=docObj;\r\n
            docObj=docObj.ownerDocument;\r\n
        }\r\n
        var retType = XPathResult.ANY_TYPE;\r\n
\r\n
        if (result_type == \'single\')\r\n
            retType=XPathResult.FIRST_ORDERED_NODE_TYPE;\r\n
        var rowsCol = [];\r\n
        var col = docObj.evaluate(xpathExp, nodeObj, function(pref){\r\n
            return namespace;\r\n
        }, retType, null);\r\n
\r\n
        if (retType == XPathResult.FIRST_ORDERED_NODE_TYPE){\r\n
            return col.singleNodeValue;\r\n
        }\r\n
        var thisColMemb = col.iterateNext();\r\n
\r\n
        while (thisColMemb){\r\n
            rowsCol[rowsCol.length]=thisColMemb;\r\n
            thisColMemb=col.iterateNext();\r\n
        }\r\n
        return rowsCol;\r\n
    }\r\n
};\r\n
\r\n
function _dhtmlxError(type, name, params){\r\n
    if (!this.catches)\r\n
        this.catches=[];\r\n
\r\n
    return this;\r\n
}\r\n
\r\n
_dhtmlxError.prototype.catchError=function(type, func_name){\r\n
    this.catches[type]=func_name;\r\n
};\r\n
\r\n
_dhtmlxError.prototype.throwError=function(type, name, params){\r\n
    if (this.catches[type])\r\n
        return this.catches[type](type, name, params);\r\n
\r\n
    if (this.catches["ALL"])\r\n
        return this.catches["ALL"](type, name, params);\r\n
\r\n
    window.alert("Error type: "+arguments[0]+"\\nDescription: "+arguments[1]);\r\n
    return null;\r\n
};\r\n
\r\n
window.dhtmlxError=new _dhtmlxError();\r\n
\r\n
\r\n
//opera fake, while 9.0 not released\r\n
//multibrowser Xpath processor\r\n
dtmlXMLLoaderObject.prototype.doXPathOpera=function(xpathExp, docObj){\r\n
    //this is fake for Opera\r\n
    var z = xpathExp.replace(/[\\/]+/gi, "/").split(\'/\');\r\n
    var obj = null;\r\n
    var i = 1;\r\n
\r\n
    if (!z.length)\r\n
        return [];\r\n
\r\n
    if (z[0] == ".")\r\n
        obj=[docObj]; else if (z[0] === ""){\r\n
        obj=(this.xmlDoc.responseXML||this.xmlDoc).getElementsByTagName(z[i].replace(/\\[[^\\]]*\\]/g, ""));\r\n
        i++;\r\n
    } else\r\n
        return [];\r\n
\r\n
    for (i; i < z.length; i++)obj=this._getAllNamedChilds(obj, z[i]);\r\n
\r\n
    if (z[i-1].indexOf("[") != -1)\r\n
        obj=this._filterXPath(obj, z[i-1]);\r\n
    return obj;\r\n
};\r\n
\r\n
dtmlXMLLoaderObject.prototype._filterXPath=function(a, b){\r\n
    var c = [];\r\n
    var b = b.replace(/[^\\[]*\\[\\@/g, "").replace(/[\\[\\]\\@]*/g, "");\r\n
\r\n
    for (var i = 0; i < a.length; i++)\r\n
        if (a[i].getAttribute(b))\r\n
            c[c.length]=a[i];\r\n
\r\n
    return c;\r\n
};\r\n
\r\n
dtmlXMLLoaderObject.prototype._getAllNamedChilds=function(a, b){\r\n
    var c = [];\r\n
\r\n
    if (_isKHTML)\r\n
        b=b.toUpperCase();\r\n
\r\n
    for (var i = 0; i < a.length; i++)for (var j = 0; j < a[i].childNodes.length; j++){\r\n
        if (_isKHTML){\r\n
            if (a[i].childNodes[j].tagName&&a[i].childNodes[j].tagName.toUpperCase() == b)\r\n
                c[c.length]=a[i].childNodes[j];\r\n
        }\r\n
\r\n
        else if (a[i].childNodes[j].tagName == b)\r\n
            c[c.length]=a[i].childNodes[j];\r\n
    }\r\n
\r\n
    return c;\r\n
};\r\n
\r\n
function dhtmlXHeir(a, b){\r\n
    for (var c in b)\r\n
        if (typeof (b[c]) == "function")\r\n
            a[c]=b[c];\r\n
    return a;\r\n
}\r\n
\r\n
if(typeof (window.dhtmlxEvent) == \'undefined\'){\r\n
    window.dhtmlxEvent = function dhtmlxEvent(el, event, handler){\r\n
        if (el.addEventListener)\r\n
            el.addEventListener(event, handler, false);\r\n
\r\n
        else if (el.attachEvent)\r\n
            el.attachEvent("on"+event, handler);\r\n
    };\r\n
}\r\n
\r\n
//============= XSL Extension ===================================\r\n
\r\n
dtmlXMLLoaderObject.prototype.xslDoc=null;\r\n
dtmlXMLLoaderObject.prototype.setXSLParamValue=function(paramName, paramValue, xslDoc){\r\n
    if (!xslDoc)\r\n
        xslDoc=this.xslDoc;\r\n
\r\n
    if (xslDoc.responseXML)\r\n
        xslDoc=xslDoc.responseXML;\r\n
    var item =\r\n
        this.doXPath("/xsl:stylesheet/xsl:variable[@name=\'"+paramName+"\']", xslDoc,\r\n
            "http:/\\/www.w3.org/1999/XSL/Transform", "single");\r\n
\r\n
    if (item)\r\n
        item.firstChild.nodeValue=paramValue;\r\n
};\r\n
\r\n
dtmlXMLLoaderObject.prototype.doXSLTransToObject=function(xslDoc, xmlDoc){\r\n
    if (!xslDoc)\r\n
        xslDoc=this.xslDoc;\r\n
\r\n
    if (xslDoc.responseXML)\r\n
        xslDoc=xslDoc.responseXML;\r\n
\r\n
    if (!xmlDoc)\r\n
        xmlDoc=this.xmlDoc;\r\n
\r\n
    if (xmlDoc.responseXML)\r\n
        xmlDoc=xmlDoc.responseXML;\r\n
\r\n
    \r\n
    var result;\r\n
    //Mozilla\r\n
    if (!_isIE){\r\n
        if (!this.XSLProcessor){\r\n
            this.XSLProcessor=new XSLTProcessor();\r\n
            this.XSLProcessor.importStylesheet(xslDoc);\r\n
        }\r\n
        result = this.XSLProcessor.transformToDocument(xmlDoc);\r\n
    } else {\r\n
        result = new ActiveXObject("Msxml2.DOMDocument.3.0");\r\n
        try{\r\n
            xmlDoc.transformNodeToObject(xslDoc, result);\r\n
        }catch(e){\r\n
            result = xmlDoc.transformNode(xslDoc);\r\n
        }\r\n
    }\r\n
    return result;\r\n
};\r\n
\r\n
dtmlXMLLoaderObject.prototype.doXSLTransToString=function(xslDoc, xmlDoc){\r\n
    var res = this.doXSLTransToObject(xslDoc, xmlDoc);\r\n
    if(typeof(res)=="string")\r\n
        return res;\r\n
    return this.doSerialization(res);\r\n
};\r\n
\r\n
dtmlXMLLoaderObject.prototype.doSerialization=function(xmlDoc){\r\n
    if (!xmlDoc)\r\n
        xmlDoc=this.xmlDoc;\r\n
    if (xmlDoc.responseXML)\r\n
        xmlDoc=xmlDoc.responseXML;\r\n
    if (!_isIE){\r\n
        var xmlSerializer = new XMLSerializer();\r\n
        return xmlSerializer.serializeToString(xmlDoc);\r\n
    } else\r\n
        return xmlDoc.xml;\r\n
};\r\n
\r\n
/**\r\n
 *   @desc:\r\n
 *   @type: private\r\n
 */\r\n
dhtmlxEventable=function(obj){\r\n
    obj.attachEvent=function(name, catcher, callObj){\r\n
        name=\'ev_\'+name.toLowerCase();\r\n
        if (!this[name])\r\n
            this[name]=new this.eventCatcher(callObj||this);\r\n
\r\n
        return(name+\':\'+this[name].addEvent(catcher)); //return ID (event name & event ID)\r\n
    };\r\n
    obj.callEvent=function(name, arg0){\r\n
        name=\'ev_\'+name.toLowerCase();\r\n
        if (this[name])\r\n
            return this[name].apply(this, arg0);\r\n
        return true;\r\n
    };\r\n
    obj.checkEvent=function(name){\r\n
        return (!!this[\'ev_\'+name.toLowerCase()]);\r\n
    };\r\n
    obj.eventCatcher=function(obj){\r\n
        var dhx_catch = [];\r\n
        var z = function(){\r\n
            var res = true;\r\n
            for (var i = 0; i < dhx_catch.length; i++){\r\n
                if (dhx_catch[i]){\r\n
                    var zr = dhx_catch[i].apply(obj, arguments);\r\n
                    res=res&&zr;\r\n
                }\r\n
            }\r\n
            return res;\r\n
        };\r\n
        z.addEvent=function(ev){\r\n
            if (typeof (ev) != "function")\r\n
                ev=eval(ev);\r\n
            if (ev)\r\n
                return dhx_catch.push(ev)-1;\r\n
            return false;\r\n
        };\r\n
        z.removeEvent=function(id){\r\n
            dhx_catch[id]=null;\r\n
        };\r\n
        return z;\r\n
    };\r\n
    obj.detachEvent=function(id){\r\n
        if (id){\r\n
            var list = id.split(\':\');           //get EventName and ID\r\n
            this[list[0]].removeEvent(list[1]); //remove event\r\n
        }\r\n
    };\r\n
    obj.detachAllEvents = function(){\r\n
        for (var name in this){\r\n
            if (name.indexOf("ev_")===0){\r\n
                this.detachEvent(name);\r\n
                this[name] = null;\r\n
            }\r\n
        }\r\n
    };\r\n
    obj = null;\r\n
};\r\n
if(!window.dhtmlx)\r\n
\twindow.dhtmlx = {};\r\n
\r\n
(function(){\r\n
\tvar _dhx_msg_cfg = null;\r\n
\tfunction callback(config, result){\r\n
\t\t\tvar usercall = config.callback;\r\n
\t\t\tmodality(false);\r\n
\t\t\tconfig.box.parentNode.removeChild(config.box);\r\n
\t\t\t_dhx_msg_cfg = config.box = null;\r\n
\t\t\tif (usercall)\r\n
\t\t\t\tusercall(result);\r\n
\t}\r\n
\tfunction modal_key(e){\r\n
\t\tif (_dhx_msg_cfg){\r\n
\t\t\te = e||event;\r\n
\t\t\tvar code = e.which||event.keyCode;\r\n
\t\t\tif (dhtmlx.message.keyboard){\r\n
\t\t\t\tif (code == 13 || code == 32)\r\n
\t\t\t\t\tcallback(_dhx_msg_cfg, true);\r\n
\t\t\t\tif (code == 27)\r\n
\t\t\t\t\tcallback(_dhx_msg_cfg, false);\r\n
\t\t\t}\r\n
\t\t\tif (e.preventDefault)\r\n
\t\t\t\te.preventDefault();\r\n
\t\t\treturn !(e.cancelBubble = true);\r\n
\t\t}\r\n
\t}\r\n
\tif (document.attachEvent)\r\n
\t\tdocument.attachEvent("onkeydown", modal_key);\r\n
\telse\r\n
\t\tdocument.addEventListener("keydown", modal_key, true);\r\n
\t\t\r\n
\tfunction modality(mode){\r\n
\t\tif(!modality.cover){\r\n
\t\t\tmodality.cover = document.createElement("DIV");\r\n
\t\t\t//necessary for IE only\r\n
\t\t\tmodality.cover.onkeydown = modal_key;\r\n
\t\t\tmodality.cover.className = "dhx_modal_cover";\r\n
\t\t\tdocument.body.appendChild(modality.cover);\r\n
\t\t}\r\n
\t\tvar height =  document.body.scrollHeight;\r\n
\t\tmodality.cover.style.display = mode?"inline-block":"none";\r\n
\t}\r\n
\r\n
\tfunction button(text, result, css){\r\n
\t\t// css - for locale-independent class name\r\n
\t\tvar className = css ? css : (text || "");\r\n
\t\tvar button_css = "dhtmlx_"+(className).toLowerCase().replace(/ /g, "_")+"_button"; // dhtmlx_ok_button, dhtmlx_click_me_button\r\n
\t\treturn "<div class=\'dhtmlx_popup_button "+button_css+"\' result=\'"+result+"\' ><div>"+text+"</div></div>";\r\n
\t}\r\n
\r\n
\tfunction info(text){\r\n
\t\tif (!t.area){\r\n
\t\t\tt.area = document.createElement("DIV");\r\n
\t\t\tt.area.className = "dhtmlx_message_area";\r\n
\t\t\tt.area.style[t.position]="5px";\r\n
\t\t\tdocument.body.appendChild(t.area);\r\n
\t\t}\r\n
\r\n
\t\tt.hide(text.id);\r\n
\t\tvar message = document.createElement("DIV");\r\n
\t\tmessage.innerHTML = "<div>"+text.text+"</div>";\r\n
\t\tmessage.className = "dhtmlx-info dhtmlx-" + text.type;\r\n
\t\tmessage.onclick = function(){\r\n
\t\t\tt.hide(text.id);\r\n
\t\t\ttext = null;\r\n
\t\t};\r\n
\r\n
\t\tif (t.position == "bottom" && t.area.firstChild)\r\n
\t\t\tt.area.insertBefore(message,t.area.firstChild);\r\n
\t\telse\r\n
\t\t\tt.area.appendChild(message);\r\n
\t\t\r\n
\t\tif (text.expire > 0)\r\n
\t\t\tt.timers[text.id]=window.setTimeout(function(){\r\n
\t\t\t\tt.hide(text.id);\r\n
\t\t\t}, text.expire);\r\n
\r\n
\t\tt.pull[text.id] = message;\r\n
\t\tmessage = null;\r\n
\r\n
\t\treturn text.id;\r\n
\t}\r\n
\tfunction _boxStructure(config, ok, cancel){\r\n
\t\tvar box = document.createElement("DIV");\r\n
\t\tbox.className = " dhtmlx_modal_box dhtmlx-"+config.type;\r\n
\t\tbox.setAttribute("dhxbox", 1);\r\n
\t\t\t\r\n
\t\tvar inner = \'\';\r\n
\r\n
\t\tif (config.width)\r\n
\t\t\tbox.style.width = config.width;\r\n
\t\tif (config.height)\r\n
\t\t\tbox.style.height = config.height;\r\n
\t\tif (config.title)\r\n
\t\t\tinner+=\'<div class="dhtmlx_popup_title">\'+config.title+\'</div>\';\r\n
\t\tinner+=\'<div class="dhtmlx_popup_text"><span>\'+(config.content?\'\':config.text)+\'</span></div><div  class="dhtmlx_popup_controls">\';\r\n
\t\tif (ok){\r\n
\t\t\tvar ok_text = (config.ok || scheduler.locale.labels.message_ok);\r\n
\t\t\t//default value for compatibility with custom locales some people have\r\n
\t\t\tif(ok_text === undefined) ok_text = "OK";\r\n
\t\t\tinner += button(ok_text, true, "ok");\r\n
\t\t}\r\n
\t\tif (cancel){\r\n
\t\t\tvar cancel_text = (config.cancel || scheduler.locale.labels.message_cancel);\r\n
\t\t\tif(cancel_text === undefined) cancel_text = "Cancel";\r\n
\t\t\tinner += button(cancel_text, false, "cancel");\r\n
\t\t}\r\n
\t\tif (config.buttons){\r\n
\t\t\tfor (var i=0; i<config.buttons.length; i++)\r\n
\t\t\t\tinner += button(config.buttons[i],i);\r\n
\t\t}\r\n
\t\tinner += \'</div>\';\r\n
\t\tbox.innerHTML = inner;\r\n
\r\n
\t\tif (config.content){\r\n
\t\t\tvar node = config.content;\r\n
\t\t\tif (typeof node == "string") \r\n
\t\t\t\tnode = document.getElementById(node);\r\n
\t\t\tif (node.style.display == \'none\')\r\n
\t\t\t\tnode.style.display = "";\r\n
\t\t\tbox.childNodes[config.title?1:0].appendChild(node);\r\n
\t\t}\r\n
\r\n
\t\tbox.onclick = function(e){\r\n
\t\t\te = e ||event;\r\n
\t\t\tvar source = e.target || e.srcElement;\r\n
\t\t\tif (!source.className) source = source.parentNode;\r\n
\t\t\tif (source.className.split(" ")[0] == "dhtmlx_popup_button"){\r\n
\t\t\t\tvar result = source.getAttribute("result");\r\n
\t\t\t\tresult = (result == "true")||(result == "false"?false:result);\r\n
\t\t\t\tcallback(config, result);\r\n
\t\t\t}\r\n
\t\t};\r\n
\t\tconfig.box = box;\r\n
\t\tif (ok||cancel)\r\n
\t\t\t_dhx_msg_cfg = config;\r\n
\r\n
\t\treturn box;\r\n
\t}\r\n
\tfunction _createBox(config, ok, cancel){\r\n
\t\tvar box = config.tagName ? config : _boxStructure(config, ok, cancel);\r\n
\t\t\r\n
\t\tif (!config.hidden)\r\n
\t\t\tmodality(true);\r\n
\t\tdocument.body.appendChild(box);\r\n
\t\tvar x = Math.abs(Math.floor(((window.innerWidth||document.documentElement.offsetWidth) - box.offsetWidth)/2));\r\n
\t\tvar y = Math.abs(Math.floor(((window.innerHeight||document.documentElement.offsetHeight) - box.offsetHeight)/2));\r\n
\t\tif (config.position == "top")\r\n
\t\t\tbox.style.top = "-3px";\r\n
\t\telse\r\n
\t\t\tbox.style.top = y+\'px\';\r\n
\t\tbox.style.left = x+\'px\';\r\n
\t\t//necessary for IE only\r\n
\t\tbox.onkeydown = modal_key;\r\n
\r\n
\t\tbox.focus();\r\n
\t\tif (config.hidden)\r\n
\t\t\tdhtmlx.modalbox.hide(box);\r\n
\r\n
\t\treturn box;\r\n
\t}\r\n
\r\n
\tfunction alertPopup(config){\r\n
\t\treturn _createBox(config, true, false);\r\n
\t}\r\n
\tfunction confirmPopup(config){\r\n
\t\treturn _createBox(config, true, true);\r\n
\t}\r\n
\tfunction boxPopup(config){\r\n
\t\treturn _createBox(config);\r\n
\t}\r\n
\tfunction box_params(text, type, callback){\r\n
\t\tif (typeof text != "object"){\r\n
\t\t\tif (typeof type == "function"){\r\n
\t\t\t\tcallback = type;\r\n
\t\t\t\ttype = "";\r\n
\t\t\t}\r\n
\t\t\ttext = {text:text, type:type, callback:callback };\r\n
\t\t}\r\n
\t\treturn text;\r\n
\t}\r\n
\tfunction params(text, type, expire, id){\r\n
\t\tif (typeof text != "object")\r\n
\t\t\ttext = {text:text, type:type, expire:expire, id:id};\r\n
\t\ttext.id = text.id||t.uid();\r\n
\t\ttext.expire = text.expire||t.expire;\r\n
\t\treturn text;\r\n
\t}\r\n
\tdhtmlx.alert = function(){\r\n
\t\tvar text = box_params.apply(this, arguments);\r\n
\t\ttext.type = text.type || "confirm";\r\n
\t\treturn alertPopup(text);\r\n
\t};\r\n
\tdhtmlx.confirm = function(){\r\n
\t\tvar text = box_params.apply(this, arguments);\r\n
\t\ttext.type = text.type || "alert";\r\n
\t\treturn confirmPopup(text);\r\n
\t};\r\n
\tdhtmlx.modalbox = function(){\r\n
\t\tvar text = box_params.apply(this, arguments);\r\n
\t\ttext.type = text.type || "alert";\r\n
\t\treturn boxPopup(text);\r\n
\t};\r\n
\tdhtmlx.modalbox.hide = function(node){\r\n
\t\twhile (node && node.getAttribute && !node.getAttribute("dhxbox"))\r\n
\t\t\tnode = node.parentNode;\r\n
\t\tif (node){\r\n
\t\t\tnode.parentNode.removeChild(node);\r\n
\t\t\tmodality(false);\r\n
\t\t}\r\n
\t};\r\n
\tvar t = dhtmlx.message = function(text, type, expire, id){\r\n
\t\ttext = params.apply(this, arguments);\r\n
\t\ttext.type = text.type||"info";\r\n
\r\n
\t\tvar subtype = text.type.split("-")[0];\r\n
\t\tswitch (subtype){\r\n
\t\t\tcase "alert":\r\n
\t\t\t\treturn alertPopup(text);\r\n
\t\t\tcase "confirm":\r\n
\t\t\t\treturn confirmPopup(text);\r\n
\t\t\tcase "modalbox":\r\n
\t\t\t\treturn boxPopup(text);\r\n
\t\t\tdefault:\r\n
\t\t\t\treturn info(text);\r\n
\t\t}\r\n
\t};\r\n
\r\n
\tt.seed = (new Date()).valueOf();\r\n
\tt.uid = function(){return t.seed++;};\r\n
\tt.expire = 4000;\r\n
\tt.keyboard = true;\r\n
\tt.position = "top";\r\n
\tt.pull = {};\r\n
\tt.timers = {};\r\n
\r\n
\tt.hideAll = function(){\r\n
\t\tfor (var key in t.pull)\r\n
\t\t\tt.hide(key);\r\n
\t};\r\n
\tt.hide = function(id){\r\n
\t\tvar obj = t.pull[id];\r\n
\t\tif (obj && obj.parentNode){\r\n
\t\t\twindow.setTimeout(function(){\r\n
\t\t\t\tobj.parentNode.removeChild(obj);\r\n
\t\t\t\tobj = null;\r\n
\t\t\t},2000);\r\n
\t\t\tobj.className+=" hidden";\r\n
\t\t\t\r\n
\t\t\tif(t.timers[id])\r\n
\t\t\t\twindow.clearTimeout(t.timers[id]);\r\n
\t\t\tdelete t.pull[id];\r\n
\t\t}\r\n
\t};\r\n
})();\r\n
/**\r\n
\t* \t@desc: constructor, data processor object \r\n
\t*\t@param: serverProcessorURL - url used for update\r\n
\t*\t@type: public\r\n
\t*/\r\n
function dataProcessor(serverProcessorURL){\r\n
    this.serverProcessor = serverProcessorURL;\r\n
    this.action_param="!nativeeditor_status";\r\n
    \r\n
\tthis.object = null;\r\n
\tthis.updatedRows = []; //ids of updated rows\r\n
\t\r\n
\tthis.autoUpdate = true;\r\n
\tthis.updateMode = "cell";\r\n
\tthis._tMode="GET"; \r\n
\tthis.post_delim = "_";\r\n
\t\r\n
    this._waitMode=0;\r\n
    this._in_progress={};//?\r\n
    this._invalid={};\r\n
    this.mandatoryFields=[];\r\n
    this.messages=[];\r\n
    \r\n
    this.styles={\r\n
    \tupdated:"font-weight:bold;",\r\n
    \tinserted:"font-weight:bold;",\r\n
    \tdeleted:"text-decoration : line-through;",\r\n
    \tinvalid:"background-color:FFE0E0;",\r\n
    \tinvalid_cell:"border-bottom:2px solid red;",\r\n
    \terror:"color:red;",\r\n
    \tclear:"font-weight:normal;text-decoration:none;"\r\n
    };\r\n
    \r\n
    this.enableUTFencoding(true);\r\n
    dhtmlxEventable(this);\r\n
\r\n
    return this;\r\n
    }\r\n
\r\n
dataProcessor.prototype={\r\n
\t/**\r\n
\t* \t@desc: select GET or POST transaction model\r\n
\t*\t@param: mode - GET/POST\r\n
\t*\t@param: total - true/false - send records row by row or all at once (for grid only)\r\n
\t*\t@type: public\r\n
\t*/\r\n
\tsetTransactionMode:function(mode,total){\r\n
        this._tMode=mode;\r\n
\t\tthis._tSend=total;\r\n
\t\tif (mode == "REST"){\r\n
\t\t\tthis._tSend = false;\r\n
\t\t\tthis._endnm = true;\r\n
\t\t}\r\n
    },\r\n
    escape:function(data){\r\n
    \tif (this._utf)\r\n
    \t\treturn encodeURIComponent(data);\r\n
    \telse\r\n
        \treturn escape(data);\r\n
\t},\r\n
    /**\r\n
\t* \t@desc: allows to set escaping mode\r\n
\t*\t@param: true - utf based escaping, simple - use current page encoding\r\n
\t*\t@type: public\r\n
\t*/\t\r\n
\tenableUTFencoding:function(mode){\r\n
        this._utf=convertStringToBoolean(mode);\r\n
    },\r\n
    /**\r\n
\t* \t@desc: allows to define, which column may trigger update\r\n
\t*\t@param: val - array or list of true/false values\r\n
\t*\t@type: public\r\n
\t*/\r\n
\tsetDataColumns:function(val){\r\n
\t\tthis._columns=(typeof val == "string")?val.split(","):val;\r\n
    },\r\n
    /**\r\n
\t* \t@desc: get state of updating\r\n
\t*\t@returns:   true - all in sync with server, false - some items not updated yet.\r\n
\t*\t@type: public\r\n
\t*/\r\n
\tgetSyncState:function(){\r\n
\t\treturn !this.updatedRows.length;\r\n
\t},\r\n
\t/**\r\n
\t* \t@desc: enable/disable named field for data syncing, will use column ids for grid\r\n
\t*\t@param:   mode - true/false\r\n
\t*\t@type: public\r\n
\t*/\r\n
\tenableDataNames:function(mode){\r\n
\t\tthis._endnm=convertStringToBoolean(mode);\r\n
\t},\r\n
\t/**\r\n
\t* \t@desc: enable/disable mode , when only changed fields and row id send to the server side, instead of all fields in default mode\r\n
\t*\t@param:   mode - true/false\r\n
\t*\t@type: public\r\n
\t*/\r\n
\tenablePartialDataSend:function(mode){\r\n
\t\tthis._changed=convertStringToBoolean(mode);\r\n
\t},\r\n
\t/**\r\n
\t* \t@desc: set if rows should be send to server automaticaly\r\n
\t*\t@param: mode - "row" - based on row selection changed, "cell" - based on cell editing finished, "off" - manual data sending\r\n
\t*\t@type: public\r\n
\t*/\r\n
\tsetUpdateMode:function(mode,dnd){\r\n
\t\tthis.autoUpdate = (mode=="cell");\r\n
\t\tthis.updateMode = mode;\r\n
\t\tthis.dnd=dnd;\r\n
\t},\r\n
\tignore:function(code,master){\r\n
\t\tthis._silent_mode=true;\r\n
\t\tcode.call(master||window);\r\n
\t\tthis._silent_mode=false;\r\n
\t},\r\n
\t/**\r\n
\t* \t@desc: mark row as updated/normal. check mandatory fields,initiate autoupdate (if turned on)\r\n
\t*\t@param: rowId - id of row to set update-status for\r\n
\t*\t@param: state - true for "updated", false for "not updated"\r\n
\t*\t@param: mode - update mode name\r\n
\t*\t@type: public\r\n
\t*/\r\n
\tsetUpdated:function(rowId,state,mode){\r\n
\t\tif (this._silent_mode) return;\r\n
\t\tvar ind=this.findRow(rowId);\r\n
\t\t\r\n
\t\tmode=mode||"updated";\r\n
\t\tvar existing = this.obj.getUserData(rowId,this.action_param);\r\n
\t\tif (existing && mode == "updated") mode=existing;\r\n
\t\tif (state){\r\n
\t\t\tthis.set_invalid(rowId,false); //clear previous error flag\r\n
\t\t\tthis.updatedRows[ind]=rowId;\r\n
\t\t\tthis.obj.setUserData(rowId,this.action_param,mode);\r\n
\t\t\tif (this._in_progress[rowId]) \r\n
\t\t\t\tthis._in_progress[rowId]="wait";\r\n
\t\t} else{\r\n
\t\t\tif (!this.is_invalid(rowId)){\r\n
\t\t\t\tthis.updatedRows.splice(ind,1);\r\n
\t\t\t\tthis.obj.setUserData(rowId,this.action_param,"");\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\t//clear changed flag\r\n
\t\tif (!state)\r\n
\t\t\tthis._clearUpdateFlag(rowId);\r\n
     \t\t\t\r\n
\t\tthis.markRow(rowId,state,mode);\r\n
\t\tif (state && this.autoUpdate) this.sendData(rowId);\r\n
\t},\r\n
\t_clearUpdateFlag:function(id){},\r\n
\tmarkRow:function(id,state,mode){ \r\n
\t\tvar str="";\r\n
\t\tvar invalid=this.is_invalid(id);\r\n
\t\tif (invalid){\r\n
        \tstr=this.styles[invalid];\r\n
        \tstate=true;\r\n
    \t}\r\n
\t\tif (this.callEvent("onRowMark",[id,state,mode,invalid])){\r\n
\t\t\t//default logic\r\n
\t\t\tstr=this.styles[state?mode:"clear"]+str;\r\n
\t\t\t\r\n
        \tthis.obj[this._methods[0]](id,str);\r\n
\r\n
\t\t\tif (invalid && invalid.details){\r\n
\t\t\t\tstr+=this.styles[invalid+"_cell"];\r\n
\t\t\t\tfor (var i=0; i < invalid.details.length; i++)\r\n
\t\t\t\t\tif (invalid.details[i])\r\n
        \t\t\t\tthis.obj[this._methods[1]](id,i,str);\r\n
\t\t\t}\r\n
\t\t}\r\n
\t},\r\n
\tgetState:function(id){\r\n
\t\treturn this.obj.getUserData(id,this.action_param);\r\n
\t},\r\n
\tis_invalid:function(id){\r\n
\t\treturn this._invalid[id];\r\n
\t},\r\n
\tset_invalid:function(id,mode,details){ \r\n
\t\tif (details) mode={value:mode, details:details, toString:function(){ return this.value.toString(); }};\r\n
\t\tthis._invalid[id]=mode;\r\n
\t},\r\n
\t/**\r\n
\t* \t@desc: check mandatory fields and varify values of cells, initiate update (if specified)\r\n
\t*\t@param: rowId - id of row to set update-status for\r\n
\t*\t@type: public\r\n
\t*/\r\n
\tcheckBeforeUpdate:function(rowId){ \r\n
\t\treturn true;\r\n
\t},\r\n
\t/**\r\n
\t* \t@desc: send row(s) values to server\r\n
\t*\t@param: rowId - id of row which data to send. If not specified, then all "updated" rows will be send\r\n
\t*\t@type: public\r\n
\t*/\r\n
\tsendData:function(rowId){\r\n
\t\tif (this._waitMode && (this.obj.mytype=="tree" || this.obj._h2)) return;\r\n
\t\tif (this.obj.editStop) this.obj.editStop();\r\n
\t\r\n
\t\t\r\n
\t\tif(typeof rowId == "undefined" || this._tSend) return this.sendAllData();\r\n
\t\tif (this._in_progress[rowId]) return false;\r\n
\t\t\r\n
\t\tthis.messages=[];\r\n
\t\tif (!this.checkBeforeUpdate(rowId) && this.callEvent("onValidationError",[rowId,this.messages])) return false;\r\n
\t\tthis._beforeSendData(this._getRowData(rowId),rowId);\r\n
    },\r\n
    _beforeSendData:function(data,rowId){\r\n
    \tif (!this.callEvent("onBeforeUpdate",[rowId,this.getState(rowId),data])) return false;\t\r\n
\t\tthis._sendData(data,rowId);\r\n
    },\r\n
    serialize:function(data, id){\r\n
    \tif (typeof data == "string")\r\n
    \t\treturn data;\r\n
    \tif (typeof id != "undefined")\r\n
    \t\treturn this.serialize_one(data,"");\r\n
    \telse{\r\n
    \t\tvar stack = [];\r\n
    \t\tvar keys = [];\r\n
    \t\tfor (var key in data)\r\n
    \t\t\tif (data.hasOwnProperty(key)){\r\n
    \t\t\t\tstack.push(this.serialize_one(data[key],key+this.post_delim));\r\n
    \t\t\t\tkeys.push(key);\r\n
\t\t\t\t}\r\n
    \t\tstack.push("ids="+this.escape(keys.join(",")));\r\n
    \t\tif (dhtmlx.security_key)\r\n
\t\t\t\tstack.push("dhx_security="+dhtmlx.security_key);\r\n
    \t\treturn stack.join("&");\r\n
    \t}\r\n
    },\r\n
    serialize_one:function(data, pref){\r\n
    \tif (typeof data == "string")\r\n
    \t\treturn data;\r\n
    \tvar stack = [];\r\n
    \tfor (var key in data)\r\n
    \t\tif (data.hasOwnProperty(key)){\r\n
    \t\t\tif ((key == "id" || key == this.action_param) && this._tMode == "REST") continue;\r\n
    \t\t\tstack.push(this.escape((pref||"")+key)+"="+this.escape(data[key]));\r\n
    \t\t}\r\n
\t\treturn stack.join("&");\r\n
    },\r\n
    _sendData:function(a1,rowId){\r\n
    \tif (!a1) return; //nothing to send\r\n
\t\tif (!this.callEvent("onBeforeDataSending",rowId?[rowId,this.getState(rowId),a1]:[null, null, a1])) return false;\t\t\t\t\r\n
\t\t\r\n
    \tif (rowId)\r\n
\t\t\tthis._in_progress[rowId]=(new Date()).valueOf();\r\n
\t\tvar a2=new dtmlXMLLoaderObject(function(that,b,c,d,xml){\r\n
\t\t\tvar ids = [];\r\n
\t\t\tif (rowId)\r\n
\t\t\t\tids.push(rowId);\r\n
\t\t\telse if (a1)\r\n
\t\t\t\tfor (var key in a1)\r\n
\t\t\t\t\tids.push(key);\r\n
\r\n
\t\t\treturn that.afterUpdate(that,xml,ids);\r\n
\t\t},this,true);\r\n
\t\t\r\n
\t\tvar a3 = this.serverProcessor+(this._user?(getUrlSymbol(this.serverProcessor)+["dhx_user="+this._user,"dhx_version="+this.obj.getUserData(0,"version")].join("&")):"");\r\n
\r\n
\t\tif (this._tMode=="GET")\r\n
        \ta2.loadXML(a3+((a3.indexOf("?")!=-1)?"&":"?")+this.serialize(a1,rowId));\r\n
\t\telse if (this._tMode == "POST")\r\n
        \ta2.loadXML(a3,true,this.serialize(a1,rowId));\r\n
        else if (this._tMode == "REST"){\r\n
        \tvar state = this.getState(rowId);\r\n
        \tvar url = a3.replace(/(\\&|\\?)editing\\=true/,"");\r\n
        \tif (state == "inserted")\r\n
        \t\ta2.loadXML(url+rowId,"POST",this.serialize(a1,rowId));\r\n
        \telse if (state == "deleted")\r\n
        \t\ta2.loadXML(url+rowId,"DELETE","");\r\n
        \telse\r\n
        \t\ta2.loadXML(url+rowId,"PUT",this.serialize(a1,rowId));\r\n
        }\r\n
\r\n
\t\tthis._waitMode++;\r\n
    },\r\n
\tsendAllData:function(){\r\n
\t\tif (!this.updatedRows.length) return;\t\t\t\r\n
\r\n
\t\tthis.messages=[]; var valid=true;\r\n
\t\tfor (var i=0; i<this.updatedRows.length; i++)\r\n
\t\t\tvalid&=this.checkBeforeUpdate(this.updatedRows[i]);\r\n
\t\tif (!valid && !this.callEvent("onValidationError",["",this.messages])) return false;\r\n
\t\r\n
\t\tif (this._tSend) \r\n
\t\t\tthis._sendData(this._getAllData());\r\n
\t\telse\r\n
\t\t\tfor (var i=0; i<this.updatedRows.length; i++)\r\n
\t\t\t\tif (!this._in_progress[this.updatedRows[i]]){\r\n
\t\t\t\t\tif (this.is_invalid(this.updatedRows[i])) continue;\r\n
\t\t\t\t\tthis._beforeSendData(this._getRowData(this.updatedRows[i]),this.updatedRows[i]);\r\n
\t\t\t\t\tif (this._waitMode && (this.obj.mytype=="tree" || this.obj._h2)) return; //block send all for tree\r\n
\t\t\t\t}\r\n
\t},\r\n
    \r\n
\t\r\n
\t\r\n
\t\r\n
\t\r\n
\t\r\n
\t\r\n
\t\r\n
\t_getAllData:function(rowId){\r\n
\t\tvar out={};\r\n
\t\tvar has_one = false;\r\n
\t\tfor(var i=0;i<this.updatedRows.length;i++){\r\n
\t\t\tvar id=this.updatedRows[i];\r\n
\t\t\tif (this._in_progress[id] || this.is_invalid(id)) continue;\r\n
\t\t\tif (!this.callEvent("onBeforeUpdate",[id,this.getState(id), this._getRowData(id)])) continue;\r\n
\t\t\tout[id]=this._getRowData(id,id+this.post_delim);\r\n
\t\t\thas_one = true;\r\n
\t\t\tthis._in_progress[id]=(new Date()).valueOf();\r\n
\t\t}\r\n
\t\treturn has_one?out:null;\r\n
\t},\r\n
\t\r\n
\t\r\n
\t/**\r\n
\t* \t@desc: specify column which value should be varified before sending to server\r\n
\t*\t@param: ind - column index (0 based)\r\n
\t*\t@param: verifFunction - function (object) which should verify cell value (if not specified, then value will be compared to empty string). Two arguments will be passed into it: value and column name\r\n
\t*\t@type: public\r\n
\t*/\r\n
\tsetVerificator:function(ind,verifFunction){\r\n
\t\tthis.mandatoryFields[ind] = verifFunction||(function(value){return (value!=="");});\r\n
\t},\r\n
\t/**\r\n
\t* \t@desc: remove column from list of those which should be verified\r\n
\t*\t@param: ind - column Index (0 based)\r\n
\t*\t@type: public\r\n
\t*/\r\n
\tclearVerificator:function(ind){\r\n
\t\tthis.mandatoryFields[ind] = false;\r\n
\t},\r\n
\t\r\n
\t\r\n
\t\r\n
\t\r\n
\t\r\n
\tfindRow:function(pattern){\r\n
\t\tvar i=0;\r\n
    \tfor(i=0;i<this.updatedRows.length;i++)\r\n
\t\t    if(pattern==this.updatedRows[i]) break;\r\n
\t    return i;\r\n
    },\r\n
\r\n
   \r\n
\t\r\n
\r\n
\r\n
    \r\n
\r\n
\r\n
\r\n
\r\n
\r\n
\t/**\r\n
\t* \t@desc: define custom actions\r\n
\t*\t@param: name - name of action, same as value of action attribute\r\n
\t*\t@param: handler - custom function, which receives a XMl response content for action\r\n
\t*\t@type: private\r\n
\t*/\r\n
\tdefineAction:function(name,handler){\r\n
        if (!this._uActions) this._uActions=[];\r\n
            this._uActions[name]=handler;\r\n
\t},\r\n
\r\n
\r\n
\r\n
\r\n
\t/**\r\n
*     @desc: used in combination with setOnBeforeUpdateHandler to create custom client-server transport system\r\n
*     @param: sid - id of item before update\r\n
*     @param: tid - id of item after up0ate\r\n
*     @param: action - action name\r\n
*     @type: public\r\n
*     @topic: 0\r\n
*/\r\n
\tafterUpdateCallback:function(sid, tid, action, btag) {\r\n
\t\tvar marker = sid;\r\n
\t\tvar correct=(action!="error" && action!="invalid");\r\n
\t\tif (!correct) this.set_invalid(sid,action);\r\n
\t\tif ((this._uActions)&&(this._uActions[action])&&(!this._uActions[action](btag))) \r\n
\t\t\treturn (delete this._in_progress[marker]);\r\n
\t\t\t\r\n
\t\tif (this._in_progress[marker]!="wait")\r\n
\t    \tthis.setUpdated(sid, false);\r\n
\t    \t\r\n
\t    var soid = sid;\r\n
\t\r\n
\t    switch (action) {\r\n
\t    case "inserted":\r\n
\t    case "insert":\r\n
\t        if (tid != sid) {\r\n
\t            this.obj[this._methods[2]](sid, tid);\r\n
\t            sid = tid;\r\n
\t        }\r\n
\t        break;\r\n
\t    case "delete":\r\n
\t    case "deleted":\r\n
\t    \tthis.obj.setUserData(sid, this.action_param, "true_deleted");\r\n
\t        this.obj[this._methods[3]](sid);\r\n
\t        delete this._in_progress[marker];\r\n
\t        return this.callEvent("onAfterUpdate", [sid, action, tid, btag]);\r\n
\t    }\r\n
\t    \r\n
\t    if (this._in_progress[marker]!="wait"){\r\n
\t    \tif (correct) this.obj.setUserData(sid, this.action_param,\'\');\r\n
\t    \tdelete this._in_progress[marker];\r\n
    \t} else {\r\n
    \t\tdelete this._in_progress[marker];\r\n
    \t\tthis.setUpdated(tid,true,this.obj.getUserData(sid,this.action_param));\r\n
\t\t}\r\n
\t    \r\n
\t    this.callEvent("onAfterUpdate", [soid, action, tid, btag]);\r\n
\t},\r\n
\r\n
\t/**\r\n
\t* \t@desc: response from server\r\n
\t*\t@param: xml - XMLLoader object with response XML\r\n
\t*\t@type: private\r\n
\t*/\r\n
\tafterUpdate:function(that,xml,id){\r\n
\t\t//try to use json first\r\n
\t\tif (window.JSON){\r\n
\t\t\ttry{\r\n
\t\t\t\tvar tag = JSON.parse(xml.xmlDoc.responseText);\r\n
\t\t\t\tvar action = tag.action || this.getState(id) || "updated";\r\n
\t\t\t\tvar sid = tag.sid || id[0];\r\n
\t\t\t\tvar tid = tag.tid || id[0];\r\n
\t\t\t\tthat.afterUpdateCallback(sid, tid, action, tag);\r\n
\t\t\t\tthat.finalizeUpdate();\r\n
\t\t\t\treturn;\r\n
\t\t\t} catch(e){\r\n
\t\t\t}\r\n
\t\t}\r\n
\t\t//xml response\r\n
\t\txml.getXMLTopNode("data"); //fix incorrect content type in IE\r\n
\r\n
\t\tif (!xml.xmlDoc.responseXML){\r\n
\t\t\tif(this.obj && this.obj.callEvent){\r\n
\t\t\t\tthis.obj.callEvent("onSaveError", [id, xml.xmlDoc]);\r\n
\t\t\t}\r\n
\t\t\treturn this.cleanUpdate(id);\r\n
\t\t}\r\n
\r\n
\t\tvar atag=xml.doXPath("//data/action");\r\n
\t\tif (!atag.length) return this.cleanUpdate(id);\r\n
\r\n
\t\tfor (var i=0; i<atag.length; i++){\r\n
        \tvar btag=atag[i];\r\n
\t\t\tvar action = btag.getAttribute("type");\r\n
\t\t\tvar sid = btag.getAttribute("sid");\r\n
\t\t\tvar tid = btag.getAttribute("tid");\r\n
\t\t\t\r\n
\t\t\tthat.afterUpdateCallback(sid,tid,action,btag);\r\n
\t\t}\r\n
\t\tthat.finalizeUpdate();\r\n
\t},\r\n
\tcleanUpdate:function(id){\r\n
\t\tif (id)\r\n
\t\t\tfor (var i = 0; i < id.length; i++)\r\n
\t\t\t\tdelete this._in_progress[id[i]];\r\n
\t},\r\n
\tfinalizeUpdate:function(){\r\n
\t\tif (this._waitMode) this._waitMode--;\r\n
\t\t\r\n
\t\tif ((this.obj.mytype=="tree" || this.obj._h2) && this.updatedRows.length) \r\n
\t\t\tthis.sendData();\r\n
\t\tthis.callEvent("onAfterUpdateFinish",[]);\r\n
\t\tif (!this.updatedRows.length)\r\n
\t\t\tthis.callEvent("onFullSync",[]);\r\n
\t},\r\n
\r\n
\r\n
\r\n
\r\n
\t\r\n
\t/**\r\n
\t* \t@desc: initializes data-processor\r\n
\t*\t@param: anObj - dhtmlxGrid object to attach this data-processor to\r\n
\t*\t@type: public\r\n
\t*/\r\n
\tinit:function(anObj){\r\n
\t\tthis.obj = anObj;\r\n
\t\tif (this.obj._dp_init) \r\n
\t\t\tthis.obj._dp_init(this);\r\n
\t},\r\n
\t\r\n
\t\r\n
\tsetOnAfterUpdate:function(ev){\r\n
\t\tthis.attachEvent("onAfterUpdate",ev);\r\n
\t},\r\n
\tenableDebug:function(mode){\r\n
\t},\r\n
\tsetOnBeforeUpdateHandler:function(func){  \r\n
\t\tthis.attachEvent("onBeforeDataSending",func);\r\n
\t},\r\n
\r\n
\r\n
\r\n
\t/* starts autoupdate mode\r\n
\t\t@param interval\r\n
\t\t\ttime interval for sending update requests\r\n
\t*/\r\n
\tsetAutoUpdate: function(interval, user) {\r\n
\t\tinterval = interval || 2000;\r\n
\t\t\r\n
\t\tthis._user = user || (new Date()).valueOf();\r\n
\t\tthis._need_update = false;\r\n
\t\tthis._loader = null;\r\n
\t\tthis._update_busy = false;\r\n
\t\t\r\n
\t\tthis.attachEvent("onAfterUpdate",function(sid,action,tid,xml_node){\r\n
\t\t\tthis.afterAutoUpdate(sid, action, tid, xml_node);\r\n
\t\t});\r\n
\t\tthis.attachEvent("onFullSync",function(){\r\n
\t\t\tthis.fullSync();\r\n
\t\t});\r\n
\t\t\r\n
\t\tvar self = this;\r\n
\t\twindow.setInterval(function(){\r\n
\t\t\tself.loadUpdate();\r\n
\t\t}, interval);\r\n
\t},\r\n
\r\n
\r\n
\t/* process updating request answer\r\n
\t\tif status == collision version is depricated\r\n
\t\tset flag for autoupdating immidiatly\r\n
\t*/\r\n
\tafterAutoUpdate: function(sid, action, tid, xml_node) {\r\n
\t\tif (action == \'collision\') {\r\n
\t\t\tthis._need_update = true;\r\n
\t\t\treturn false;\r\n
\t\t} else {\r\n
\t\t\treturn true;\r\n
\t\t}\r\n
\t},\r\n
\r\n
\r\n
\t/* callback function for onFillSync event\r\n
\t\tcall update function if it\'s need\r\n
\t*/\r\n
\tfullSync: function() {\r\n
\t\tif (this._need_update) {\r\n
\t\t\tthis._need_update = false;\r\n
\t\t\tthis.loadUpdate();\r\n
\t\t}\r\n
\t\treturn true;\r\n
\t},\r\n
\r\n
\r\n
\t/* sends query to the server and call callback function\r\n
\t*/\r\n
\tgetUpdates: function(url,callback){\r\n
\t\tif (this._update_busy) \r\n
\t\t\treturn false;\r\n
\t\telse\r\n
\t\t\tthis._update_busy = true;\r\n
\t\t\r\n
\t\tthis._loader = this._loader || new dtmlXMLLoaderObject(true);\r\n
\t\t\r\n
\t\tthis._loader.async=true;\r\n
\t\tthis._loader.waitCall=callback;\r\n
\t\tthis._loader.loadXML(url);\r\n
\t},\r\n
\r\n
\r\n
\t/* returns xml node value\r\n
\t\t@param node\r\n
\t\t\txml node\r\n
\t*/\r\n
\t_v: function(node) {\r\n
\t\tif (node.firstChild) return node.firstChild.nodeValue;\r\n
\t\treturn "";\r\n
\t},\r\n
\r\n
\r\n
\t/* returns values array of xml nodes array\r\n
\t\t@param arr\r\n
\t\t\tarray of xml nodes\r\n
\t*/\r\n
\t_a: function(arr) {\r\n
\t\tvar res = [];\r\n
\t\tfor (var i=0; i < arr.length; i++) {\r\n
\t\t\tres[i]=this._v(arr[i]);\r\n
\t\t}\r\n
\t\treturn res;\r\n
\t},\r\n
\r\n
\r\n
\t/* loads updates and processes them\r\n
\t*/\r\n
\tloadUpdate: function(){\r\n
\t\tvar self = this;\r\n
\t\tvar version = this.obj.getUserData(0,"version");\r\n
\t\tvar url = this.serverProcessor+getUrlSymbol(this.serverProcessor)+["dhx_user="+this._user,"dhx_version="+version].join("&");\r\n
\t\turl = url.replace("editing=true&","");\r\n
\t\tthis.getUpdates(url, function(){\r\n
\t\t\tvar vers = self._loader.doXPath("//userdata");\r\n
\t\t\tself.obj.setUserData(0,"version",self._v(vers[0]));\r\n
\t\t\t\r\n
\t\t\tvar upds = self._loader.doXPath("//update");\r\n
\t\t\tif (upds.length){\r\n
\t\t\t\tself._silent_mode = true;\r\n
\t\t\t\t\r\n
\t\t\t\tfor (var i=0; i<upds.length; i++) {\r\n
\t\t\t\t\tvar status = upds[i].getAttribute(\'status\');\r\n
\t\t\t\t\tvar id = upds[i].getAttribute(\'id\');\r\n
\t\t\t\t\tvar parent = upds[i].getAttribute(\'parent\');\r\n
\t\t\t\t\tswitch (status) {\r\n
\t\t\t\t\t\tcase \'inserted\':\r\n
\t\t\t\t\t\t\tself.callEvent("insertCallback",[upds[i], id, parent]);\r\n
\t\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t\tcase \'updated\':\r\n
\t\t\t\t\t\t\tself.callEvent("updateCallback",[upds[i], id, parent]);\r\n
\t\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t\tcase \'deleted\':\r\n
\t\t\t\t\t\t\tself.callEvent("deleteCallback",[upds[i], id, parent]);\r\n
\t\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t\t\r\n
\t\t\t\tself._silent_mode = false;\r\n
\t\t\t}\r\n
\t\t\t\r\n
\t\t\tself._update_busy = false;\r\n
\t\t\tself = null;\r\n
\t\t});\r\n
\t}\r\n
\r\n
};\r\n
\r\n
//(c)dhtmlx ltd. www.dhtmlx.com\r\n
if (window.dataProcessor && !dataProcessor.prototype.init_original){\r\n
\tdataProcessor.prototype.init_original=dataProcessor.prototype.init;\r\n
\tdataProcessor.prototype.init=function(obj){\r\n
\t\tthis.init_original(obj);\r\n
\t\tobj._dataprocessor=this;\r\n
\r\n
\t\tthis.setTransactionMode("POST",true);\r\n
\t\tthis.serverProcessor+=(this.serverProcessor.indexOf("?")!=-1?"&":"?")+"editing=true";\r\n
\t};\r\n
}\r\n
\r\n
dhtmlxError.catchError("LoadXML", function(a, b, c){\r\n
\tvar message = c[0].responseText;\r\n
\r\n
\tswitch (scheduler.config.ajax_error){\r\n
\t\tcase "alert":\r\n
\t\t\twindow.alert(message);\r\n
\t\t\tbreak;\r\n
\t\tcase "console":\r\n
\t\t\twindow.console.log(message);\r\n
\t\t\tbreak;\r\n
\t\tdefault:\r\n
\t\t\tbreak;\r\n
\t}\r\n
});\r\n
\r\n
\r\n
dhtmlxEventable(scheduler);\r\n
\r\n
scheduler._detachDomEvent = function(el, event, handler){\r\n
\tif (el.removeEventListener){\r\n
\t\tel.removeEventListener(event, handler, false);\r\n
\r\n
\t}else if (el.detachEvent){\r\n
\t\tel.detachEvent("on"+event, handler);\r\n
\t}\r\n
};\r\n
\r\n
scheduler._init_once = function(){\r\n
\r\n
\tvar oldSize = getWindowSize();\r\n
\tdhtmlxEvent(window,"resize",function(){\r\n
\t\tvar newSize = getWindowSize();\r\n
\r\n
\t\t// ie7-8 triggers "resize" when window\'s elements are resized, it messes container-autoresize extension\r\n
\t\t// check if it\'s actually resized\r\n
\t\tif(!equals(oldSize, newSize)){\r\n
\t\t\twindow.clearTimeout(scheduler._resize_timer);\r\n
\t\t\tscheduler._resize_timer=window.setTimeout(function(){\r\n
\t\t\t\tif (scheduler.callEvent("onSchedulerResize",[]))  {\r\n
\t\t\t\t\tscheduler.update_view();\r\n
\t\t\t\t\tscheduler.callEvent("onAfterSchedulerResize", []);\r\n
\t\t\t\t}\r\n
\t\t\t}, 100);\r\n
\t\t}\r\n
\t\toldSize = newSize;\r\n
\r\n
\t});\r\n
\tfunction getWindowSize(){\r\n
\t\treturn {\r\n
\t\t\tw : window.innerWidth || document.documentElement.clientWidth,\r\n
\t\t\th : window.innerHeight || document.documentElement.clientHeight\r\n
\t\t};\r\n
\t}\r\n
\tfunction equals(a,b){\r\n
\t\treturn a.w == b.w && a.h == b.h;\r\n
\t}\r\n
\r\n
\tscheduler._init_once = function(){};\r\n
};\r\n
scheduler.init=function(id,date,mode){\r\n
\tdate=date||(scheduler._currentDate());\r\n
\tmode=mode||"week";\r\n
\r\n
\tif(this._obj){\r\n
\t\tthis.unset_actions();\r\n
\t}\r\n
\r\n
\tthis._obj=(typeof id == "string")?document.getElementById(id):id;\r\n
\r\n
\t//hook for terrace skin\r\n
\tif (this._skin_init)\r\n
\t\tscheduler._skin_init();\r\n
\r\n
\tscheduler.date.init();\r\n
\r\n
\r\n
\tthis._els=[];\r\n
\tthis._scroll=true;\r\n
\tthis._quirks=(_isIE && document.compatMode == "BackCompat");\r\n
\tthis._quirks7=(_isIE && navigator.appVersion.indexOf("MSIE 8")==-1);\r\n
\r\n
\tthis.get_elements();\r\n
\tthis.init_templates();\r\n
\tthis.set_actions();\r\n
\r\n
\tthis._init_once();\r\n
\tthis._init_touch_events();\r\n
\r\n
\tthis.set_sizes();\r\n
\tscheduler.callEvent(\'onSchedulerReady\', []);\r\n
\tthis.setCurrentView(date,mode);\r\n
\r\n
};\r\n
\r\n
scheduler.xy={\r\n
\tmin_event_height:40,\r\n
\tscale_width:50,\r\n
\tscroll_width:18,\r\n
\tscale_height:20,\r\n
\tmonth_scale_height:20,\r\n
\tmenu_width:25,\r\n
\tmargin_top:0,\r\n
\tmargin_left:0,\r\n
\teditor_width:140,\r\n
\tmonth_head_height:22\r\n
};\r\n
scheduler.keys={\r\n
\tedit_save:13,\r\n
\tedit_cancel:27\r\n
};\r\n
scheduler.set_sizes=function(){\r\n
\tvar w = this._x = this._obj.clientWidth-this.xy.margin_left;\r\n
\tvar h = this._y = this._obj.clientHeight-this.xy.margin_top;\r\n
\t\r\n
\t//not-table mode always has scroll - need to be fixed in future\r\n
\tvar scale_x=this._table_view?0:(this.xy.scale_width+this.xy.scroll_width);\r\n
\tvar scale_s=this._table_view?-1:this.xy.scale_width;\r\n
\t\r\n
\tthis.set_xy(this._els["dhx_cal_navline"][0],w,this.xy.nav_height,0,0);\r\n
\tthis.set_xy(this._els["dhx_cal_header"][0],w-scale_x,this.xy.scale_height,scale_s,this.xy.nav_height+(this._quirks?-1:1));\r\n
\t//to support alter-skin, we need a way to alter height directly from css\r\n
\tvar actual_height = this._els["dhx_cal_navline"][0].offsetHeight;\r\n
\tif (actual_height > 0) this.xy.nav_height = actual_height;\r\n
\t\r\n
\tvar data_y=this.xy.scale_height+this.xy.nav_height+(this._quirks?-2:0);\r\n
\tthis.set_xy(this._els["dhx_cal_data"][0],w,h-(data_y+2),0,data_y+2);\r\n
};\r\n
scheduler.set_xy=function(node,w,h,x,y){\r\n
\tnode.style.width=Math.max(0,w)+"px";\r\n
\tnode.style.height=Math.max(0,h)+"px";\r\n
\tif (arguments.length>3){\r\n
\t\tnode.style.left=x+"px";\r\n
\t\tnode.style.top=y+"px";\t\r\n
\t}\r\n
};\r\n
scheduler.get_elements=function(){\r\n
\t//get all child elements as named hash\r\n
\tvar els=this._obj.getElementsByTagName("DIV");\r\n
\tfor (var i=0; i < els.length; i++){\r\n
\t\tvar class_name=els[i].className || "";\r\n
\t\tvar attr_value = els[i].getAttribute("name") || "";\r\n
\t\tif (class_name) class_name = class_name.split(" ")[0];\r\n
\t\tif (!this._els[class_name]) this._els[class_name]=[];\r\n
\t\tthis._els[class_name].push(els[i]);\r\n
\t\t\r\n
\t\t//check if name need to be changed\r\n
\t\tvar label = scheduler.locale.labels[attr_value||class_name];\r\n
\t\tif (typeof label !== "string" && attr_value && !els[i].innerHTML)\r\n
\t\t\t label = attr_value.split("_")[0];\r\n
\t\tif (label)\r\n
\t\t\tels[i].innerHTML= label;\r\n
\t}\r\n
};\r\n
\r\n
scheduler.unset_actions = function(){\r\n
\tfor (var a in this._els)\r\n
\t\tif (this._click[a])\r\n
\t\t\tfor (var i=0; i < this._els[a].length; i++)\r\n
\t\t\t\tthis._els[a][i].onclick = null;\r\n
\tthis._obj.onselectstart = null;\r\n
\tthis._obj.onmousemove = null;\r\n
\tthis._obj.onmousedown = null;\r\n
\tthis._obj.onmouseup = null;\r\n
\tthis._obj.ondblclick = null;\r\n
\tthis._obj.oncontextmenu = null;\r\n
};\r\n
\r\n
scheduler.set_actions=function(){\r\n
\tfor (var a in this._els)\r\n
\t\tif (this._click[a])\r\n
\t\t\tfor (var i=0; i < this._els[a].length; i++)\r\n
\t\t\t\tthis._els[a][i].onclick=scheduler._click[a];\r\n
\tthis._obj.onselectstart=function(e){ return false; };\r\n
\tthis._obj.onmousemove=function(e){\r\n
\t\tif (!scheduler._temp_touch_block)\r\n
\t\t\tscheduler._on_mouse_move(e||event);\r\n
\t};\r\n
\tthis._obj.onmousedown=function(e){\r\n
\t\tif (!scheduler._ignore_next_click)\r\n
\t\t\tscheduler._on_mouse_down(e||event);\r\n
\t};\r\n
\tthis._obj.onmouseup=function(e){\r\n
\t\tif (!scheduler._ignore_next_click)\r\n
\t\t\tscheduler._on_mouse_up(e||event);\r\n
\t};\r\n
\tthis._obj.ondblclick=function(e){\r\n
\t\tscheduler._on_dbl_click(e||event);\r\n
\t};\r\n
\tthis._obj.oncontextmenu = function(e) {\r\n
\t\tvar ev = e||event;\r\n
\t\tvar src = ev.target||ev.srcElement;\r\n
\t\tvar returnValue = scheduler.callEvent("onContextMenu", [scheduler._locate_event(src), ev]);\r\n
\t\treturn returnValue;\r\n
\t};\r\n
};\r\n
scheduler.select=function(id){\r\n
\tif (this._select_id==id) return;\r\n
\tscheduler._close_not_saved();\r\n
\tthis.editStop(false);\r\n
\tthis.unselect();\r\n
\tthis._select_id = id;\r\n
\tthis.updateEvent(id);\r\n
};\r\n
scheduler.unselect=function(id){\r\n
\tif (id && id!=this._select_id) return;\r\n
\tvar t=this._select_id;\r\n
\tthis._select_id = null;\r\n
\tif (t && this.getEvent(t)) this.updateEvent(t);\r\n
};\r\n
scheduler.getState=function(){\r\n
\treturn {\r\n
\t\tmode: this._mode,\r\n
\t\tdate: new Date(this._date),\r\n
\t\tmin_date: new Date(this._min_date),\r\n
\t\tmax_date: new Date(this._max_date),\r\n
\t\teditor_id: this._edit_id,\r\n
\t\tlightbox_id: this._lightbox_id,\r\n
\t\tnew_event: this._new_event,\r\n
\t\tselect_id: this._select_id,\r\n
\t\texpanded: this.expanded,\r\n
\t\tdrag_id: this._drag_id,\r\n
\t\tdrag_mode: this._drag_mode\r\n
\t};\r\n
};\r\n
scheduler._click={\r\n
\tdhx_cal_data:function(e){\r\n
\t\t//in case of touch disable click processing\r\n
\t\tif (scheduler._ignore_next_click){\r\n
\t\t\tif (e.preventDefault)\r\n
\t\t\t\te.preventDefault();\r\n
\t\t\te.cancelBubble = true;\r\n
\t\t\tscheduler._ignore_next_click = false;\r\n
\t\t\treturn false;\r\n
\t\t}\r\n
\r\n
\t\tvar trg = e?e.target:event.srcElement;\r\n
\t\tvar id = scheduler._locate_event(trg);\r\n
\t\t\r\n
\t\te = e || event;\r\n
\r\n
\t\tif (!id) {\r\n
\t\t\tscheduler.callEvent("onEmptyClick",[scheduler.getActionData(e).date, e]);\r\n
\t\t} else {\r\n
\t\t\tif ( !scheduler.callEvent("onClick",[id,e]) || scheduler.config.readonly ) return;\r\n
\t\t}\r\n
\r\n
\t\tif (id && scheduler.config.select) {\r\n
\r\n
\t\t\tscheduler.select(id);\r\n
\t\t\tvar mask = trg.className;\r\n
\t\t\tif (mask.indexOf("_icon")!=-1)\r\n
\t\t\t\tscheduler._click.buttons[mask.split(" ")[1].replace("icon_","")](id);\r\n
\t\t} else{\r\n
\t\t\tscheduler._close_not_saved();\r\n
\t\t\tif (new Date().valueOf()-(scheduler._new_event||0) > 500){\r\n
\t\t\t\tscheduler.unselect();\r\n
\t\t\t}\r\n
\t\t}\r\n
\t},\r\n
\tdhx_cal_prev_button:function(){\r\n
\t\tscheduler._click.dhx_cal_next_button(0,-1);\r\n
\t},\r\n
\tdhx_cal_next_button:function(dummy,step){\r\n
\t\tscheduler.setCurrentView(scheduler.date.add( //next line changes scheduler._date , but seems it has not side-effects\r\n
\t\t\tscheduler.date[scheduler._mode+"_start"](scheduler._date),(step||1),scheduler._mode));\r\n
\t},\r\n
\tdhx_cal_today_button:function(){\r\n
\t\tif (scheduler.callEvent("onBeforeTodayDisplayed", [])) {\r\n
\t\t\tscheduler.setCurrentView(scheduler._currentDate());\r\n
\t\t}\r\n
\t},\r\n
\tdhx_cal_tab:function(){\r\n
\t\tvar name = this.getAttribute("name");\r\n
\t\tvar mode = name.substring(0, name.search("_tab"));\r\n
\t\tscheduler.setCurrentView(scheduler._date,mode);\r\n
\t},\r\n
\tbuttons:{\r\n
\t\t"delete":function(id){\r\n
\t\t\tvar c = scheduler.locale.labels.confirm_deleting;\r\n
\t\t\tscheduler._dhtmlx_confirm(c, scheduler.locale.labels.title_confirm_deleting, function(){ scheduler.deleteEvent(id); });\r\n
\t\t},\r\n
\t\tedit:function(id){ scheduler.edit(id); },\r\n
\t\tsave:function(id){ scheduler.editStop(true); },\r\n
\t\tdetails:function(id){ scheduler.showLightbox(id); },\r\n
\t\tcancel:function(id){ scheduler.editStop(false); }\r\n
\t}\r\n
};\r\n
scheduler._dhtmlx_confirm = function(message, title, callback) {\r\n
\tif (!message)\r\n
\t\treturn callback();\r\n
\tvar opts = { text: message };\r\n
\tif (title)\r\n
\t\topts.title = title;\r\n
\tif (callback) {\r\n
\t\topts.callback = function(result) {\r\n
\t\t\tif (result)\r\n
\t\t\t\tcallback();\r\n
\t\t};\r\n
\t}\r\n
\tdhtmlx.confirm(opts);\r\n
};\r\n
scheduler.addEventNow=function(start,end,e){\r\n
\tvar base = {};\r\n
\tif (start && start.constructor.toString().match(/object/i) !== null){\r\n
\t\tbase = start;\r\n
\t\tstart = null;\r\n
\t}\r\n
\t\r\n
\tvar d = (this.config.event_duration||this.config.time_step)*60000;\r\n
\tif (!start) start = base.start_date||Math.round((scheduler._currentDate()).valueOf()/d)*d;\r\n
\tvar start_date = new Date(start);\r\n
\tif (!end){\r\n
\t\tvar start_hour = this.config.first_hour;\r\n
\t\tif (start_hour > start_date.getHours()){\r\n
\t\t\tstart_date.setHours(start_hour);\r\n
\t\t\tstart = start_date.valueOf();\r\n
\t\t}\r\n
\t\tend = start.valueOf()+d;\r\n
\t}\r\n
\tvar end_date = new Date(end);\r\n
\r\n
\t// scheduler.addEventNow(new Date(), new Date()) + collision though get_visible events defect (such event was not retrieved)\r\n
\tif(start_date.valueOf() == end_date.valueOf())\r\n
\t\tend_date.setTime(end_date.valueOf()+d);\r\n
\r\n
\tbase.start_date = base.start_date||start_date;\r\n
\tbase.end_date =  base.end_date||end_date;\r\n
\tbase.text = base.text||this.locale.labels.new_event;\r\n
\tbase.id = this._drag_id = this.uid();\r\n
\tthis._drag_mode="new-size";\r\n
\r\n
\tthis._loading=true;\r\n
\tthis.addEvent(base);\r\n
\tthis.callEvent("onEventCreated",[this._drag_id,e]);\r\n
\tthis._loading=false;\r\n
\t\r\n
\tthis._drag_event={}; //dummy , to trigger correct event updating logic\r\n
\tthis._on_mouse_up(e);\t\r\n
};\r\n
scheduler._on_dbl_click=function(e,src){\r\n
\tsrc = src||(e.target||e.srcElement);\r\n
\tif (this.config.readonly) return;\r\n
\tvar name = (src.className||"").split(" ")[0];\r\n
\tswitch(name){\r\n
\t\tcase "dhx_scale_holder":\r\n
\t\tcase "dhx_scale_holder_now":\r\n
\t\tcase "dhx_month_body":\r\n
\t\tcase "dhx_wa_day_data":\r\n
\t\t\tif (!scheduler.config.dblclick_create) break;\r\n
\t\t\tthis.addEventNow(this.getActionData(e).date,null,e);\r\n
\t\t\tbreak;\r\n
\t\tcase "dhx_cal_event":\r\n
\t\tcase "dhx_wa_ev_body":\r\n
\t\tcase "dhx_agenda_line":\r\n
\t\tcase "dhx_grid_event":\r\n
\t\tcase "dhx_cal_event_line":\r\n
\t\tcase "dhx_cal_event_clear":\r\n
\t\t\tvar id = this._locate_event(src);\r\n
\t\t\tif (!this.callEvent("onDblClick",[id,e])) return;\r\n
\t\t\tif (this.config.details_on_dblclick || this._table_view || !this.getEvent(id)._timed || !this.config.select)\r\n
\t\t\t\tthis.showLightbox(id);\r\n
\t\t\telse\r\n
\t\t\t\tthis.edit(id);\r\n
\t\t\tbreak;\r\n
\t\tcase "dhx_time_block":\r\n
\t\tcase "dhx_cal_container":\r\n
\t\t\treturn;\r\n
\t\tdefault:\r\n
\t\t\tvar t = this["dblclick_"+name];\r\n
\t\t\tif (t) {\r\n
\t\t\t\tt.call(this,e);\r\n
\t\t\t}\r\n
\t\t\telse {\r\n
\t\t\t\tif (src.parentNode && src != this)\r\n
\t\t\t\t\treturn scheduler._on_dbl_click(e,src.parentNode);\r\n
\t\t\t}\r\n
\t\t\tbreak;\r\n
\t}\r\n
};\r\n
//column index by mouse x-coordinate\r\n
scheduler._get_column_index = function(x_pos){\r\n
\tvar column = 0;\r\n
\tif (this._cols){\r\n
\r\n
\t\tvar width = 0;\r\n
\t\tfor(var i=0; i < this._cols.length && !width; i++){\r\n
\t\t\twidth = this._cols[i];\r\n
\t\t}\r\n
\r\n
\t\tif(width){\r\n
\t\t\tcolumn = x_pos / width;\r\n
\t\t}else{\r\n
\t\t\tcolumn = 0;\r\n
\t\t}\r\n
\r\n
\t\tif (this._ignores)\r\n
\t\t\tfor (var i=0; i<=column; i++)\r\n
\t\t\t\tif (this._ignores[i])\r\n
\t\t\t\t\tcolumn++;\r\n
\t}\r\n
\treturn column;\r\n
};\r\n
//transform mouse coordinates to day-time indexes of week based view\r\n
scheduler._week_indexes_from_pos = function(pos){\r\n
\t//"get position" can be invoked before columns are loaded into the units view(e.g. by onMouseMove handler in key_nav.js)\r\n
\tif(!this._cols){\r\n
\t\treturn pos;\r\n
\t}else{\r\n
\t\tvar column = this._get_column_index(pos.x);\r\n
\t\tpos.x=Math.min(this._cols.length-1, Math.max(0,Math.ceil(column)-1));\r\n
\r\n
\t\tpos.y=Math.max(0,Math.ceil(pos.y*60/(this.config.time_step*this.config.hour_size_px))-1)+this.config.first_hour*(60/this.config.time_step);\r\n
\t\treturn pos;\r\n
\t}\r\n
};\r\n
\r\n
scheduler._mouse_coords=function(ev){\r\n
\tvar pos;\r\n
\tvar b=document.body;\r\n
\tvar d = document.documentElement;\r\n
\tif (!_isIE && (ev.pageX || ev.pageY))\r\n
\t    pos={x:ev.pageX, y:ev.pageY};\r\n
\telse pos={\r\n
\t    x:ev.clientX + (b.scrollLeft||d.scrollLeft||0) - b.clientLeft,\r\n
\t    y:ev.clientY + (b.scrollTop||d.scrollTop||0) - b.clientTop\r\n
\t};\r\n
\r\n
\t//apply layout\r\n
\tpos.x-=getAbsoluteLeft(this._obj)+(this._table_view?0:this.xy.scale_width);\r\n
\tpos.y-=getAbsoluteTop(this._obj)+this.xy.nav_height+(this._dy_shift||0)+this.xy.scale_height-this._els["dhx_cal_data"][0].scrollTop;\r\n
\tpos.ev = ev;\r\n
\r\n
\tvar handler = this["mouse_"+this._mode];\r\n
\tif (handler)\r\n
\t\treturn handler.call(this,pos);\r\n
\r\n
\r\n
\t//transform to date\r\n
\tif (!this._table_view) {\r\n
\t\tpos = this._week_indexes_from_pos(pos);\r\n
\t} else {\r\n
\t\tvar column = this._get_column_index(pos.x);\r\n
\t\tif (!this._cols || !this._colsS) // agenda/map views\r\n
\t\t\treturn pos;\r\n
\t\tvar dy=0;\r\n
\t\tfor (dy=1; dy < this._colsS.heights.length; dy++)\r\n
\t\t\tif (this._colsS.heights[dy]>pos.y) break;\r\n
\r\n
\t\tpos.y=Math.ceil( (Math.max(0, column)+Math.max(0,dy-1)*7)*24*60/this.config.time_step );\r\n
\r\n
\t\tif (scheduler._drag_mode || this._mode == "month")\r\n
\t\t\tpos.y=(Math.max(0,Math.ceil(column)-1)+Math.max(0,dy-1)*7)*24*60/this.config.time_step;\r\n
\r\n
\t\t//we care about ignored days only during event moving in month view\r\n
\t\tif (this._drag_mode == "move"){\r\n
\t\t\tif (scheduler._ignores_detected && scheduler.config.preserve_length){\r\n
\t\t\t\tpos._ignores = true;\r\n
\t\t\t\t//get real lengtn of event\r\n
\t\t\t\tif (!this._drag_event._event_length)\r\n
\t\t\t\t\tthis._drag_event._event_length = this._get_real_event_length(this._drag_event.start_date, this._drag_event.end_date, { x_step:1, x_unit:"day"});\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\tpos.x=0;\r\n
\t}\r\n
\treturn pos;\r\n
};\r\n
scheduler._close_not_saved=function(){\r\n
\tif (new Date().valueOf()-(scheduler._new_event||0) > 500 && scheduler._edit_id){\r\n
\t\tvar c=scheduler.locale.labels.confirm_closing;\r\n
\r\n
\t\tscheduler._dhtmlx_confirm(c, scheduler.locale.labels.title_confirm_closing, function() { scheduler.editStop(scheduler.config.positive_closing); });\r\n
\t\tif(c){\r\n
\t\t\tthis._drag_id = this._drag_pos = this._drag_mode = null;\r\n
\t\t}\r\n
\t}\r\n
};\r\n
scheduler._correct_shift=function(start, back){\r\n
\treturn start-=((new Date(scheduler._min_date)).getTimezoneOffset()-(new Date(start)).getTimezoneOffset())*60000*(back?-1:1);\t\r\n
};\r\n
\r\n
scheduler._is_pos_changed = function(old_pos, new_pos){\r\n
\tfunction diff(old_val, new_val, acc){\r\n
\t\treturn !!(Math.abs(old_val - new_val) > acc);\r\n
\t}\r\n
\r\n
\tif(!(old_pos && this._drag_pos)){\r\n
\t\treturn true;\r\n
\t}\r\n
\tvar delay = 100,\r\n
\t\td_pos = 5;\r\n
\r\n
\t// start drag only if passed some time since mouse down, or if mouse position changed sufficiently\r\n
\treturn !!(!this._drag_pos.start || (+new Date() - this._drag_pos.start > delay) || diff(old_pos.x, new_pos.x, d_pos) || diff(old_pos.y, new_pos.y, d_pos));\r\n
};\r\n
\r\n
scheduler._on_mouse_move=function(e){\r\n
\tif (this._drag_mode){\r\n
\t\tvar pos=this._mouse_coords(e);\r\n
\t\tif (pos.force_redraw || this._is_pos_changed(this._drag_pos, pos)){\r\n
\t\t\tvar start, end;\r\n
\t\t\tif (this._edit_id!=this._drag_id)\r\n
\t\t\t\tthis._close_not_saved();\r\n
\r\n
\t\t\tif(!this._drag_mode)\r\n
\t\t\t\treturn;\r\n
\r\n
\t\t\tthis._drag_pos=pos;\r\n
\t\t\tthis._drag_pos.has_moved = true;\r\n
\r\n
\t\t\tif (this._drag_mode=="create"){\r\n
\t\t\t\tthis._close_not_saved();\r\n
\t\t\t\tthis.unselect(this._select_id);\r\n
\t\t\t\tthis._loading=true; //will be ignored by dataprocessor\r\n
\t\t\t\t\r\n
\t\t\t\tstart = this._get_date_from_pos(pos).valueOf();\r\n
\r\n
\t\t\t\tif (!this._drag_start) {\r\n
\t\t\t\t\tvar res = this.callEvent("onBeforeEventCreated", [e, this._drag_id]);\r\n
\t\t\t\t\tif (!res)\r\n
\t\t\t\t\t\treturn;\r\n
\r\n
\r\n
\t\t\t\t\tthis._drag_start=start;\r\n
\t\t\t\t\treturn;\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tend = start;\r\n
\t\t\t\tif (end == this._drag_start) {\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tvar start_date = new Date(this._drag_start);\r\n
\t\t\t\tvar end_date = new Date(end);\r\n
\t\t\t\tif ( (this._mode == "day" || this._mode == "week") &&\r\n
\t\t\t\t\t(start_date.getHours() == end_date.getHours() &&\r\n
\t\t\t\t\tstart_date.getMinutes() == end_date.getMinutes()) ) {\r\n
\t\t\t\t\t\tend_date = new Date(this._drag_start+1000);\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\t\r\n
\t\t\t\tthis._drag_id=this.uid();\r\n
\t\t\t\tthis.addEvent(start_date, end_date, this.locale.labels.new_event, this._drag_id, pos.fields);\r\n
\t\t\t\t\r\n
\t\t\t\tthis.callEvent("onEventCreated",[this._drag_id,e]);\r\n
\t\t\t\tthis._loading=false;\r\n
\t\t\t\tthis._drag_mode="new-size";\r\n
\t\t\t\t\r\n
\t\t\t} \r\n
\r\n
\t\t\tvar ev=this.getEvent(this._drag_id);\r\n
\t\t\tvar obj;\r\n
\r\n
\t\t\tif (this._drag_mode=="move"){\r\n
\t\t\t\tstart = this._min_date.valueOf()+(pos.y*this.config.time_step+pos.x*24*60 -(scheduler._move_pos_shift||0) )*60000;\r\n
\t\t\t\tif (!pos.custom && this._table_view) start+=this.date.time_part(ev.start_date)*1000;\r\n
\t\t\t\tstart = this._correct_shift(start);\r\n
\r\n
\t\t\t\tif (pos._ignores && this.config.preserve_length && this._table_view){\r\n
\t\t\t\t\tif (this.matrix) \r\n
\t\t\t\t\t\tobj = this.matrix[this._mode];\r\n
\t\t\t\t\tobj = obj  || { x_step:1, x_unit:"day" };\r\n
\t\t\t\t\tend = start*1 + this._get_fictional_event_length(start, this._drag_event._event_length, obj);\r\n
\t\t\t\t} else\r\n
\t\t\t\t\tend = ev.end_date.valueOf()-(ev.start_date.valueOf()-start);\r\n
\t\t\t} else { // resize\r\n
\t\t\t\tstart = ev.start_date.valueOf();\r\n
\t\t\t\tend = ev.end_date.valueOf();\r\n
\t\t\t\tif (this._table_view) {\r\n
\t\t\t\t\tvar resize_date = this._min_date.valueOf()+pos.y*this.config.time_step*60000 + (pos.custom?0:24*60*60000);\r\n
\t\t\t\t\tif (this._mode == "month") {\r\n
\t\t\t\t\t\tresize_date = this._correct_shift(resize_date, false);\r\n
\t\t\t\t\t\tif( this._drag_from_start ) {\r\n
\t\t\t\t\t\t\tvar day = 24*60*60000;\r\n
\t\t\t\t\t\t\tif( resize_date <= scheduler.date.date_part(new Date(end+day-1)).valueOf() ) // to get end time as 23:59:59 and then the day start\r\n
\t\t\t\t\t\t\t\tstart = resize_date - day;\r\n
\t\t\t\t\t\t} else {\r\n
\t\t\t\t\t\t\tend = resize_date;\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t} else {\r\n
\t\t\t\t\t\tif (pos.resize_from_start)\r\n
\t\t\t\t\t\t\tstart = resize_date;\r\n
\t\t\t\t\t\telse\r\n
\t\t\t\t\t\t\tend = resize_date;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\tend = this.date.date_part(new Date(ev.end_date.valueOf() - 1)).valueOf()+pos.y*this.config.time_step*60000;\r\n
\t\t\t\t\tthis._els["dhx_cal_data"][0].style.cursor="s-resize";\r\n
\t\t\t\t\tif (this._mode == "week" || this._mode == "day")\r\n
\t\t\t\t\t\tend = this._correct_shift(end);\r\n
\t\t\t\t}\r\n
\t\t\t\tif (this._drag_mode == "new-size") {\r\n
\t\t\t\t\tif (end <= this._drag_start){\r\n
\t\t\t\t\t\tvar shift = pos.shift||((this._table_view && !pos.custom)?24*60*60000:0);\r\n
\t\t\t\t\t\tstart = end-(pos.shift?0:shift);\r\n
\t\t\t\t\t\tend = this._drag_start+(shift||(this.config.time_step*60000));\r\n
\t\t\t\t\t} else {\r\n
\t\t\t\t\t\tstart = this._drag_start;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\tif (end<=start)\r\n
\t\t\t\t\t\tend=start+this.config.time_step*60000;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t\tvar new_end = new Date(end-1);\t\t\t\r\n
\t\t\tvar new_start = new Date(start);\r\n
\t\t\t//deny drag out of visible scheduler scale in timeline view\r\n
\t\t\tif(scheduler.config.limit_drag_out &&\r\n
\t\t\t\t(+new_start < +scheduler._min_date || +end > +scheduler._max_date)){\r\n
\t\t\t\t\tvar duration = end - new_start;\r\n
\t\t\t\t\tif(+new_start < +scheduler._min_date){\r\n
\t\t\t\t\t\tnew_start = new Date(scheduler._min_date);\r\n
\t\t\t\t\t\tend = new Date(+new_start + duration);\r\n
\t\t\t\t\t}else{\r\n
\t\t\t\t\t\tend = new Date(scheduler._max_date);\r\n
\t\t\t\t\t\tnew_start = new Date(+end - duration);\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\tvar new_end = new Date(end-1);\r\n
\t\t\t}\r\n
\r\n
\r\n
\r\n
\t\t\t// fix event dates when resized to bottom of the column (day/week views)\r\n
\t\t\tif(!this._table_view &&\r\n
\t\t\t\t!scheduler.config.all_timed &&\r\n
\t\t\t\t((!scheduler._get_section_view() && pos.x != this._get_event_sday({start_date: new Date(end), end_date:new Date(end)})) || new Date(end).getHours() >= this.config.last_hour)){\r\n
\t\t\t\tvar duration = end - new_start;\r\n
\t\t\t\tvar day = this._min_date.valueOf()+(pos.x*24*60)*60000;\r\n
\t\t\t\tend = scheduler.date.date_part(new Date(day));\r\n
\t\t\t\tend.setHours(this.config.last_hour);\r\n
\t\t\t\tnew_end = new Date(end-1);\r\n
\t\t\t\tif(this._drag_mode == "move"){\r\n
\t\t\t\t\tnew_start = new Date(+end - duration);\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\t//prevent out-of-borders situation for day|week view\r\n
\t\t\tif ( this._table_view || (new_end.getDate()==new_start.getDate() && new_end.getHours()<this.config.last_hour) || scheduler._allow_dnd ){\r\n
\t\t\t\tev.start_date=new_start;\r\n
\t\t\t\tev.end_date=new Date(end);\r\n
\t\t\t\tif (this.config.update_render){\r\n
\t\t\t\t\t//fix for repaint after dnd and scroll issue, #231\r\n
\t\t\t\t\tvar sx = scheduler._els["dhx_cal_data"][0].scrollTop;\r\n
\t\t\t\t\tthis.update_view();\r\n
\t\t\t\t\tscheduler._els["dhx_cal_data"][0].scrollTop = sx;\r\n
\t\t\t\t} else\r\n
\t\t\t\t\tthis.updateEvent(this._drag_id);\r\n
\t\t\t}\r\n
\t\t\tif (this._table_view) {\r\n
\t\t\t\tthis.for_rendered(this._drag_id,function(r){\r\n
\t\t\t\t\tr.className+=" dhx_in_move";\r\n
\t\t\t\t});\r\n
\t\t\t}\r\n
\r\n
\t\t\tthis.callEvent("onEventDrag", [this._drag_id, this._drag_mode, e]);\r\n
\t\t}\r\n
\t}  else {\r\n
\t\tif (scheduler.checkEvent("onMouseMove")){\r\n
\t\t\tvar id = this._locate_event(e.target||e.srcElement);\r\n
\t\t\tthis.callEvent("onMouseMove",[id,e]);\r\n
\t\t}\r\n
\t}\r\n
};\r\n
scheduler._on_mouse_down=function(e,src) {\r\n
\t// on Mac we do not get onmouseup event when clicking right mouse button leaving us in dnd state\r\n
\t// let\'s ignore right mouse button then\r\n
\tif (e.button == 2)\r\n
\t\treturn;\r\n
\r\n
\tif (this.config.readonly || this._drag_mode) return;\r\n
\tsrc = src||(e.target||e.srcElement);\r\n
\tvar classname = src.className && src.className.split(" ")[0];\r\n
\r\n
\tswitch (classname) {\r\n
\t\tcase "dhx_cal_event_line":\r\n
\t\tcase "dhx_cal_event_clear":\r\n
\t\t\tif (this._table_view)\r\n
\t\t\t\tthis._drag_mode="move"; //item in table mode\r\n
\t\t\tbreak;\r\n
\t\tcase "dhx_event_move":\r\n
\t\tcase "dhx_wa_ev_body":\r\n
\t\t\tthis._drag_mode="move";\r\n
\t\t\tbreak;\r\n
\t\tcase "dhx_event_resize":\r\n
\t\t\tthis._drag_mode="resize";\r\n
\t\t\tif((src.className||"").indexOf("dhx_event_resize_end") < 0){\r\n
\t\t\t\tscheduler._drag_from_start = true;\r\n
\t\t\t}else{\r\n
\t\t\t\tscheduler._drag_from_start = false;\r\n
\t\t\t}\r\n
\t\t\tbreak;\r\n
\t\tcase "dhx_scale_holder":\r\n
\t\tcase "dhx_scale_holder_now":\r\n
\t\tcase "dhx_month_body":\r\n
\t\tcase "dhx_matrix_cell":\r\n
\t\tcase "dhx_marked_timespan":\r\n
\t\t\tthis._drag_mode="create";\r\n
\t\t\tbreak;\r\n
\t\tcase "":\r\n
\t\t\tif (src.parentNode)\r\n
\t\t\t\treturn scheduler._on_mouse_down(e,src.parentNode);\r\n
\t\t\tbreak;\r\n
\t\tdefault:\r\n
\t\t\tif (!scheduler.checkEvent("onMouseDown") || scheduler.callEvent("onMouseDown", [classname])) {\r\n
\t\t\t\tif (src.parentNode && src != this && classname != "dhx_body") {\r\n
\t\t\t\t\treturn scheduler._on_mouse_down(e,src.parentNode);\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t\tthis._drag_mode=null;\r\n
\t\t\tthis._drag_id=null;\r\n
\t\t\tbreak;\r\n
\t}\r\n
\tif (this._drag_mode){\r\n
\t\tvar id = this._locate_event(src);\r\n
\t\tif (!this.config["drag_"+this._drag_mode] || !this.callEvent("onBeforeDrag",[id, this._drag_mode, e]))\r\n
\t\t\tthis._drag_mode=this._drag_id=0;\r\n
\t\telse {\r\n
\t\t\tthis._drag_id= id;\r\n
\r\n
\t\t\tif (this._edit_id!=this._drag_id || (this._edit_id && this._drag_mode == "create"))\r\n
\t\t\t\tthis._close_not_saved();\r\n
\t\t\tif(!this._drag_mode)\r\n
\t\t\t\treturn;\r\n
\r\n
\t\t\tthis._drag_event = scheduler._lame_clone(this.getEvent(this._drag_id) || {});\r\n
\t\t\tthis._drag_pos = this._mouse_coords(e);\r\n
\t\t\tthis._drag_pos.start = +new Date();\r\n
\t\t}\r\n
\t}\r\n
\tthis._drag_start=null;\r\n
};\r\n
\r\n
\r\n
scheduler._get_private_properties = function(event){\r\n
\tvar fields = {};\r\n
\tfor(var i in event){\r\n
\t\tif(i.indexOf("_") === 0){\r\n
\t\t\tfields[i] = true;\r\n
\t\t}\r\n
\t}\r\n
\treturn fields;\r\n
};\r\n
scheduler._clear_temporary_properties = function(clean, flagged_event){\r\n
\tvar initial = this._get_private_properties(clean);\r\n
\tvar current_state = this._get_private_properties(flagged_event);\r\n
\tfor(var i in current_state){\r\n
\t\tif(!initial[i]){\r\n
\t\t\tdelete flagged_event[i];\r\n
\t\t}\r\n
\t}\r\n
};\r\n
\r\n
\r\n
scheduler._on_mouse_up=function(e){\r\n
\tif (e && e.button == 2 && scheduler.config.touch) return;\r\n
\tif (this._drag_mode && this._drag_id){\r\n
\t\tthis._els["dhx_cal_data"][0].style.cursor="default";\r\n
\t\t//drop\r\n
\r\n
\t\tvar drag_id = this._drag_id;\r\n
\t\tvar mode = this._drag_mode;\r\n
\r\n
\t\tvar moved = !this._drag_pos || this._drag_pos.has_moved;\r\n
\r\n
\t\tvar ev=this.getEvent(this._drag_id);\r\n
\t\tif (moved && (this._drag_event._dhx_changed || !this._drag_event.start_date || ev.start_date.valueOf()!=this._drag_event.start_date.valueOf() || ev.end_date.valueOf()!=this._drag_event.end_date.valueOf())){\r\n
\t\t\tvar is_new=(this._drag_mode=="new-size");\r\n
\t\t\tif (!this.callEvent("onBeforeEventChanged",[ev, e, is_new, this._drag_event])){\r\n
\t\t\t\tif (is_new) \r\n
\t\t\t\t\tthis.deleteEvent(ev.id, true);\r\n
\t\t\t\telse {\r\n
\t\t\t\t\tthis._drag_event._dhx_changed = false;\r\n
\t\t\t\t\tthis._clear_temporary_properties(ev, this._drag_event);\r\n
\t\t\t\t\tscheduler._lame_copy(ev, this._drag_event);\r\n
\t\t\t\t\tthis.updateEvent(ev.id);\r\n
\t\t\t\t}\r\n
\t\t\t} else {\r\n
\r\n
\t\t\t\tthis._drag_id = this._drag_mode = null;\r\n
\t\t\t\tif (is_new && this.config.edit_on_create){\r\n
\t\t\t\t\tthis.unselect();\r\n
\t\t\t\t\tthis._new_event=new Date();//timestamp of creation\r\n
\t\t\t\t\t//if selection disabled - force lightbox usage\r\n
\t\t\t\t\tif (this._table_view || this.config.details_on_create || !this.config.select) {\r\n
\t\t\t\t\t\tscheduler.callEvent("onDragEnd", [drag_id, mode, e]);\r\n
\t\t\t\t\t\treturn this.showLightbox(drag_id);\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\tthis._drag_pos = true; //set flag to trigger full redraw\r\n
\t\t\t\t\tthis._select_id = this._edit_id = drag_id;\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\tif (!this._new_event)\r\n
\t\t\t\t\t\tthis.callEvent(is_new?"onEventAdded":"onEventChanged",[drag_id,this.getEvent(drag_id)]);\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\t\tif (this._drag_pos && (this._drag_pos.has_moved || this._drag_pos === true)) this.render_view_data(); //redraw even if there is no real changes - necessary for correct positioning item after drag\r\n
\t\tscheduler.callEvent("onDragEnd", [drag_id, mode, e]);\r\n
\t}\r\n
\tthis._drag_id = null;\r\n
\tthis._drag_mode=null;\r\n
\tthis._drag_pos=null;\r\n
};\r\n
\r\n
scheduler._trigger_dyn_loading = function(){\r\n
\tif (this._load_mode && this._load()){\r\n
\t\tthis._render_wait = true;\r\n
\t\treturn true;\r\n
\t}else{\r\n
\t\treturn false;\r\n
\t}\r\n
};\r\n
scheduler.update_view=function(){\r\n
\tvar view = this[this._mode + "_view"];\r\n
\tif(view){\r\n
\t\tview(true);\r\n
\t}else{\r\n
\t\tthis._reset_scale();\r\n
\t}\r\n
\r\n
\tif (this._trigger_dyn_loading()){\r\n
\t\treturn true;\r\n
\t}\r\n
\tthis.render_view_data();\r\n
};\r\n
\r\n
scheduler.isViewExists = function(mode){\r\n
\treturn !!(scheduler[mode+ "_view"] ||\r\n
\t\t(scheduler.date[mode+ "_start"] && scheduler.templates[mode+ "_date"] && scheduler.templates[mode+ "_scale_date"]));\r\n
};\r\n
\r\n
scheduler.updateView = function(date, mode) {\r\n
\tdate = date || this._date;\r\n
\tmode = mode || this._mode;\r\n
\tvar dhx_cal_data = \'dhx_cal_data\';\r\n
\r\n
\tif (!this._mode)\r\n
\t\tthis._obj.className += " dhx_scheduler_" + mode; else {\r\n
\t\tthis._obj.className = this._obj.className.replace("dhx_scheduler_" + this._mode, "dhx_scheduler_" + mode);\r\n
\t}\r\n
\r\n
\tvar prev_scroll = (this._mode == mode && this.config.preserve_scroll) ? this._els[dhx_cal_data][0].scrollTop : false; // saving current scroll\r\n
\r\n
\t//hide old custom view\r\n
\tif (this[this._mode + "_view"] && mode && this._mode != mode)\r\n
\t\tthis[this._mode + "_view"](false);\r\n
\r\n
\tthis._close_not_saved();\r\n
\r\n
\tvar dhx_multi_day = \'dhx_multi_day\';\r\n
\tif (this._els[dhx_multi_day]) {\r\n
\t\tthis._els[dhx_multi_day][0].parentNode.removeChild(this._els[dhx_multi_day][0]);\r\n
\t\tthis._els[dhx_multi_day] = null;\r\n
\t}\r\n
\r\n
\tthis._mode = mode;\r\n
\tthis._date = date;\r\n
\tthis._table_view = (this._mode == "month");\r\n
\r\n
\tthis._dy_shift = 0;//correction for multiday section in week/day views\r\n
\r\n
\tvar tabs = this._els["dhx_cal_tab"];\r\n
\tif(tabs){//calendar can work without view tabs\r\n
\t\tfor (var i = 0; i < tabs.length; i++) {\r\n
\t\t\tvar name = tabs[i].className;\r\n
\t\t\tname = name.replace(/ active/g, "");\r\n
\t\t\tif (tabs[i].getAttribute("name") == this._mode + "_tab")\r\n
\t\t\t\tname = name + " active";\r\n
\t\t\ttabs[i].className = name;\r\n
\t\t}\r\n
\t}\r\n
\t//show new view\r\n
\tthis.update_view();\r\n
\r\n
\tif (typeof prev_scroll == "number") // if we are updating or working with the same view scrollTop should be saved\r\n
\t\tthis._els[dhx_cal_data][0].scrollTop = prev_scroll; // restoring original scroll\r\n
};\r\n
scheduler.setCurrentView = function(date, mode) {\r\n
\tif (!this.callEvent("onBeforeViewChange", [this._mode, this._date, mode || this._mode, date || this._date])) return;\r\n
\tthis.updateView(date, mode);\r\n
\tthis.callEvent("onViewChange", [this._mode, this._date]);\r\n
};\r\n
scheduler._render_x_header = function(i,left,d,h, offset_top){\r\n
\toffset_top = offset_top || 0;\r\n
\t//header scale\t\r\n
\tvar head=document.createElement("DIV");\r\n
\thead.className = "dhx_scale_bar";\r\n
\r\n
\tif(this.templates[this._mode+"_scalex_class"]){\r\n
\t\t//\'_scalex_class\' - timeline already have similar template, use the same name\r\n
\t\thead.className += \' \' + this.templates[this._mode+"_scalex_class"](d);\r\n
\t}\r\n
\r\n
\tvar width = this._cols[i]-1;\r\n
\r\n
\tif (this._mode == "month" && i === 0 && this.config.left_border) {\r\n
\t\thead.className += " dhx_scale_bar_border";\r\n
\t\tleft = left+1;\r\n
\t}\r\n
\tthis.set_xy(head, width, this.xy.scale_height-2, left, offset_top);//-1 for border\r\n
\thead.innerHTML=this.templates[this._mode+"_scale_date"](d,this._mode); //TODO - move in separate method\r\n
\th.appendChild(head);\r\n
};\r\n
\r\n
scheduler._get_columns_num = function(from, to){\r\n
\tvar count = 7;\r\n
\tif (!scheduler._table_view){\r\n
\t\tvar count_n = scheduler.date["get_"+scheduler._mode+"_end"];\r\n
\t\tif (count_n) to = count_n(from);\r\n
\t\tcount = Math.round((to.valueOf()-from.valueOf())/(1000*60*60*24));\r\n
\t}\r\n
\treturn count;\r\n
};\r\n
scheduler._get_timeunit_start = function(){\r\n
\t//start date of currently displayed time unit(day, week,...)\r\n
\treturn this.date[this._mode+"_start"](new Date(this._date.valueOf()));\r\n
};\r\n
\r\n
scheduler._get_view_end = function(){\r\n
\tvar dd = this._get_timeunit_start();\r\n
\tvar ed = scheduler.date.add(dd, 1, this._mode);\r\n
\tif (!scheduler._table_view){\r\n
\t\tvar count_n = scheduler.date["get_"+scheduler._mode+"_end"];\r\n
\t\tif (count_n) ed = count_n(dd);\r\n
\t}\r\n
\treturn ed;\r\n
};\r\n
scheduler._calc_scale_sizes = function(width, from, to){\r\n
\t//calculates number of displayed columns(days/units/month view cols) and their widths\r\n
\tvar summ = width; //border delta\r\n
\tvar count = this._get_columns_num(from, to);\r\n
\r\n
\tthis._process_ignores(from, count, "day", 1);\r\n
\tvar realcount = count - this._ignores_detected;\r\n
\r\n
\tfor (var i=0; i<count; i++){\r\n
\t\tif (this._ignores[i]){\r\n
\t\t\tthis._cols[i] = 0;\r\n
\t\t\trealcount++;\r\n
\t\t} else {\r\n
\t\t\tthis._cols[i]=Math.floor(summ/(realcount-i));\r\n
\t\t}\r\n
\t\tsumm-=this._cols[i];\r\n
\t\tthis._colsS[i]=(this._cols[i-1]||0)+(this._colsS[i-1]||(this._table_view?0:this.xy.scale_width+2));\r\n
\t}\r\n
\tthis._colsS[\'col_length\'] = count;\r\n
\r\n
\tthis._colsS[count] = (this._cols[count-1]+this._colsS[count-1]) || 0;\r\n
};\r\n
scheduler._set_scale_col_size = function(div, width, left){\r\n
\tvar c = this.config;\r\n
\tthis.set_xy(div, width-1, c.hour_size_px*(c.last_hour-c.first_hour), left+this.xy.scale_width+1, 0);//-1 for border\r\n
};\r\n
\r\n
scheduler._render_scales = function(header, data_area){\r\n
\t//render columns in week/units view, or header in month view\r\n
\tvar sd = new Date(scheduler._min_date),\r\n
\t\ted = new Date(scheduler._max_date),\r\n
\t\ttoday = this.date.date_part( scheduler._currentDate());\r\n
\r\n
\tvar summ = parseInt(header.style.width,10); //border delta\r\n
\tvar d = new Date(this._min_date);\r\n
\tvar count = this._get_columns_num(sd, ed);\r\n
\tthis._calc_scale_sizes(summ, sd, ed);\r\n
\tvar left=0;\r\n
\r\n
\theader.innerHTML = "";\r\n
\tfor (var i=0; i<count; i++){\r\n
\t\tif (!this._ignores[i]){\r\n
\t\t\tthis._render_x_header(i,left,d,header);\r\n
\t\t}\r\n
\t\tif (!this._table_view){\r\n
\t\t\tvar scales=document.createElement("DIV");\r\n
\t\t\tvar cls = "dhx_scale_holder";\r\n
\t\t\tif (d.valueOf() == today.valueOf()) cls = "dhx_scale_holder_now";\r\n
\r\n
\t\t\tif (this._ignores_detected && this._ignores[i]){\r\n
\t\t\t\tcls += " dhx_scale_ignore";\r\n
\t\t\t}\r\n
\r\n
\t\t\tscales.className = cls+" "+this.templates.week_date_class(d,today);\r\n
\r\n
\t\t\tthis._set_scale_col_size(scales, this._cols[i], left);\r\n
\r\n
\t\t\tdata_area.appendChild(scales);\r\n
\t\t\tthis.callEvent("onScaleAdd",[scales, d]);\r\n
\t\t}\r\n
\r\n
\t\tleft+=this._cols[i];\r\n
\t\td=this.date.add(d,1,"day");\r\n
\t\td = this.date.day_start(d);\r\n
\t}\r\n
};\r\n
\r\n
scheduler._reset_scale=function(){\r\n
\t//current mode doesn\'t support scales\r\n
\t//we mustn\'t call reset_scale for such modes, so it just to be sure\r\n
\tif (!this.templates[this._mode + "_date"]) return;\r\n
\r\n
\tvar h = this._els["dhx_cal_header"][0];\r\n
\tvar data_area = this._els["dhx_cal_data"][0];\r\n
\tvar c = this.config;\r\n
\r\n
\th.innerHTML = "";\r\n
\t//data_area.scrollTop = 0; //fix flickering in FF; makes IE8 flicker instead\r\n
\tdata_area.innerHTML = "";\r\n
\r\n
\tvar str = ((c.readonly || (!c.drag_resize)) ? " dhx_resize_denied" : "") + ((c.readonly || (!c.drag_move)) ? " dhx_move_denied" : "");\r\n
\tdata_area.className = "dhx_cal_data" + str;\r\n
\r\n
\tthis._scales = {};\r\n
\tthis._cols = [];\t//store for data section\r\n
\tthis._colsS = {height: 0};\r\n
\tthis._dy_shift = 0;\r\n
\r\n
\tthis.set_sizes();\r\n
\r\n
\tvar d,sd,today;\r\n
\tvar dd = this._get_timeunit_start(),\r\n
\t\ted = scheduler._get_view_end();\r\n
\r\n
\td = sd = this._table_view ? scheduler.date.week_start(dd) : dd;\r\n
\r\n
\r\n
\tthis._min_date=d;\r\n
\tthis._els["dhx_cal_date"][0].innerHTML=this.templates[this._mode+"_date"](dd,ed,this._mode);\r\n
\r\n
\tthis._max_date = ed;\r\n
\tscheduler._render_scales(h, data_area);\r\n
\r\n
\tif (this._table_view) // month view\r\n
\t\tthis._reset_month_scale(data_area,dd,sd);\r\n
\telse{\r\n
\t\tthis._reset_hours_scale(data_area,dd,sd);\r\n
\t\tif (c.multi_day) {\r\n
\t\t\tvar dhx_multi_day = \'dhx_multi_day\';\r\n
\r\n
\t\t\tif(this._els[dhx_multi_day]) {\r\n
\t\t\t\tthis._els[dhx_multi_day][0].parentNode.removeChild(this._els[dhx_multi_day][0]);\r\n
\t\t\t\tthis._els[dhx_multi_day] = null;\r\n
\t\t\t}\r\n
\t\t\t\r\n
\t\t\tvar navline = this._els["dhx_cal_navline"][0];\r\n
\t\t\tvar top = navline.offsetHeight + this._els["dhx_cal_header"][0].offsetHeight+1;\r\n
\t\t\t\r\n
\t\t\tvar c1 = document.createElement("DIV");\r\n
\t\t\tc1.className = dhx_multi_day;\r\n
\t\t\tc1.style.visibility="hidden";\r\n
\t\t\tthis.set_xy(c1, Math.max(this._colsS[this._colsS.col_length]+this.xy.scroll_width - 2, 0), 0, 0, top); // 2 extra borders, dhx_header has -1 bottom margin\r\n
\t\t\tdata_area.parentNode.insertBefore(c1,data_area);\r\n
\t\t\t\r\n
\t\t\tvar c2 = c1.cloneNode(true);\r\n
\t\t\tc2.className = dhx_multi_day+"_icon";\r\n
\t\t\tc2.style.visibility="hidden";\r\n
\t\t\tthis.set_xy(c2, this.xy.scale_width, 0, 0, top); // dhx_header has -1 bottom margin\r\n
\t\t\t\r\n
\t\t\tc1.appendChild(c2);\r\n
\t\t\tthis._els[dhx_multi_day]=[c1,c2];\r\n
\t\t\tthis._els[dhx_multi_day][0].onclick = this._click.dhx_cal_data;\r\n
\t\t}\r\n
\t}\r\n
};\r\n
scheduler._reset_hours_scale=function(b,dd,sd){\r\n
\tvar c=document.createElement("DIV");\r\n
\tc.className="dhx_scale_holder";\r\n
\t\r\n
\tvar date = new Date(1980,1,1,this.config.first_hour,0,0);\r\n
\tfor (var i=this.config.first_hour*1; i < this.config.last_hour; i++) {\r\n
\t\tvar cc=document.createElement("DIV");\r\n
\t\tcc.className="dhx_scale_hour";\r\n
\t\tcc.style.height=this.config.hour_size_px-(this._quirks?0:1)+"px";\r\n
\t\tvar width = this.xy.scale_width;\r\n
\t\tif (this.config.left_border) {\r\n
\t\t\twidth = width - 1;\r\n
\t\t\tcc.className += " dhx_scale_hour_border";\r\n
\t\t}\r\n
\t\tcc.style.width = width + "px";\r\n
\t\tcc.innerHTML=scheduler.templates.hour_scale(date);\r\n
\t\t\r\n
\t\tc.appendChild(cc);\r\n
\t\tdate=this.date.add(date,1,"hour");\r\n
\t}\r\n
\tb.appendChild(c);\r\n
\tif (this.config.scroll_hour)\r\n
\t\tb.scrollTop = this.config.hour_size_px*(this.config.scroll_hour-this.config.first_hour);\r\n
};\r\n
\r\n
scheduler._currentDate = function(){\r\n
\tif(scheduler.config.now_date){\r\n
\t\treturn new Date(scheduler.config.now_date);\r\n
\t}\r\n
\treturn new Date();\r\n
};\r\n
\r\n
scheduler._process_ignores = function(sd, n, mode, step, preserve){\r\n
\tthis._ignores={};\r\n
\tthis._ignores_detected = 0;\r\n
\tvar ignore = scheduler["ignore_"+this._mode];\r\n
\r\n
\tif (ignore){\r\n
\t\tvar ign_date = new Date(sd);\r\n
\t\tfor (var i=0; i<n; i++){\r\n
\t\t\tif (ignore(ign_date)){\r\n
\t\t\t\tthis._ignores_detected += 1;\r\n
\t\t\t\tthis._ignores[i] = true;\r\n
\t\t\t\tif (preserve)\r\n
\t\t\t\t\tn++;\r\n
\t\t\t}\r\n
\t\t\tign_date = scheduler.date.add(ign_date, step, mode);\r\n
\t\t\tif(scheduler.date[mode + \'_start\'])\r\n
\t\t\t\tign_date = scheduler.date[mode + \'_start\'](ign_date);\r\n
\t\t}\r\n
\t}\r\n
};\r\n
\r\n
scheduler._render_month_scale = function(div, dd/*month start*/, sd/*view start*/ ){\r\n
\t//renders month view layout\r\n
\r\n
\tvar ed=scheduler.date.add(dd,1,"month"),\r\n
\t\tview_start = new Date(sd);\r\n
\tvar cd = scheduler._currentDate();\r\n
\tthis.date.date_part(cd);\r\n
\tthis.date.date_part(sd);\r\n
\r\n
\tvar rows=Math.ceil(Math.round((ed.valueOf()-sd.valueOf()) / (60*60*24*1000) ) / 7);\r\n
\tvar tdcss=[];\r\n
\r\n
\tfor (var i=0; i<=7; i++) {\r\n
\t\tvar cell_width = ((this._cols[i]||0)-1);\r\n
\t\tif (i === 0 && this.config.left_border) {\r\n
\t\t\tcell_width = cell_width - 1;\r\n
\t\t}\r\n
\t\ttdcss[i]=" style=\'width:"+cell_width+"px;";\r\n
\t}\r\n
\r\n
\tfunction getCellHeight(row){\r\n
\t\tvar h = scheduler._colsS.height;\r\n
\t\tif(scheduler._colsS.heights[row + 1] !== undefined ){\r\n
\t\t\th = scheduler._colsS.heights[row + 1] - (scheduler._colsS.heights[row]||0);\r\n
\t\t}\r\n
\t\treturn h;\r\n
\t}\r\n
\r\n
\r\n
\tvar cellheight = 0;\r\n
\r\n
\tvar html="<table cellpadding=\'0\' cellspacing=\'0\'>";\r\n
\tvar rendered_dates = [];\r\n
\tfor (var i=0; i<rows; i++){\r\n
\t\thtml+="<tr>";\r\n
\t\tvar row_height = Math.max(getCellHeight(i) - scheduler.xy.month_head_height, 0);\r\n
\t\tfor (var j=0; j<7; j++) {\r\n
\t\t\thtml+="<td";\r\n
\r\n
\t\t\tvar cls = "";\r\n
\t\t\tif (sd<dd)\r\n
\t\t\t\tcls=\'dhx_before\';\r\n
\t\t\telse if (sd>=ed)\r\n
\t\t\t\tcls=\'dhx_after\';\r\n
\t\t\telse if (sd.valueOf()==cd.valueOf())\r\n
\t\t\t\tcls=\'dhx_now\';\r\n
\r\n
\t\t\tif (this._ignores_detected && this._ignores[j]){\r\n
\t\t\t\tcls += " dhx_scale_ignore";\r\n
\t\t\t}\r\n
\r\n
\t\t\thtml+=" class=\'"+cls+" "+this.templates.month_date_class(sd,cd)+"\' >";\r\n
\t\t\tvar body_class = "dhx_month_body";\r\n
\t\t\tvar head_class = "dhx_month_head";\r\n
\t\t\tif (j === 0 && this.config.left_border) {\r\n
\t\t\t\tbody_class += " dhx_month_body_border";\r\n
\t\t\t\thead_class += " dhx_month_head_border";\r\n
\t\t\t}\r\n
\t\t\tif (!this._ignores_detected || !this._ignores[j]){\r\n
\t\t\t\thtml+="<div class=\'"+head_class+"\'>"+this.templates.month_day(sd)+"</div>";\r\n
\t\t\t\thtml+="<div class=\'"+body_class+"\' "+tdcss[j] + ";height:"+row_height + "px;\'></div></td>";\r\n
\t\t\t} else {\r\n
\t\t\t\thtml+="<div></div><div></div>";\r\n
\t\t\t}\r\n
\t\t\trendered_dates.push(sd);\r\n
\t\t\tvar bf1 = sd.getDate();\r\n
\t\t\tsd=this.date.add(sd,1,"day");\r\n
\t\t\tif (sd.getDate() - bf1 > 1)\r\n
\t\t\t\tsd = new Date(sd.getFullYear(), sd.getMonth(), bf1 + 1, 12, 0);\r\n
\t\t}\r\n
\t\thtml+="</tr>";\r\n
\r\n
\t\tscheduler._colsS.heights[i] = cellheight;\r\n
\t\tcellheight += getCellHeight(i);\r\n
\t}\r\n
\thtml+="</table>";\r\n
\r\n
\tthis._min_date = view_start;\r\n
\tthis._max_date = sd;\r\n
\r\n
\tdiv.innerHTML=html;\r\n
\r\n
\tthis._scales = {};\r\n
\tvar divs = div.getElementsByTagName(\'div\');\r\n
\tfor (var i=0; i<rendered_dates.length; i++) { // [header, body, header, body, ...]\r\n
\t\tvar div = divs[(i*2)+1];\r\n
\t\tvar date = rendered_dates[i];\r\n
\t\tthis._scales[+date] = div;\r\n
\t}\r\n
\tfor (var i=0; i<rendered_dates.length; i++) {\r\n
\t\tvar date = rendered_dates[i];\r\n
\t\tthis.callEvent("onScaleAdd", [this._scales[+date], date]);\r\n
\t}\r\n
\r\n
\r\n
\r\n
\treturn this._max_date;\r\n
};\r\n
\r\n
scheduler._reset_month_scale=function(b,dd,sd){\r\n
\t//recalculates rows height and redraws month layout\r\n
\tvar ed=scheduler.date.add(dd,1,"month");\r\n
\t\r\n
\t//trim time part for comparation reasons\r\n
\tvar cd = scheduler._currentDate();\r\n
\tthis.date.date_part(cd);\r\n
\tthis.date.date_part(sd);\r\n
\r\n
\tvar rows=Math.ceil(Math.round((ed.valueOf()-sd.valueOf()) / (60*60*24*1000) ) / 7);\r\n
\r\n
\tvar height = (Math.floor(b.clientHeight/rows) - this.xy.month_head_height);\r\n
\t\r\n
\tthis._colsS.height = height + this.xy.month_head_height;\r\n
\tthis._colsS.heights = [];\r\n
\r\n
\treturn scheduler._render_month_scale(b, dd, sd);\r\n
\r\n
};\r\n
scheduler.getLabel = function(property, key) {\r\n
\tvar sections = this.config.lightbox.sections;\r\n
\tfor (var i=0; i<sections.length; i++) {\r\n
\t\tif(sections[i].map_to == property) {\r\n
\t\t\tvar options = sections[i].options;\r\n
\t\t\tfor (var j=0; j<options.length; j++) {\r\n
\t\t\t\tif(options[j].key == key) {\r\n
\t\t\t\t\treturn options[j].label;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
\treturn "";\r\n
};\r\n
scheduler.updateCollection = function(list_name, collection) {\r\n
\tvar list = scheduler.serverList(list_name);\r\n
\tif (!list) return false;\r\n
\tlist.splice(0, list.length);\r\n
\tlist.push.apply(list, collection || []);\r\n
\tscheduler.callEvent("onOptionsLoad", []);\r\n
\tscheduler.resetLightbox();\r\n
\treturn true;\r\n
};\r\n
scheduler._lame_clone = function(object, cache) {\r\n
\tvar i, t, result; // iterator, types array, result\r\n
\r\n
\tcache = cache || [];\r\n
\r\n
\tfor (i=0; i<cache.length; i+=2)\r\n
\t\tif(object === cache[i])\r\n
\t\t\treturn cache[i+1];\r\n
\r\n
\tif (object && typeof object == "object") {\r\n
\t\tresult = {};\r\n
\t\tt = [Array,Date,Number,String,Boolean];\r\n
\t\tfor (i=0; i<t.length; i++) {\r\n
\t\t\tif (object instanceof t[i])\r\n
\t\t\t\tresult = i ? new t[i](object) : new t[i](); // first one is array\r\n
\t\t}\r\n
\t\tcache.push(object, result);\r\n
\t\tfor (i in object) {\r\n
\t\t\tif (Object.prototype.hasOwnProperty.apply(object, [i]))\r\n
\t\t\t\tresult[i] = scheduler._lame_clone(object[i], cache);\r\n
\t\t}\r\n
\t}\r\n
\treturn result || object;\r\n
};\r\n
scheduler._lame_copy = function(target, source) {\r\n
\tfor (var key in source) {\r\n
\t\tif (source.hasOwnProperty(key)) {\r\n
\t\t\ttarget[key] = source[key];\r\n
\t\t}\r\n
\t}\r\n
\treturn target;\r\n
};\r\n
scheduler._get_date_from_pos = function(pos) {\r\n
\tvar start=this._min_date.valueOf()+(pos.y*this.config.time_step+(this._table_view?0:pos.x)*24*60)*60000;\r\n
\treturn new Date(this._correct_shift(start));\r\n
};\r\n
// n_ev - native event\r\n
scheduler.getActionData = function(n_ev) {\r\n
\tvar pos = this._mouse_coords(n_ev);\r\n
\treturn {\r\n
\t\tdate:this._get_date_from_pos(pos),\r\n
\t\tsection:pos.section\r\n
\t};\r\n
};\r\n
scheduler._focus = function(node, select){\r\n
\tif (node && node.focus){\r\n
\t\tif (this.config.touch){\r\n
\t\t\twindow.setTimeout(function(){ \r\n
\t\t\t\tnode.focus();\r\n
\t\t\t},100);\r\n
\t\t} else {\r\n
\t\t\tif (select && node.select) node.select();\r\n
\t\t\tnode.focus();\r\n
\t\t}\r\n
\t}\r\n
};\r\n
\r\n
//non-linear scales\r\n
scheduler._get_real_event_length=function(sd, fd, obj){\r\n
\tvar ev_length = fd -sd;\r\n
\tvar hours = (obj._start_correction + obj._end_correction)||0;\r\n
\tvar ignore = this["ignore_"+this._mode];\r\n
\r\n
\tvar start_slot = 0,\r\n
\t\tend_slot;\r\n
\tif (obj.render){\r\n
\t\tstart_slot = this._get_date_index(obj, sd);\r\n
\t\tend_slot = this._get_date_index(obj, fd);\r\n
\t} else{\r\n
\t\tend_slot = Math.round(ev_length/60/60/1000/24);\r\n
\t}\r\n
\r\n
\twhile (start_slot < end_slot){\r\n
\t\tvar check = scheduler.date.add(fd, -obj.x_step, obj.x_unit);\r\n
\t\tif (ignore && ignore(fd))\r\n
\t\t\tev_length -= (fd-check);\r\n
\t\telse\r\n
\t\t\tev_length -= hours;\r\n
\r\n
\t\tfd = check;\r\n
\t\tend_slot--;\r\n
\t}\r\n
\treturn ev_length;\r\n
};\r\n
scheduler._get_fictional_event_length=function(end_date, ev_length, obj, back){\r\n
\tvar sd = new Date(end_date);\r\n
\tvar dir = back ? -1 : 1;\r\n
\r\n
\t//get difference caused by first|last hour\r\n
\tif (obj._start_correction || obj._end_correction){\r\n
\t\tvar today;\r\n
\t\tif (back)\r\n
\t\t\ttoday = (sd.getHours()*60+sd.getMinutes()) - (obj.first_hour||0)*60;\r\n
\t\telse\r\n
\t\t\ttoday = (obj.last_hour||0)*60 - (sd.getHours()*60+sd.getMinutes());\r\n
\t\tvar per_day = (obj.last_hour - obj.first_hour)*60;\r\n
\t\tvar days = Math.ceil( (ev_length / (60*1000) - today ) / per_day);\r\n
\t\tev_length += days * (24*60 - per_day) * 60 * 1000;\r\n
\t}\r\n
\r\n
\tvar fd = new Date(end_date*1+ev_length*dir);\r\n
\tvar ignore = this["ignore_"+this._mode];\r\n
\r\n
\tvar start_slot = 0,\r\n
\t\tend_slot;\r\n
\tif (obj.render){\r\n
\t\tstart_slot = this._get_date_index(obj, sd);\r\n
\t\tend_slot = this._get_date_index(obj, fd);\r\n
\t} else{\r\n
\t\tend_slot = Math.round(ev_length/60/60/1000/24);\r\n
\t}\r\n
\r\n
\twhile (start_slot*dir <= end_slot*dir){\r\n
\t\tvar check = scheduler.date.add(sd, obj.x_step*dir, obj.x_unit);\r\n
\t\tif (ignore && ignore(sd)){\r\n
\t\t\tev_length += (check-sd)*dir;\r\n
\t\t\tend_slot += dir;\r\n
\t\t}\r\n
\r\n
\t\tsd = check;\r\n
\t\tstart_slot+=dir;\r\n
\t}\r\n
\t\r\n
\treturn ev_length;\r\n
};\r\n
\r\n
scheduler._get_section_view = function(){\r\n
\tif(this.matrix && this.matrix[this._mode]){\r\n
\t\treturn this.matrix[this._mode];\r\n
\t}else if(this._props && this._props[this._mode]){\r\n
\t\treturn this._props[this._mode];\r\n
\t}\r\n
\treturn null;\r\n
};\r\n
\r\n
scheduler._get_section_property = function(){\r\n
\tif(this.matrix && this.matrix[this._mode]){\r\n
\t\treturn this.matrix[this._mode].y_property;\r\n
\t}else if(this._props && this._props[this._mode]){\r\n
\t\treturn this._props[this._mode].map_to;\r\n
\t}\r\n
\treturn null;\r\n
};\r\n
\r\n
scheduler._is_initialized = function(){\r\n
\tvar state = this.getState();\r\n
\treturn (this._obj && state.date && state.mode);\r\n
};\r\n
scheduler._is_lightbox_open = function(){\r\n
\tvar state = this.getState();\r\n
\treturn state.lightbox_id !== null && state.lightbox_id !== undefined;\r\n
};\r\n
scheduler.date={\r\n
\tinit:function(){\r\n
\t\tvar s = scheduler.locale.date.month_short;\r\n
\t\tvar t = scheduler.locale.date.month_short_hash = {};\r\n
\t\tfor (var i = 0; i < s.length; i++)\r\n
\t\t\tt[s[i]]=i;\r\n
\r\n
\t\tvar s = scheduler.locale.date.month_full;\r\n
\t\tvar t = scheduler.locale.date.month_full_hash = {};\r\n
\t\tfor (var i = 0; i < s.length; i++)\r\n
\t\t\tt[s[i]]=i;\r\n
\t},\r\n
\tdate_part:function(date){\r\n
\t\tvar old = new Date(date);\r\n
\t\tdate.setHours(0);\r\n
\t\tdate.setMinutes(0);\r\n
\t\tdate.setSeconds(0);\r\n
\t\tdate.setMilliseconds(0);\r\n
\t\tif (date.getHours() && //shift to yesterday on dst\r\n
\t\t\t(date.getDate() < old.getDate() || date.getMonth() < old.getMonth() || date.getFullYear() < old.getFullYear()) )\r\n
\t\t\tdate.setTime(date.getTime() + 60 * 60 * 1000 * (24 - date.getHours()));\r\n
\t\treturn date;\r\n
\t},\r\n
\ttime_part:function(date){\r\n
\t\treturn (date.valueOf()/1000 - date.getTimezoneOffset()*60)%86400;\r\n
\t},\r\n
\tweek_start:function(date){\r\n
\t\tvar shift=date.getDay();\r\n
\t\tif (scheduler.config.start_on_monday){\r\n
\t\t\tif (shift===0) shift=6;\r\n
\t\t\telse shift--;\r\n
\t\t}\r\n
\t\treturn this.date_part(this.add(date,-1*shift,"day"));\r\n
\t},\r\n
\tmonth_start:function(date){\r\n
\t\tdate.setDate(1);\r\n
\t\treturn this.date_part(date);\r\n
\t},\r\n
\tyear_start:function(date){\r\n
\t\tdate.setMonth(0);\r\n
\t\treturn this.month_start(date);\r\n
\t},\r\n
\tday_start:function(date){\r\n
\t\treturn this.date_part(date);\r\n
\t},\r\n
\t_add_days:function(date, inc){\r\n
\t\tvar ndate = new Date(date.valueOf());\r\n
\r\n
\t\tndate.setDate(ndate.getDate() + inc);\r\n
\t\tif (inc >= 0 && (!date.getHours() && ndate.getHours()) &&//shift to yesterday on dst\r\n
\t\t\t(ndate.getDate() < date.getDate() || ndate.getMonth() < date.getMonth() || ndate.getFullYear() < date.getFullYear()) )\r\n
\t\t\tndate.setTime(ndate.getTime() + 60 * 60 * 1000 * (24 - ndate.getHours()));\r\n
\t\t   return ndate;\r\n
\t},\r\n
\tadd:function(date,inc,mode){\r\n
\t\tvar ndate=new Date(date.valueOf());\r\n
\t\tswitch(mode){\r\n
\t\t\tcase "day":\r\n
\t\t\t\tndate = scheduler.date._add_days(ndate, inc);\r\n
\t\t\t\tbreak;\r\n
\t\t\tcase "week":\r\n
\t\t\t\tndate = scheduler.date._add_days(ndate, inc * 7);\r\n
\t\t\t\tbreak;\r\n
\t\t\tcase "month": ndate.setMonth(ndate.getMonth()+inc); break;\r\n
\t\t\tcase "year": ndate.setYear(ndate.getFullYear()+inc); break;\r\n
\t\t\tcase "hour":\r\n
\t\t\t\t/*\r\n
\t\t\t\t setHour(getHour() + inc) and setMinutes gives weird result when is applied on a Daylight Saving time switch\r\n
\t\t\t\t setTime seems working as expected\r\n
\t\t\t\t*/\r\n
\t\t\t\tndate.setTime(ndate.getTime() + inc * 60 * 60 * 1000);\r\n
\t\t\t\tbreak;\r\n
\t\t\tcase "minute":\r\n
\t\t\t\tndate.setTime(ndate.getTime() + inc * 60 * 1000);\r\n
\t\t\t\tbreak;\r\n
\t\t\tdefault:\r\n
\t\t\t\treturn scheduler.date["add_"+mode](date,inc,mode);\r\n
\t\t}\r\n
\t\treturn ndate;\r\n
\t},\r\n
\tto_fixed:function(num){\r\n
\t\tif (num<10)\treturn "0"+num;\r\n
\t\treturn num;\r\n
\t},\r\n
\tcopy:function(date){\r\n
\t\treturn new Date(date.valueOf());\r\n
\t},\r\n
\tdate_to_str:function(format,utc){\r\n
\t\tformat=format.replace(/%[a-zA-Z]/g,function(a){\r\n
\t\t\tswitch(a){\r\n
\t\t\t\tcase "%d": return "\\"+scheduler.date.to_fixed(date.getDate())+\\"";\r\n
\t\t\t\tcase "%m": return "\\"+scheduler.date.to_fixed((date.getMonth()+1))+\\"";\r\n
\t\t\t\tcase "%j": return "\\"+date.getDate()+\\"";\r\n
\t\t\t\tcase "%n": return "\\"+(date.getMonth()+1)+\\"";\r\n
\t\t\t\tcase "%y": return "\\"+scheduler.date.to_fixed(date.getFullYear()%100)+\\""; \r\n
\t\t\t\tcase "%Y": return "\\"+date.getFullYear()+\\"";\r\n
\t\t\t\tcase "%D": return "\\"+scheduler.locale.date.day_short[date.getDay()]+\\"";\r\n
\t\t\t\tcase "%l": return "\\"+scheduler.locale.date.day_full[date.getDay()]+\\"";\r\n
\t\t\t\tcase "%M": return "\\"+scheduler.locale.date.month_short[date.getMonth()]+\\"";\r\n
\t\t\t\tcase "%F": return "\\"+scheduler.locale.date.month_full[date.getMonth()]+\\"";\r\n
\t\t\t\tcase "%h": return "\\"+scheduler.date.to_fixed((date.getHours()+11)%12+1)+\\"";\r\n
\t\t\t\tcase "%g": return "\\"+((date.getHours()+11)%12+1)+\\"";\r\n
\t\t\t\tcase "%G": return "\\"+date.getHours()+\\"";\r\n
\t\t\t\tcase "%H": return "\\"+scheduler.date.to_fixed(date.getHours())+\\"";\r\n
\t\t\t\tcase "%i": return "\\"+scheduler.date.to_fixed(date.getMinutes())+\\"";\r\n
\t\t\t\tcase "%a": return "\\"+(date.getHours()>11?\\"pm\\":\\"am\\")+\\"";\r\n
\t\t\t\tcase "%A": return "\\"+(date.getHours()>11?\\"PM\\":\\"AM\\")+\\"";\r\n
\t\t\t\tcase "%s": return "\\"+scheduler.date.to_fixed(date.getSeconds())+\\"";\r\n
\t\t\t\tcase "%W": return "\\"+scheduler.date.to_fixed(scheduler.date.getISOWeek(date))+\\"";\r\n
\t\t\t\tdefault: return a;\r\n
\t\t\t}\r\n
\t\t});\r\n
\t\tif (utc) format=format.replace(/date\\.get/g,"date.getUTC");\r\n
\t\treturn new Function("date","return \\""+format+"\\";");\r\n
\t},\r\n
\tstr_to_date:function(format,utc){\r\n
\t\tvar splt="var temp=date.match(/[a-zA-Z]+|[0-9]+/g);";\r\n
\t\tvar mask=format.match(/%[a-zA-Z]/g);\r\n
\t\tfor (var i=0; i<mask.length; i++){\r\n
\t\t\tswitch(mask[i]){\r\n
\t\t\t\tcase "%j":\r\n
\t\t\t\tcase "%d": splt+="set[2]=temp["+i+"]||1;";\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\tcase "%n":\r\n
\t\t\t\tcase "%m": splt+="set[1]=(temp["+i+"]||1)-1;";\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\tcase "%y": splt+="set[0]=temp["+i+"]*1+(temp["+i+"]>50?1900:2000);";\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\tcase "%g":\r\n
\t\t\t\tcase "%G":\r\n
\t\t\t\tcase "%h": \r\n
\t\t\t\tcase "%H":\r\n
\t\t\t\t\t\t\tsplt+="set[3]=temp["+i+"]||0;";\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\tcase "%i":\r\n
\t\t\t\t\t\t\tsplt+="set[4]=temp["+i+"]||0;";\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\tcase "%Y": splt+="set[0]=temp["+i+"]||0;";\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\tcase "%a":\t\t\t\t\t\r\n
\t\t\t\tcase "%A": splt+="set[3]=set[3]%12+((temp["+i+"]||\'\').toLowerCase()==\'am\'?0:12);";\r\n
\t\t\t\t\tbreak;\t\t\t\t\t\r\n
\t\t\t\tcase "%s": splt+="set[5]=temp["+i+"]||0;";\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\tcase "%M": splt+="set[1]=scheduler.locale.date.month_short_hash[temp["+i+"]]||0;";\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\tcase "%F": splt+="set[1]=scheduler.locale.date.month_full_hash[temp["+i+"]]||0;";\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\tdefault:\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t}\r\n
\t\t}\r\n
\t\tvar code ="set[0],set[1],set[2],set[3],set[4],set[5]";\r\n
\t\tif (utc) code =" Date.UTC("+code+")";\r\n
\t\treturn new Function("date","var set=[0,0,1,0,0,0]; "+splt+" return new Date("+code+");");\r\n
\t},\r\n
\tgetISOWeek: function(ndate) {\r\n
\t\tif(!ndate) return false;\r\n
\t\tvar nday = ndate.getDay();\r\n
\t\tif (nday === 0) {\r\n
\t\t\tnday = 7;\r\n
\t\t}\r\n
\t\tvar first_thursday = new Date(ndate.valueOf());\r\n
\t\tfirst_thursday.setDate(ndate.getDate() + (4 - nday));\r\n
\t\tvar year_number = first_thursday.getFullYear(); // year of the first Thursday\r\n
\t\tvar ordinal_date = Math.round( (first_thursday.getTime() - new Date(year_number, 0, 1).getTime()) / 86400000); //ordinal date of the first Thursday - 1 (so not really ordinal date)\r\n
\t\tvar week_number = 1 + Math.floor( ordinal_date / 7);\r\n
\t\treturn week_number;\r\n
\t},\r\n
\tgetUTCISOWeek: function(ndate){\r\n
\t\treturn this.getISOWeek(this.convert_to_utc(ndate));\r\n
\t},\r\n
\tconvert_to_utc: function(date) {\r\n
\t\treturn new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\r\n
\t}\r\n
};\r\n
scheduler.locale = {\r\n
\tdate:{\r\n
\t\tmonth_full:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],\r\n
\t\tmonth_short:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],\r\n
\t\tday_full:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],\r\n
\t\tday_short:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]\r\n
\t},\r\n
\tlabels:{\r\n
\t\tdhx_cal_today_button:"Today",\r\n
\t\tday_tab:"Day",\r\n
\t\tweek_tab:"Week",\r\n
\t\tmonth_tab:"Month",\r\n
\t\tnew_event:"New event",\r\n
\t\ticon_save:"Save",\r\n
\t\ticon_cancel:"Cancel",\r\n
\t\ticon_details:"Details",\r\n
\t\ticon_edit:"Edit",\r\n
\t\ticon_delete:"Delete",\r\n
\t\tconfirm_closing:"",//Your changes will be lost, are your sure ?\r\n
\t\tconfirm_deleting:"Event will be deleted permanently, are you sure?",\r\n
\t\tsection_description:"Description",\r\n
\t\tsection_time:"Time period",\r\n
\t\tfull_day:"Full day",\r\n
\r\n
\t\t/*recurring events*/\r\n
\t\tconfirm_recurring:"Do you want to edit the whole set of repeated events?",\r\n
\t\tsection_recurring:"Repeat event",\r\n
\t\tbutton_recurring:"Disabled",\r\n
\t\tbutton_recurring_open:"Enabled",\r\n
\t\tbutton_edit_series: "Edit series",\r\n
\t\tbutton_edit_occurrence: "Edit occurrence",\r\n
\r\n
\t\t/*agenda view extension*/\r\n
\t\tagenda_tab:"Agenda",\r\n
\t\tdate:"Date",\r\n
\t\tdescription:"Description",\r\n
\r\n
\t\t/*year view extension*/\r\n
\t\tyear_tab:"Year",\r\n
\r\n
\t\t/* week agenda extension */\r\n
\t\tweek_agenda_tab: "Agenda",\r\n
\r\n
\t\t/*grid view extension*/\r\n
\t\tgrid_tab: "Grid",\r\n
\r\n
\t\t/* touch tooltip*/\r\n
\t\tdrag_to_create:"Drag to create",\r\n
\t\tdrag_to_move:"Drag to move",\r\n
\r\n
\t\t/* dhtmlx message default buttons */\r\n
\t\tmessage_ok:"OK",\r\n
\t\tmessage_cancel:"Cancel"\r\n
\t}\r\n
};\r\n
\r\n
\r\n
/*\r\n
%e\tDay of the month without leading zeros (01..31)\r\n
%d\tDay of the month, 2 digits with leading zeros (01..31)\r\n
%j\tDay of the year, 3 digits with leading zeros (001..366)\r\n
%a\tA textual representation of a day, two letters\r\n
%W\tA full textual representation of the day of the week\r\n
\r\n
%c\tNumeric representation of a month, without leading zeros (0..12)\r\n
%m\tNumeric representation of a month, with leading zeros (00..12)\r\n
%b\tA short textual representation of a month, three letters (Jan..Dec)\r\n
%M\tA full textual representation of a month, such as January or March (January..December)\r\n
\r\n
%y\tA two digit representation of a year (93..03)\r\n
%Y\tA full numeric representation of a year, 4 digits (1993..03)\r\n
*/\r\n
\r\n
scheduler.config={\r\n
\tdefault_date: "%j %M %Y",\r\n
\tmonth_date: "%F %Y",\r\n
\tload_date: "%Y-%m-%d",\r\n
\tweek_date: "%l",\r\n
\tday_date: "%D, %F %j",\r\n
\thour_date: "%H:%i",\r\n
\tmonth_day: "%d",\r\n
\txml_date: "%m/%d/%Y %H:%i",\r\n
\tapi_date: "%d-%m-%Y %H:%i",\r\n
\tpreserve_length:true,\r\n
\ttime_step: 5,\r\n
\r\n
\tstart_on_monday: 1,\r\n
\tfirst_hour: 0,\r\n
\tlast_hour: 24,\r\n
\treadonly: false,\r\n
\tdrag_resize: 1,\r\n
\tdrag_move: 1,\r\n
\tdrag_create: 1,\r\n
\tdblclick_create: 1,\r\n
\tedit_on_create: 1,\r\n
\tdetails_on_create: 0,\r\n
\tresize_month_events:false,\r\n
\tresize_month_timed:false,\r\n
\r\n
\tcascade_event_display: false,\r\n
\tcascade_event_count: 4,\r\n
\tcascade_event_margin: 30,\r\n
\r\n
\tmulti_day:true,\r\n
\tmulti_day_height_limit: 0,\r\n
\r\n
\tdrag_lightbox: true,\r\n
\tpreserve_scroll: true,\r\n
\tselect: true,\r\n
\r\n
\tserver_utc: false,\r\n
\ttouch:true,\r\n
\ttouch_tip:true,\r\n
\ttouch_drag:500,\r\n
\tquick_info_detached:true,\r\n
\r\n
\tpositive_closing: false,\r\n
\r\n
\tdrag_highlight: true,\r\n
\tlimit_drag_out: false,\r\n
\ticons_edit: ["icon_save", "icon_cancel"],\r\n
\ticons_select: ["icon_details", "icon_edit", "icon_delete"],\r\n
\tbuttons_left: ["dhx_save_btn", "dhx_cancel_btn"],\r\n
\tbuttons_right: ["dhx_delete_btn"],\r\n
\tlightbox: {\r\n
\t\tsections: [\r\n
\t\t\t{name: "description", height: 200, map_to: "text", type: "textarea", focus: true},\r\n
\t\t\t{name: "time", height: 72, type: "time", map_to: "auto"}\r\n
\t\t]\r\n
\t},\r\n
\thighlight_displayed_event: true,\r\n
\tleft_border: false,\r\n
\r\n
\tajax_error: "alert",//"ignore"|"console"\r\n
\tdelay_render: 0\r\n
};\r\n
scheduler.templates={};\r\n
scheduler.init_templates=function(){\r\n
\tvar labels = scheduler.locale.labels;\r\n
\tlabels.dhx_save_btn \t= labels.icon_save;\r\n
\tlabels.dhx_cancel_btn \t= labels.icon_cancel;\r\n
\tlabels.dhx_delete_btn \t= labels.icon_delete;\r\n
\r\n
\r\n
\tvar d=scheduler.date.date_to_str;\r\n
\tvar c=scheduler.config;\r\n
\tvar f = function(a,b){\r\n
\t\tfor (var c in b)\r\n
\t\t\tif (!a[c]) a[c]=b[c];\r\n
\t};\r\n
\tf(scheduler.templates,{\r\n
\t\tday_date:d(c.default_date),\r\n
\t\tmonth_date:d(c.month_date),\r\n
\t\tweek_date:function(d1,d2){\r\n
\t\t\treturn scheduler.templates.day_date(d1)+" &ndash; "+scheduler.templates.day_date(scheduler.date.add(d2,-1,"day"));\r\n
\t\t},\r\n
\t\tday_scale_date:d(c.default_date),\r\n
\t\tmonth_scale_date:d(c.week_date),\r\n
\t\tweek_scale_date:d(c.day_date),\r\n
\t\thour_scale:d(c.hour_date),\r\n
\t\ttime_picker:d(c.hour_date),\r\n
\t\tevent_date:d(c.hour_date),\r\n
\t\tmonth_day:d(c.month_day),\r\n
\t\txml_date:scheduler.date.str_to_date(c.xml_date,c.server_utc),\r\n
\t\tload_format:d(c.load_date,c.server_utc),\r\n
\t\txml_format:d(c.xml_date,c.server_utc),\r\n
\t\tapi_date:scheduler.date.str_to_date(c.api_date),\r\n
\t\tevent_header:function(start,end,ev){\r\n
\t\t\treturn scheduler.templates.event_date(start)+" - "+scheduler.templates.event_date(end);\r\n
\t\t},\r\n
\t\tevent_text:function(start,end,ev){\r\n
\t\t\treturn ev.text;\r\n
\t\t},\r\n
\t\tevent_class:function(start,end,ev){\r\n
\t\t\treturn "";\r\n
\t\t},\r\n
\t\tmonth_date_class:function(d){\r\n
\t\t\treturn "";\r\n
\t\t},\r\n
\t\tweek_date_class:function(d){\r\n
\t\t\treturn "";\r\n
\t\t},\r\n
\t\tevent_bar_date:function(start,end,ev){\r\n
\t\t\treturn scheduler.templates.event_date(start)+" ";\r\n
\t\t},\r\n
\t\tevent_bar_text:function(start,end,ev){\r\n
\t\t\treturn ev.text;\r\n
\t\t},\r\n
\t\tmonth_events_link : function(date, count){\r\n
\t\t\treturn "<a>View more("+count+" events)</a>";\r\n
\t\t},\r\n
\t\tdrag_marker_class : function(start, end, event){\r\n
\t\t\treturn "";\r\n
\t\t},\r\n
\t\tdrag_marker_content : function(start, end, event){\r\n
\t\t\treturn "";\r\n
\t\t}\r\n
\t});\r\n
\tthis.callEvent("onTemplatesReady",[]);\r\n
};\r\n
\r\n
\r\n
\r\n
scheduler.uid = function() {\r\n
\tif (!this._seed) this._seed = (new Date()).valueOf();\r\n
\treturn this._seed++;\r\n
};\r\n
scheduler._events = {};\r\n
scheduler.clearAll = function() {\r\n
\tthis._events = {};\r\n
\tthis._loaded = {};\r\n
\r\n
\tthis._edit_id = null;\r\n
\tthis._select_id = null;\r\n
\tthis._drag_id = null;\r\n
\tthis._drag_mode = null;\r\n
\tthis._drag_pos = null;\r\n
\r\n
\tthis.clear_view();\r\n
\tthis.callEvent("onClearAll", []);\r\n
};\r\n
scheduler.addEvent = function(start_date, end_date, text, id, extra_data) {\r\n
\tif (!arguments.length)\r\n
\t\treturn this.addEventNow();\r\n
\tvar ev = start_date;\r\n
\tif (arguments.length != 1) {\r\n
\t\tev = extra_data || {};\r\n
\t\tev.start_date = start_date;\r\n
\t\tev.end_date = end_date;\r\n
\t\tev.text = text;\r\n
\t\tev.id = id;\r\n
\t}\r\n
\tev.id = ev.id || scheduler.uid();\r\n
\tev.text = ev.text || "";\r\n
\r\n
\tif (typeof ev.start_date == "string")  ev.start_date = this.templates.api_date(ev.start_date);\r\n
\tif (typeof ev.end_date == "string")  ev.end_date = this.templates.api_date(ev.end_date);\r\n
\r\n
\tvar d = (this.config.event_duration || this.config.time_step) * 60000;\r\n
\tif (ev.start_date.valueOf() == ev.end_date.valueOf())\r\n
\t\tev.end_date.setTime(ev.end_date.valueOf() + d);\r\n
\r\n
\tev._timed = this.isOneDayEvent(ev);\r\n
\r\n
\tvar is_new = !this._events[ev.id];\r\n
\tthis._events[ev.id] = ev;\r\n
\tthis.event_updated(ev);\r\n
\tif (!this._loading)\r\n
\t\tthis.callEvent(is_new ? "onEventAdded" : "onEventChanged", [ev.id, ev]);\r\n
\treturn ev.id;\r\n
};\r\n
scheduler.deleteEvent = function(id, silent) {\r\n
\tvar ev = this._events[id];\r\n
\tif (!silent && (!this.callEvent("onBeforeEventDelete", [id, ev]) || !this.callEvent("onConfirmedBeforeEventDelete", [id, ev])))\r\n
\t\treturn;\r\n
\tif (ev) {\r\n
\t\tthis._select_id = null;\r\n
\t\tdelete this._events[id];\r\n
\t\tthis.event_updated(ev);\r\n
\t}\r\n
\r\n
\tthis.callEvent("onEventDeleted", [id, ev]);\r\n
};\r\n
scheduler.getEvent = function(id) {\r\n
\treturn this._events[id];\r\n
};\r\n
scheduler.setEvent = function(id, hash) {\r\n
\tif(!hash.id)\r\n
\t\thash.id = id;\r\n
\r\n
\tthis._events[id] = hash;\r\n
};\r\n
scheduler.for_rendered = function(id, method) {\r\n
\tfor (var i = this._rendered.length - 1; i >= 0; i--)\r\n
\t\tif (this._rendered[i].getAttribute("event_id") == id)\r\n
\t\t\tmethod(this._rendered[i], i);\r\n
};\r\n
scheduler.changeEventId = function(id, new_id) {\r\n
\tif (id == new_id) return;\r\n
\tvar ev = this._events[id];\r\n
\tif (ev) {\r\n
\t\tev.id = new_id;\r\n
\t\tthis._events[new_id] = ev;\r\n
\t\tdelete this._events[id];\r\n
\t}\r\n
\tthis.for_rendered(id, function(r) {\r\n
\t\tr.setAttribute("event_id", new_id);\r\n
\t});\r\n
\tif (this._select_id == id) this._select_id = new_id;\r\n
\tif (this._edit_id == id) this._edit_id = new_id;\r\n
\t//if (this._drag_id==id) this._drag_id=new_id;\r\n
\tthis.callEvent("onEventIdChange", [id, new_id]);\r\n
};\r\n
\r\n
(function() {\r\n
\tvar attrs = ["text", "Text", "start_date", "StartDate", "end_date", "EndDate"];\r\n
\tvar create_getter = function(name) {\r\n
\t\treturn function(id) { return (scheduler.getEvent(id))[name]; };\r\n
\t};\r\n
\tvar create_setter = function(name) {\r\n
\t\treturn function(id, value) {\r\n
\t\t\tvar ev = scheduler.getEvent(id);\r\n
\t\t\tev[name] = value;\r\n
\t\t\tev._changed = true;\r\n
\t\t\tev._timed = this.isOneDayEvent(ev);\r\n
\t\t\tscheduler.event_updated(ev, true);\r\n
\t\t};\r\n
\t};\r\n
\tfor (var i = 0; i < attrs.length; i += 2) {\r\n
\t\tscheduler["getEvent" + attrs[i + 1]] = create_getter(attrs[i]);\r\n
\t\tscheduler["setEvent" + attrs[i + 1]] = create_setter(attrs[i]);\r\n
\t}\r\n
})();\r\n
\r\n
scheduler.event_updated = function(ev, force) {\r\n
\tif (this.is_visible_events(ev))\r\n
\t\tthis.render_view_data();\r\n
\telse\r\n
\t\tthis.clear_event(ev.id);\r\n
};\r\n
scheduler.is_visible_events = function(ev) {\r\n
\t//if in displayed dates\r\n
\tvar in_visible_range = (ev.start_date < this._max_date && this._min_date < ev.end_date);\r\n
\r\n
\tif(in_visible_range){\r\n
\r\n
\t\t//end dates are not between last/first hours\r\n
\t\tvar end_dates_visible = (this._table_view || ((ev.end_date.getHours() >= this.config.first_hour && ev.end_date.getHours() < this.config.last_hour) ||\r\n
\t\t\t\t\t\t\t(ev.start_date.getHours() >= this.config.first_hour && ev.start_date.getHours() < this.config.last_hour))) ;\r\n
\r\n
\t\tif(end_dates_visible){\r\n
\t\t\treturn true;\r\n
\t\t}else{\r\n
\r\n
\t\t\t//event is bigger than area hidden between last/first hours\r\n
\t\t\tvar event_duration = (ev.end_date.valueOf() - ev.start_date.valueOf()) / (1000*60*60),//hours\r\n
\t\t\t\thidden_duration = 24 - (this.config.last_hour - this.config.first_hour);\r\n
\r\n
\t\t\treturn (event_duration > hidden_duration);\r\n
\r\n
\t\t}\r\n
\t}else{\r\n
\t\treturn false;\r\n
\t}\r\n
};\r\n
scheduler.isOneDayEvent = function(ev) {\r\n
\tvar delta = ev.end_date.getDate() - ev.start_date.getDate();\r\n
\r\n
\tif (!delta)\r\n
\t\treturn ev.start_date.getMonth() == ev.end_date.getMonth() && ev.start_date.getFullYear() == ev.end_date.getFullYear();\r\n
\telse {\r\n
\t\tif (delta < 0)  delta = Math.ceil((ev.end_date.valueOf() - ev.start_date.valueOf()) / (24 * 60 * 60 * 1000));\r\n
\t\treturn (delta == 1 && !ev.end_date.getHours() && !ev.end_date.getMinutes() && (ev.start_date.getHours() || ev.start_date.getMinutes() ));\r\n
\t}\r\n
\r\n
};\r\n
scheduler.get_visible_events = function(only_timed) {\r\n
\t//not the best strategy for sure\r\n
\tvar stack = [];\r\n
\r\n
\tfor (var id in this._events)\r\n
\t\tif (this.is_visible_events(this._events[id]))\r\n
\t\t\tif (!only_timed || this._events[id]._timed)\r\n
\t\t\t\tif (this.filter_event(id, this._events[id]))\r\n
\t\t\t\t\tstack.push(this._events[id]);\r\n
\r\n
\treturn stack;\r\n
};\r\n
scheduler.filter_event = function(id, ev) {\r\n
\tvar filter = this["filter_" + this._mode];\r\n
\treturn (filter) ? filter(id, ev) : true;\r\n
};\r\n
scheduler._is_main_area_event = function(ev){\r\n
\treturn !!ev._timed;\r\n
};\r\n
scheduler.render_view_data = function(evs, hold) {\r\n
\tif (!evs) {\r\n
\t\tif (this._not_render) {\r\n
\t\t\tthis._render_wait = true;\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\t\tthis._render_wait = false;\r\n
\r\n
\t\tthis.clear_view();\r\n
\t\tevs = this.get_visible_events(!(this._table_view || this.config.multi_day));\r\n
\t}\r\n
\tfor(var i= 0, len = evs.length; i < len; i++){\r\n
\t\tthis._recalculate_timed(evs[i]);\r\n
\t}\r\n
\r\n
\tif (this.config.multi_day && !this._table_view) {\r\n
\r\n
\t\tvar tvs = [];\r\n
\t\tvar tvd = [];\r\n
\t\tfor (var i = 0; i < evs.length; i++) {\r\n
\t\t\tif (this._is_main_area_event(evs[i]))\r\n
\t\t\t\ttvs.push(evs[i]); \r\n
\t\t\telse\r\n
\t\t\t\ttvd.push(evs[i]);\r\n
\t\t}\r\n
\r\n
\t\t// multiday events\r\n
\t\tthis._rendered_location = this._els[\'dhx_multi_day\'][0];\r\n
\t\tthis._table_view = true;\r\n
\t\tthis.render_data(tvd, hold);\r\n
\t\tthis._table_view = false;\r\n
\r\n
\t\t// normal events\r\n
\t\tthis._rendered_location = this._els[\'dhx_cal_data\'][0];\r\n
\t\tthis._table_view = false;\r\n
\t\tthis.render_data(tvs, hold);\r\n
\r\n
\t} else {\r\n
\t\tthis._rendered_location = this._els[\'dhx_cal_data\'][0];\r\n
\t\tthis.render_data(evs, hold);\r\n
\t}\r\n
};\r\n
\r\n
\r\n
scheduler._view_month_day = function(e){\r\n
\tvar date = scheduler.getActionData(e).date;\r\n
\tif(!scheduler.callEvent("onViewMoreClick", [date]))\r\n
\t\treturn;\r\n
\tscheduler.setCurrentView(date, "day");\r\n
};\r\n
\r\n
scheduler._render_month_link = function(ev){\r\n
\tvar parent = this._rendered_location;\r\n
\tvar toRender = this._lame_clone(ev);\r\n
\r\n
\t//render links in each cell of multiday events\r\n
\tfor(var d = ev._sday; d < ev._eday; d++){\r\n
\r\n
\t\ttoRender._sday = d;\r\n
\t\ttoRender._eday = d+1;\r\n
\r\n
\t\tvar date = scheduler.date;\r\n
\t\tvar curr = scheduler._min_date;\r\n
\t\tcurr = date.add(curr, toRender._sweek, "week");\r\n
\t\tcurr = date.add(curr, toRender._sday, "day");\r\n
\t\tvar count = scheduler.getEvents(curr, date.add(curr, 1, "day")).length;\r\n
\r\n
\t\tvar pos = this._get_event_bar_pos(toRender);\r\n
\t\tvar widt = (pos.x2 - pos.x);\r\n
\r\n
\t\tvar el = document.createElement("div");\r\n
\t\tel.onclick = function(e){scheduler._view_month_day(e||event);};\r\n
\t\tel.className = "dhx_month_link";\r\n
\t\tel.style.top = pos.y + "px";\r\n
\t\tel.style.left = pos.x + "px";\r\n
\t\tel.style.width = widt + "px";\r\n
\t\tel.innerHTML = scheduler.templates.month_events_link(curr, count);\r\n
\t\tthis._rendered.push(el);\r\n
\r\n
\t\tparent.appendChild(el);\r\n
\t}\r\n
};\r\n
\r\n
scheduler._recalculate_timed = function(id){\r\n
\tif(!id) return;\r\n
\tvar ev;\r\n
\tif(typeof(id) != "object")\r\n
\t\tev = this._events[id];\r\n
\telse\r\n
\t\tev = id;\r\n
\tif(!ev) return;\r\n
\tev._timed = scheduler.isOneDayEvent(ev);\r\n
};\r\n
scheduler.attachEvent("onEventChanged", scheduler._recalculate_timed);\r\n
scheduler.attachEvent("onEventAdded", scheduler._recalculate_timed);\r\n
\r\n
scheduler.render_data = function(evs, hold) {\r\n
\tevs = this._pre_render_events(evs, hold);\r\n
\r\n
\tfor (var i = 0; i < evs.length; i++)\r\n
\t\tif (this._table_view){\r\n
\t\t\tif(scheduler._mode != \'month\'){\r\n
\t\t\t\tthis.render_event_bar(evs[i]);//may be multiday section on other views\r\n
\t\t\t}else{\r\n
\r\n
\t\t\t\tvar max_evs = scheduler.config.max_month_events;\r\n
\t\t\t\tif(max_evs !== max_evs*1 || evs[i]._sorder < max_evs){\r\n
\t\t\t\t\t//of max number events per month cell is set and event can be rendered\r\n
\t\t\t\t\tthis.render_event_bar(evs[i]);\r\n
\t\t\t\t}else if(max_evs !== undefined && evs[i]._sorder == max_evs){\r\n
\t\t\t\t\t//render \'view more\' links\r\n
\t\t\t\t\tscheduler._render_month_link(evs[i]);\r\n
\t\t\t\t}else{\r\n
\t\t\t\t\t//do not render events with ordinal number > maximum events per cell\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\r\n
\r\n
\t\t}else\r\n
\t\t\tthis.render_event(evs[i]);\r\n
};\r\n
\r\n
scheduler._get_first_visible_cell = function(cells) {\r\n
\tfor (var i = 0; i < cells.length; i++) {\r\n
\t\tif ((cells[i].className || "").indexOf("dhx_scale_ignore") == -1) {\r\n
\t\t\treturn cells[i];\r\n
\t\t}\r\n
\t}\r\n
\t// if no visible cell found, return cells[0] to be more tolerant, since it\'s the original logic\r\n
\treturn cells[0];\r\n
};\r\n
\r\n
scheduler._pre_render_events = function(evs, hold) {\r\n
\tvar hb = this.xy.bar_height;\r\n
\tvar h_old = this._colsS.heights;\r\n
\tvar h = this._colsS.heights = [0, 0, 0, 0, 0, 0, 0];\r\n
\tvar data = this._els["dhx_cal_data"][0];\r\n
\r\n
\tif (!this._table_view)\r\n
\t\tevs = this._pre_render_events_line(evs, hold); //ignore long events for now\r\n
\telse\r\n
\t\tevs = this._pre_render_events_table(evs, hold);\r\n
\r\n
\tif (this._table_view) {\r\n
\t\tif (hold)\r\n
\t\t\tthis._colsS.heights = h_old;\r\n
\t\telse {\r\n
\t\t\tvar evl = data.firstChild;\r\n
\t\t\tif (evl.rows) {\r\n
\t\t\t\tfor (var i = 0; i < evl.rows.length; i++) {\r\n
\t\t\t\t\th[i]++;\r\n
\t\t\t\t\tvar cells = evl.rows[i].cells;\r\n
\t\t\t\t\tvar cellHeight = this._colsS.height - this.xy.month_head_height;\r\n
\t\t\t\t\tif ((h[i]) * hb > cellHeight) { // 22 - height of cell\'s header\r\n
\t\t\t\t\t\t//we have overflow, update heights\r\n
\r\n
\t\t\t\t\t\tvar cHeight = cellHeight;\r\n
\t\t\t\t\t\tif(this.config.max_month_events*1 !== this.config.max_month_events || h[i] <= this.config.max_month_events){\r\n
\t\t\t\t\t\t\tcHeight = h[i] * hb;\r\n
\t\t\t\t\t\t}else if( (this.config.max_month_events + 1) * hb > cellHeight){\r\n
\t\t\t\t\t\t\tcHeight = (this.config.max_month_events + 1) * hb;\r\n
\t\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t\tfor (var j = 0; j < cells.length; j++) {\r\n
\t\t\t\t\t\t\tcells[j].childNodes[1].style.height = cHeight + "px";\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t//\th[i] = (h[i - 1] || 0) + cells[0].offsetHeight;\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\th[i] = (h[i - 1] || 0) + scheduler._get_first_visible_cell(cells).offsetHeight;\r\n
\t\t\t\t}\r\n
\t\t\t\th.unshift(0);\r\n
\t\t\t\tif (evl.parentNode.offsetHeight < evl.parentNode.scrollHeight && !scheduler._colsS.scroll_fix && scheduler.xy.scroll_width) {\r\n
\r\n
\t\t\t\t\tvar scale_settings = scheduler._colsS,\r\n
\t\t\t\t\t\tsum_width = scale_settings[scale_settings.col_length],\r\n
\t\t\t\t\t\trow_heights = scale_settings.heights.slice();\r\n
\r\n
\t\t\t\t\tsum_width -= (scheduler.xy.scroll_width || 0);\r\n
\t\t\t\t\tthis._calc_scale_sizes(sum_width, this._min_date, this._max_date);\r\n
\t\t\t\t\tscheduler._colsS.heights = row_heights;\r\n
\r\n
\t\t\t\t\tthis.set_xy(this._els["dhx_cal_header"][0], sum_width, this.xy.scale_height);\r\n
\t\t\t\t\tscheduler._render_scales(this._els["dhx_cal_header"][0]);\r\n
\t\t\t\t\tscheduler._render_month_scale(this._els["dhx_cal_data"][0], this._get_timeunit_start(), this._min_date);\r\n
\r\n
\t\t\t\t\tscale_settings.scroll_fix = true;\r\n
\t\t\t\t}\r\n
\t\t\t} else {\r\n
\t\t\t\tif (!evs.length && this._els["dhx_multi_day"][0].style.visibility == "visible")\r\n
\t\t\t\t\th[0] = -1;\r\n
\t\t\t\tif (evs.length || h[0] == -1) {\r\n
\t\t\t\t\t//shift days to have space for multiday events\r\n
\t\t\t\t\tvar childs = evl.parentNode.childNodes;\r\n
\r\n
\t\t\t\t\t// +1 so multiday events would have 2px from top and 2px from bottom by default\r\n
\t\t\t\t\tvar full_multi_day_height = (h[0] + 1) * hb + 1;\r\n
\r\n
\t\t\t\t\tvar used_multi_day_height = full_multi_day_height;\r\n
\t\t\t\t\tvar used_multi_day_height_css = full_multi_day_height + "px";\r\n
\t\t\t\t\tif (this.config.multi_day_height_limit) {\r\n
\t\t\t\t\t\tused_multi_day_height = Math.min(full_multi_day_height, this.config.multi_day_height_limit) ;\r\n
\t\t\t\t\t\tused_multi_day_height_css = used_multi_day_height + "px";\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\tdata.style.top = (this._els["dhx_cal_navline"][0].offsetHeight + this._els["dhx_cal_header"][0].offsetHeight + used_multi_day_height ) + \'px\';\r\n
\t\t\t\t\tdata.style.height = (this._obj.offsetHeight - parseInt(data.style.top, 10) - (this.xy.margin_top || 0)) + \'px\';\r\n
\r\n
\t\t\t\t\tvar multi_day_section = this._els["dhx_multi_day"][0];\r\n
\t\t\t\t\tmulti_day_section.style.height = used_multi_day_height_css;\r\n
\t\t\t\t\tmulti_day_section.style.visibility = (h[0] == -1 ? "hidden" : "visible");\r\n
\r\n
\t\t\t\t\t// icon\r\n
\t\t\t\t\tvar multi_day_icon = this._els["dhx_multi_day"][1];\r\n
\t\t\t\t\tmulti_day_icon.style.height = used_multi_day_height_css;\r\n
\t\t\t\t\tmulti_day_icon.style.visibility = (h[0] == -1 ? "hidden" : "visible");\r\n
\t\t\t\t\tmulti_day_icon.className = h[0] ? "dhx_multi_day_icon" : "dhx_multi_day_icon_small";\r\n
\t\t\t\t\tthis._dy_shift = (h[0] + 1) * hb;\r\n
\t\t\t\t\tif(this.config.multi_day_height_limit){\r\n
\t\t\t\t\t\tthis._dy_shift = Math.min(this.config.multi_day_height_limit, this._dy_shift);\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\th[0] = 0;\r\n
\r\n
\t\t\t\t\tif (used_multi_day_height != full_multi_day_height) {\r\n
\t\t\t\t\t\tdata.style.top = (parseInt(data.style.top) + 2) + "px";\r\n
\r\n
\t\t\t\t\t\tmulti_day_section.style.overflowY = "auto";\r\n
\t\t\t\t\t//\tmulti_day_section.style.width = (parseInt(this._els["dhx_cal_navline"][0].style.width)) + "px";\r\n
\r\n
\t\t\t\t\t\tmulti_day_icon.style.position = "fixed";\r\n
\t\t\t\t\t\tmulti_day_icon.style.top = "";\r\n
\t\t\t\t\t\tmulti_day_icon.style.left = "";\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
\r\n
\treturn evs;\r\n
};\r\n
scheduler._get_event_sday = function(ev) {\r\n
\treturn Math.floor((ev.start_date.valueOf() - this._min_date.valueOf()) / (24 * 60 * 60 * 1000));\r\n
};\r\n
scheduler._get_event_mapped_end_date = function(ev) {\r\n
\tvar end_date = ev.end_date;\r\n
\tif (this.config.separate_short_events) {\r\n
\t\tvar ev_duration = (ev.end_date - ev.start_date) / 60000; // minutes\r\n
\t\tif (ev_duration < this._min_mapped_duration) {\r\n
\t\t\tend_date = this.date.add(end_date, this._min_mapped_duration - ev_duration, "minute");\r\n
\t\t}\r\n
\t}\r\n
\treturn end_date;\r\n
};\r\n
scheduler._pre_render_events_line = function(evs, hold){\r\n
\tevs.sort(function(a, b) {\r\n
\t\tif (a.start_date.valueOf() == b.start_date.valueOf())\r\n
\t\t\treturn a.id > b.id ? 1 : -1;\r\n
\t\treturn a.start_date > b.start_date ? 1 : -1;\r\n
\t});\r\n
\tvar days = []; //events by weeks\r\n
\tvar evs_originals = [];\r\n
\r\n
\tthis._min_mapped_duration = Math.ceil(this.xy.min_event_height * 60 / this.config.hour_size_px);  // values could change along the way\r\n
\r\n
\tfor (var i = 0; i < evs.length; i++) {\r\n
\t\tvar ev = evs[i];\r\n
\r\n
\t\t//check date overflow\r\n
\t\tvar sd = ev.start_date;\r\n
\t\tvar ed = ev.end_date;\r\n
\t\t//check scale overflow\r\n
\t\tvar sh = sd.getHours();\r\n
\t\tvar eh = ed.getHours();\r\n
\r\n
\t\tev._sday = this._get_event_sday(ev); // sday based on event start_date\r\n
\t\tif (this._ignores[ev._sday]){\r\n
\t\t\t//ignore event\r\n
\t\t\tevs.splice(i,1);\r\n
\t\t\ti--;\r\n
\t\t\tcontinue;\r\n
\t\t}\r\n
\r\n
\t\tif (!days[ev._sday]) days[ev._sday] = [];\r\n
\r\n
\t\tif (!hold) {\r\n
\t\t\tev._inner = false;\r\n
\r\n
\t\t\tvar stack = days[ev._sday];\r\n
\r\n
\t\t\twhile (stack.length) {\r\n
\t\t\t\tvar t_ev = stack[stack.length - 1];\r\n
\t\t\t\tvar t_end_date = this._get_event_mapped_end_date(t_ev);\r\n
\t\t\t\tif (t_end_date.valueOf() <= ev.start_date.valueOf()) {\r\n
\t\t\t\t\tstack.splice(stack.length - 1, 1);\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t\tvar slot_index = stack.length;\r\n
\t\t\tvar sorderSet = false;\r\n
\t\t\tfor (var j = 0; j < stack.length; j++) {\r\n
\t\t\t\tvar t_ev = stack[j];\r\n
\t\t\t\tvar t_end_date = this._get_event_mapped_end_date(t_ev);\r\n
\t\t\t\tif (t_end_date.valueOf() <= ev.start_date.valueOf()) {\r\n
\t\t\t\t\tsorderSet = true;\r\n
\t\t\t\t\tev._sorder = t_ev._sorder;\r\n
\t\t\t\t\tslot_index = j;\r\n
\t\t\t\t\tev._inner = true;\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\tif (stack.length)\r\n
\t\t\t\tstack[stack.length - 1]._inner = true;\r\n
\r\n
\t\t\tif (!sorderSet) {\r\n
\t\t\t\tif (stack.length) {\r\n
\t\t\t\t\tif (stack.length <= stack[stack.length - 1]._sorder) {\r\n
\t\t\t\t\t\tif (!stack[stack.length - 1]._sorder)\r\n
\t\t\t\t\t\t\tev._sorder = 0;\r\n
\t\t\t\t\t\telse\r\n
\t\t\t\t\t\t\tfor (j = 0; j < stack.length; j++) {\r\n
\t\t\t\t\t\t\t\tvar _is_sorder = false;\r\n
\t\t\t\t\t\t\t\tfor (var k = 0; k < stack.length; k++) {\r\n
\t\t\t\t\t\t\t\t\tif (stack[k]._sorder == j) {\r\n
\t\t\t\t\t\t\t\t\t\t_is_sorder = true;\r\n
\t\t\t\t\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t\t\tif (!_is_sorder) {\r\n
\t\t\t\t\t\t\t\t\tev._sorder = j;\r\n
\t\t\t\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\tev._inner = true;\r\n
\t\t\t\t\t} else {\r\n
\t\t\t\t\t\tvar _max_sorder = stack[0]._sorder;\r\n
\t\t\t\t\t\tfor (j = 1; j < stack.length; j++) {\r\n
\t\t\t\t\t\t\tif (stack[j]._sorder > _max_sorder)\r\n
\t\t\t\t\t\t\t\t_max_sorder = stack[j]._sorder;\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t\tev._sorder = _max_sorder + 1;\r\n
\t\t\t\t\t\tev._inner = false;\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t} else\r\n
\t\t\t\t\tev._sorder = 0;\r\n
\t\t\t}\r\n
\r\n
\t\t\tstack.splice(slot_index, slot_index == stack.length ? 0 : 1, ev);\r\n
\r\n
\t\t\tif (stack.length > (stack.max_count || 0)) {\r\n
\t\t\t\tstack.max_count = stack.length;\r\n
\t\t\t\tev._count = stack.length;\r\n
\t\t\t} else {\r\n
\t\t\t\tev._count = (ev._count) ? ev._count : 1;\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\tif (sh < this.config.first_hour || eh >= this.config.last_hour) {\r\n
\t\t\t// Need to create copy of event as we will be changing it\'s start/end date\r\n
\t\t\t// e.g. first_hour = 11 and event.start_date hours = 9. Need to preserve that info\r\n
\t\t\tevs_originals.push(ev);\r\n
\t\t\tevs[i] = ev = this._copy_event(ev);\r\n
\r\n
\t\t\tif (sh < this.config.first_hour) {\r\n
\t\t\t\tev.start_date.setHours(this.config.first_hour);\r\n
\t\t\t\tev.start_date.setMinutes(0);\r\n
\t\t\t}\r\n
\t\t\tif (eh >= this.config.last_hour) {\r\n
\t\t\t\tev.end_date.setMinutes(0);\r\n
\t\t\t\tev.end_date.setHours(this.config.last_hour);\r\n
\t\t\t}\r\n
\r\n
\t\t\tif (ev.start_date > ev.end_date || sh == this.config.last_hour) {\r\n
\t\t\t\tevs.splice(i, 1);\r\n
\t\t\t\ti--;\r\n
\t\t\t\tcontinue;\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
\tif (!hold) {\r\n
\t\tfor (var i = 0; i < evs.length; i++) {\r\n
\t\t\tevs[i]._count = days[evs[i]._sday].max_count;\r\n
\t\t}\r\n
\t\tfor (var i = 0; i < evs_originals.length; i++)\r\n
\t\t\tevs_originals[i]._count = days[evs_originals[i]._sday].max_count;\r\n
\t}\r\n
\r\n
\treturn evs;\r\n
};\r\n
scheduler._time_order = function(evs) {\r\n
\tevs.sort(function(a, b) {\r\n
\t\tif (a.start_date.valueOf() == b.start_date.valueOf()) {\r\n
\t\t\tif (a._timed && !b._timed) return 1;\r\n
\t\t\tif (!a._timed && b._timed) return -1;\r\n
\t\t\treturn a.id > b.id ? 1 : -1;\r\n
\t\t}\r\n
\t\treturn a.start_date > b.start_date ? 1 : -1;\r\n
\t});\r\n
};\r\n
scheduler._pre_render_events_table = function(evs, hold) { // max - max height of week slot\r\n
\tthis._time_order(evs);\r\n
\tvar out = [];\r\n
\tvar weeks = [\r\n
\t\t[],\r\n
\t\t[],\r\n
\t\t[],\r\n
\t\t[],\r\n
\t\t[],\r\n
\t\t[],\r\n
\t\t[]\r\n
\t]; //events by weeks\r\n
\tvar max = this._colsS.heights;\r\n
\tvar start_date;\r\n
\tvar cols = this._cols.length;\r\n
\tvar chunks_info = {};\r\n
\r\n
\tfor (var i = 0; i < evs.length; i++) {\r\n
\t\tvar ev = evs[i];\r\n
\t\tvar id = ev.id;\r\n
\t\tif (!chunks_info[id]) {\r\n
\t\t\tchunks_info[id] = {\r\n
\t\t\t\tfirst_chunk: true,\r\n
\t\t\t\tlast_chunk: true\r\n
\t\t\t};\r\n
\t\t}\r\n
\t\tvar chunk_info = chunks_info[id];\r\n
\t\tvar sd = (start_date || ev.start_date);\r\n
\t\tvar e

]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAM=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="3" aka="AAAAAAAAAAM=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

d = ev.end_date;\r\n
\t\t//trim events which are crossing through current view\r\n
\t\tif (sd < this._min_date) {\r\n
\t\t\tchunk_info.first_chunk = false;\r\n
\t\t\tsd = this._min_date;\r\n
\t\t}\r\n
\t\tif (ed > this._max_date) {\r\n
\t\t\tchunk_info.last_chunk = false;\r\n
\t\t\ted = this._max_date;\r\n
\t\t}\r\n
\r\n
\t\tvar locate_s = this.locate_holder_day(sd, false, ev);\r\n
\t\tev._sday = locate_s % cols;\r\n
\r\n
\t\t//skip single day events for ignored dates\r\n
\t\tif (this._ignores[ev._sday] && ev._timed) continue;\r\n
\r\n
\t\tvar locate_e = this.locate_holder_day(ed, true, ev) || cols;\r\n
\t\tev._eday = (locate_e % cols) || cols; //cols used to fill full week, when event end on monday\r\n
\t\tev._length = locate_e - locate_s;\r\n
\r\n
\t\t//3600000 - compensate 1 hour during winter|summer time shift\r\n
\t\tev._sweek = Math.floor((this._correct_shift(sd.valueOf(), 1) - this._min_date.valueOf()) / (60 * 60 * 1000 * 24 * cols));\r\n
\r\n
\t\t//current slot\r\n
\t\tvar stack = weeks[ev._sweek];\r\n
\t\t//check order position\r\n
\t\tvar stack_line;\r\n
\r\n
\t\tfor (stack_line = 0; stack_line < stack.length; stack_line++)\r\n
\t\t\tif (stack[stack_line]._eday <= ev._sday)\r\n
\t\t\t\tbreak;\r\n
\r\n
\t\tif (!ev._sorder || !hold) {\r\n
\t\t\tev._sorder = stack_line;\r\n
\t\t}\r\n
\r\n
\t\tif (ev._sday + ev._length <= cols) {\r\n
\t\t\tstart_date = null;\r\n
\t\t\tout.push(ev);\r\n
\t\t\tstack[stack_line] = ev;\r\n
\t\t\t//get max height of slot\r\n
\t\t\tmax[ev._sweek] = stack.length - 1;\r\n
\t\t\tev._first_chunk = chunk_info.first_chunk;\r\n
\t\t\tev._last_chunk = chunk_info.last_chunk;\r\n
\t\t} else { // split long event in chunks\r\n
\t\t\tvar copy = this._copy_event(ev);\r\n
\t\t\tcopy.id = ev.id;\r\n
\t\t\tcopy._length = cols - ev._sday;\r\n
\t\t\tcopy._eday = cols;\r\n
\t\t\tcopy._sday = ev._sday;\r\n
\t\t\tcopy._sweek = ev._sweek;\r\n
\t\t\tcopy._sorder = ev._sorder;\r\n
\t\t\tcopy.end_date = this.date.add(sd, copy._length, "day");\r\n
\t\t\tcopy._first_chunk = chunk_info.first_chunk;\r\n
\t\t\tif (chunk_info.first_chunk) {\r\n
\t\t\t\tchunk_info.first_chunk = false;\r\n
\t\t\t}\r\n
\r\n
\t\t\tout.push(copy);\r\n
\t\t\tstack[stack_line] = copy;\r\n
\t\t\tstart_date = copy.end_date;\r\n
\t\t\t//get max height of slot\r\n
\t\t\tmax[ev._sweek] = stack.length - 1;\r\n
\t\t\ti--;\r\n
\t\t\tcontinue;  //repeat same step\r\n
\t\t}\r\n
\t}\r\n
\treturn out;\r\n
};\r\n
scheduler._copy_dummy = function() {\r\n
\tvar a = new Date(this.start_date);\r\n
\tvar b = new Date(this.end_date);\r\n
\tthis.start_date = a;\r\n
\tthis.end_date = b;\r\n
};\r\n
scheduler._copy_event = function(ev) {\r\n
\tthis._copy_dummy.prototype = ev;\r\n
\treturn new this._copy_dummy();\r\n
\t//return {start_date:ev.start_date, end_date:ev.end_date, text:ev.text, id:ev.id}\r\n
};\r\n
scheduler._rendered = [];\r\n
scheduler.clear_view = function() {\r\n
\tfor (var i = 0; i < this._rendered.length; i++) {\r\n
\t\tvar obj = this._rendered[i];\r\n
\t\tif (obj.parentNode) obj.parentNode.removeChild(obj);\r\n
\t}\r\n
\tthis._rendered = [];\r\n
};\r\n
scheduler.updateEvent = function(id) {\r\n
\tvar ev = this.getEvent(id);\r\n
\tthis.clear_event(id);\r\n
\r\n
\tif (ev && this.is_visible_events(ev) && this.filter_event(id, ev) && (this._table_view || this.config.multi_day || ev._timed)) {\r\n
\t\tif (this.config.update_render){\r\n
\t\t\tthis.render_view_data(); \r\n
\t\t}else{\r\n
\t\t\tif(this.getState().mode == "month" && !this.getState().drag_id && !this.isOneDayEvent(ev)){\r\n
\t\t\t\tthis.render_view_data();\r\n
\t\t\t}else{\r\n
\t\t\t\tthis.render_view_data([ev], true);\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
};\r\n
scheduler.clear_event = function(id) {\r\n
\tthis.for_rendered(id, function(node, i) {\r\n
\t\tif (node.parentNode)\r\n
\t\t\tnode.parentNode.removeChild(node);\r\n
\t\tscheduler._rendered.splice(i, 1);\r\n
\t});\r\n
};\r\n
scheduler._y_from_date = function(date){\r\n
\tvar sm = date.getHours() * 60 + date.getMinutes();\r\n
\treturn ((Math.round((sm * 60 * 1000 - this.config.first_hour * 60 * 60 * 1000) * this.config.hour_size_px / (60 * 60 * 1000))) % (this.config.hour_size_px * 24)); //42px/hour\r\n
};\r\n
scheduler._calc_event_y = function(ev, min_height){\r\n
\tmin_height = min_height || 0;\r\n
\tvar sm = ev.start_date.getHours() * 60 + ev.start_date.getMinutes();\r\n
\tvar em = (ev.end_date.getHours() * 60 + ev.end_date.getMinutes()) || (scheduler.config.last_hour * 60);\r\n
\tvar top = this._y_from_date(ev.start_date);\r\n
\r\n
\tvar height = Math.max(min_height, (em - sm) * this.config.hour_size_px / 60); //42px/hour\r\n
\treturn {\r\n
\t\ttop: top,\r\n
\t\theight: height\r\n
\t};\r\n
};\r\n
scheduler.render_event = function(ev) {\r\n
\tvar menu = scheduler.xy.menu_width;\r\n
\tvar menu_offset = (this.config.use_select_menu_space) ? 0 : menu;\r\n
\tif (ev._sday < 0) return; //can occur in case of recurring event during time shift\r\n
\r\n
\tvar parent = scheduler.locate_holder(ev._sday);\t\r\n
\tif (!parent) return; //attempt to render non-visible event\r\n
\r\n
\tvar pos_y = this._calc_event_y(ev, scheduler.xy.min_event_height);\r\n
\tvar top = pos_y.top,\r\n
\t\theight = pos_y.height;\r\n
\r\n
\tvar ev_count = ev._count || 1;\r\n
\tvar ev_sorder = ev._sorder || 0;\r\n
\r\n
\tvar width = Math.floor((parent.clientWidth - menu_offset) / ev_count);\r\n
\tvar left = ev_sorder * width + 1;\r\n
\tif (!ev._inner) width = width * (ev_count - ev_sorder);\r\n
\tif (this.config.cascade_event_display) {\r\n
\t\tvar limit = this.config.cascade_event_count;\r\n
\t\tvar margin = this.config.cascade_event_margin;\r\n
\t\tleft = ev_sorder % limit * margin;\r\n
\t\tvar right = (ev._inner) ? (ev_count - ev_sorder - 1) % limit * margin / 2 : 0;\r\n
\t\twidth = Math.floor(parent.clientWidth - menu_offset - left - right);\r\n
\t}\r\n
\r\n
\tvar d = this._render_v_bar(ev, menu_offset + left, top, width, height, ev._text_style, scheduler.templates.event_header(ev.start_date, ev.end_date, ev), scheduler.templates.event_text(ev.start_date, ev.end_date, ev));\r\n
\r\n
\tthis._rendered.push(d);\r\n
\tparent.appendChild(d);\r\n
\r\n
\tleft = left + parseInt(parent.style.left, 10) + menu_offset;\r\n
\r\n
\tif (this._edit_id == ev.id) {\r\n
\r\n
\t\td.style.zIndex = 1; //fix overlapping issue\r\n
\t\twidth = Math.max(width - 4, scheduler.xy.editor_width);\r\n
\t\td = document.createElement("DIV");\r\n
\t\td.setAttribute("event_id", ev.id);\r\n
\t\tthis.set_xy(d, width, height - 20, left, top + 14);\r\n
\t\td.className = "dhx_cal_event dhx_cal_editor";\r\n
\r\n
\t\tvar tplClass = scheduler.templates.event_class(ev.start_date, ev.end_date, ev);\r\n
\r\n
\t\tif(tplClass){\r\n
\t\t\td.className += " " + tplClass;\r\n
\t\t}\r\n
\t\tvar d2 = document.createElement("DIV");\r\n
\t\tthis.set_xy(d2, width - 6, height - 26);\r\n
\t\td2.style.cssText += ";margin:2px 2px 2px 2px;overflow:hidden;";\r\n
\r\n
\t\td.appendChild(d2);\r\n
\t\tthis._els["dhx_cal_data"][0].appendChild(d);\r\n
\t\tthis._rendered.push(d);\r\n
\r\n
\t\td2.innerHTML = "<textarea class=\'dhx_cal_editor\'>" + ev.text + "</textarea>";\r\n
\t\tif (this._quirks7) d2.firstChild.style.height = height - 12 + "px"; //IEFIX\r\n
\t\tthis._editor = d2.firstChild;\r\n
\t\tthis._editor.onkeydown = function(e) {\r\n
\t\t\tif ((e || event).shiftKey) return true;\r\n
\t\t\tvar code = (e || event).keyCode;\r\n
\t\t\tif (code == scheduler.keys.edit_save) scheduler.editStop(true);\r\n
\t\t\tif (code == scheduler.keys.edit_cancel) scheduler.editStop(false);\r\n
\t\t};\r\n
\t\tthis._editor.onselectstart = function (e) {\r\n
\t\t\t(e || event).cancelBubble = true;\r\n
\t\t\treturn true;\r\n
\t\t};\r\n
\t\tscheduler._focus(d2.firstChild, true);\r\n
\t\t//IE and opera can add x-scroll during focusing\r\n
\t\tthis._els["dhx_cal_data"][0].scrollLeft = 0;\r\n
\t}\r\n
\tif (this.xy.menu_width !== 0 && this._select_id == ev.id) {\r\n
\t\tif (this.config.cascade_event_display && this._drag_mode)\r\n
\t\t\td.style.zIndex = 1; //fix overlapping issue for cascade view in case of dnd of selected event\r\n
\t\tvar icons = this.config["icons_" + ((this._edit_id == ev.id) ? "edit" : "select")];\r\n
\t\tvar icons_str = "";\r\n
\t\tvar bg_color = (ev.color ? ("background-color: " + ev.color + ";") : "");\r\n
\t\tvar color = (ev.textColor ? ("color: " + ev.textColor + ";") : "");\r\n
\t\tfor (var i = 0; i < icons.length; i++)\r\n
\t\t\ticons_str += "<div class=\'dhx_menu_icon " + icons[i] + "\' style=\'" + bg_color + "" + color + "\' title=\'" + this.locale.labels[icons[i]] + "\'></div>";\r\n
\t\tvar obj = this._render_v_bar(ev, left - menu + 1, top, menu, icons.length * 20 + 26 - 2, "", "<div style=\'" + bg_color + "" + color + "\' class=\'dhx_menu_head\'></div>", icons_str, true);\r\n
\t\tobj.style.left = left - menu + 1;\r\n
\t\tthis._els["dhx_cal_data"][0].appendChild(obj);\r\n
\t\tthis._rendered.push(obj);\r\n
\t}\r\n
\tif(this.config.drag_highlight && this._drag_id == ev.id){\r\n
\t\tthis.highlightEventPosition(ev);\r\n
\t}\r\n
};\r\n
scheduler._render_v_bar = function (ev, x, y, w, h, style, contentA, contentB, bottom) {\r\n
\tvar d = document.createElement("DIV");\r\n
\tvar id = ev.id;\r\n
\tvar cs = (bottom) ? "dhx_cal_event dhx_cal_select_menu" : "dhx_cal_event";\r\n
\r\n
\tvar cse = scheduler.templates.event_class(ev.start_date, ev.end_date, ev);\r\n
\tif (cse) cs = cs + " " + cse;\r\n
\r\n
\tvar bg_color = (ev.color ? ("background:" + ev.color + ";") : "");\r\n
\tvar color = (ev.textColor ? ("color:" + ev.textColor + ";") : "");\r\n
\r\n
\tvar html = \'<div event_id="\' + id + \'" class="\' + cs + \'" style="position:absolute; top:\' + y + \'px; left:\' + x + \'px; width:\' + (w - 4) + \'px; height:\' + h + \'px;\' + (style || "") + \'"></div>\';\r\n
\td.innerHTML = html;\r\n
\r\n
\tvar container = d.cloneNode(true).firstChild;\r\n
\r\n
\tif (!bottom && scheduler.renderEvent(container, ev, w, h, contentA, contentB)) {\r\n
\t\treturn container;\r\n
\t} else {\r\n
\t\tcontainer = d.firstChild;\r\n
\r\n
\t\tvar inner_html = \'<div class="dhx_event_move dhx_header" style=" width:\' + (w - 6) + \'px;\' + bg_color + \'" >&nbsp;</div>\';\r\n
\t\tinner_html += \'<div class="dhx_event_move dhx_title" style="\' + bg_color + \'\' + color + \'">\' + contentA + \'</div>\';\r\n
\t\tinner_html += \'<div class="dhx_body" style=" width:\' + (w - (this._quirks ? 4 : 14)) + \'px; height:\' + (h - (this._quirks ? 20 : 30) + 1) + \'px;\' + bg_color + \'\' + color + \'">\' + contentB + \'</div>\'; // +2 css specific, moved from render_event\r\n
\r\n
\t\tvar footer_class = "dhx_event_resize dhx_footer";\r\n
\t\tif (bottom)\r\n
\t\t\tfooter_class = "dhx_resize_denied " + footer_class;\r\n
\r\n
\t\tinner_html += \'<div class="\' + footer_class + \'" style=" width:\' + (w - 8) + \'px;\' + (bottom ? \' margin-top:-1px;\' : \'\') + \'\' + bg_color + \'\' + color + \'" ></div>\';\r\n
\r\n
\t\tcontainer.innerHTML = inner_html;\r\n
\t}\r\n
\r\n
\treturn container;\r\n
};\r\n
scheduler.renderEvent = function(){\r\n
\treturn false;\r\n
};\r\n
scheduler.locate_holder = function(day) {\r\n
\tif (this._mode == "day") return this._els["dhx_cal_data"][0].firstChild; //dirty\r\n
\treturn this._els["dhx_cal_data"][0].childNodes[day];\r\n
};\r\n
scheduler.locate_holder_day = function(date, past) {\r\n
\tvar day = Math.floor((this._correct_shift(date, 1) - this._min_date) / (60 * 60 * 24 * 1000));\r\n
\t//when locating end data of event , we need to use next day if time part was defined\r\n
\tif (past && this.date.time_part(date)) day++;\r\n
\treturn day;\r\n
};\r\n
\r\n
\r\n
\r\n
scheduler._get_dnd_order = function(order, ev_height, max_height){\r\n
\tif(!this._drag_event)\r\n
\t\treturn order;\r\n
\tif(!this._drag_event._orig_sorder)\r\n
\t\tthis._drag_event._orig_sorder = order;\r\n
\telse\r\n
\t\torder = this._drag_event._orig_sorder;\r\n
\r\n
\tvar evTop = ev_height * order;\r\n
\twhile((evTop + ev_height) > max_height){\r\n
\t\torder--;\r\n
\t\tevTop -= ev_height;\r\n
\t}\r\n
\torder = Math.max(order, 0);\r\n
\treturn order;\r\n
};\r\n
//scheduler._get_event_bar_pos = function(sday, eday, week, drag){\r\n
scheduler._get_event_bar_pos = function(ev){\r\n
\tvar x = this._colsS[ev._sday];\r\n
\tvar x2 = this._colsS[ev._eday];\r\n
\tif (x2 == x) x2 = this._colsS[ev._eday + 1];\r\n
\tvar hb = this.xy.bar_height;\r\n
\r\n
\tvar order = ev._sorder;\r\n
\tif(ev.id == this._drag_id){\r\n
\t\tvar cellHeight = this._colsS.heights[ev._sweek + 1] - this._colsS.heights[ev._sweek]- this.xy.month_head_height;//22 for month head height\r\n
\t\torder = scheduler._get_dnd_order(order, hb, cellHeight);\r\n
\t}\r\n
\tvar y_event_offset =  order * hb;\r\n
\tvar y = this._colsS.heights[ev._sweek] + (this._colsS.height ? (this.xy.month_scale_height + 2) : 2 ) + y_event_offset;\r\n
\treturn {x:x, x2:x2, y:y};\r\n
};\r\n
\r\n
scheduler.render_event_bar = function (ev) {\r\n
\tvar parent = this._rendered_location;\r\n
\tvar pos = this._get_event_bar_pos(ev);\r\n
\r\n
\tvar y = pos.y;\r\n
\tvar x = pos.x;\r\n
\tvar x2 = pos.x2;\r\n
\t\r\n
\t// resize for month mutliday events\r\n
\tvar resize_handle = "";\r\n
\r\n
\t//events in ignored dates\r\n
\r\n
\tif (!x2) return;\r\n
\r\n
\tvar resizable = scheduler.config.resize_month_events && this._mode == "month" &&\r\n
\t\t(!ev._timed || scheduler.config.resize_month_timed);\r\n
\r\n
\tvar d = document.createElement("DIV");\r\n
\tvar left_chunk = (ev.hasOwnProperty("_first_chunk") && ev._first_chunk),\r\n
\t\tright_chunk = (ev.hasOwnProperty("_last_chunk") && ev._last_chunk);\r\n
\r\n
\tvar resize_left = resizable && (ev._timed || left_chunk);\r\n
\tvar resize_right = resizable && (ev._timed || right_chunk);\r\n
\r\n
\tvar cs = "dhx_cal_event_clear";\r\n
\tif (!ev._timed || resizable) {\r\n
\t\tcs = "dhx_cal_event_line";\r\n
\t}\r\n
\tif(left_chunk){\r\n
\t\tcs += " dhx_cal_event_line_start";\r\n
\t}\r\n
\tif(right_chunk){\r\n
\t\tcs += " dhx_cal_event_line_end";\r\n
\t}\r\n
\tif(resize_left){\r\n
\t\tresize_handle += "<div class=\'dhx_event_resize dhx_event_resize_start\'></div>";\r\n
\t}\r\n
\tif(resize_right){\r\n
\t\tresize_handle += "<div class=\'dhx_event_resize dhx_event_resize_end\'></div>";\r\n
\t}\r\n
\r\n
\tvar cse = scheduler.templates.event_class(ev.start_date, ev.end_date, ev);\r\n
\tif (cse){\r\n
\t\tcs += " " + cse;\r\n
\t}\r\n
\r\n
\tvar bg_color = (ev.color ? ("background:" + ev.color + ";") : "");\r\n
\tvar color = (ev.textColor ? ("color:" + ev.textColor + ";") : "");\r\n
\r\n
\tvar style_text = [\r\n
\t\t"position:absolute",\r\n
\t\t"top:" + y + "px",\r\n
\t\t"left:" + x + "px",\r\n
\t\t"width:" + (x2 - x - 15) + "px",\r\n
\t\tcolor,\r\n
\t\tbg_color,\r\n
\t\t(ev._text_style || "")\r\n
\t].join(";");\r\n
\r\n
\tvar html = \'<div event_id="\' + ev.id + \'" class="\' + cs + \'" style="\'+style_text+\'">\';\r\n
\tif (resizable) {\r\n
\t\thtml += resize_handle;\r\n
\t}\r\n
\tif(scheduler.getState().mode == "month"){\r\n
\t\tev = scheduler.getEvent(ev.id); // ev at this point could be a part (row in a month view) of a larger event\r\n
\t}\r\n
\r\n
\tif (ev._timed)\r\n
\t\thtml += scheduler.templates.event_bar_date(ev.start_date, ev.end_date, ev);\r\n
\thtml += scheduler.templates.event_bar_text(ev.start_date, ev.end_date, ev) + \'</div>\';\r\n
\thtml += \'</div>\';\r\n
\r\n
\td.innerHTML = html;\r\n
\r\n
\tthis._rendered.push(d.firstChild);\r\n
\tparent.appendChild(d.firstChild);\r\n
};\r\n
\r\n
scheduler._locate_event = function(node) {\r\n
\tvar id = null;\r\n
\twhile (node && !id && node.getAttribute) {\r\n
\t\tid = node.getAttribute("event_id");\r\n
\t\tnode = node.parentNode;\r\n
\t}\r\n
\treturn id;\r\n
};\r\n
\r\n
scheduler.edit = function(id) {\r\n
\tif (this._edit_id == id) return;\r\n
\tthis.editStop(false, id);\r\n
\tthis._edit_id = id;\r\n
\tthis.updateEvent(id);\r\n
};\r\n
scheduler.editStop = function(mode, id) {\r\n
\tif (id && this._edit_id == id) return;\r\n
\tvar ev = this.getEvent(this._edit_id);\r\n
\tif (ev) {\r\n
\t\tif (mode) ev.text = this._editor.value;\r\n
\t\tthis._edit_id = null;\r\n
\t\tthis._editor = null;\r\n
\t\tthis.updateEvent(ev.id);\r\n
\t\tthis._edit_stop_event(ev, mode);\r\n
\t}\r\n
};\r\n
scheduler._edit_stop_event = function(ev, mode) {\r\n
\tif (this._new_event) {\r\n
\t\tif (!mode) {\r\n
\t\t\tif (ev) // in case of custom lightbox user can already delete event\r\n
\t\t\t\tthis.deleteEvent(ev.id, true);\r\n
\t\t} else {\r\n
\t\t\tthis.callEvent("onEventAdded", [ev.id, ev]);\r\n
\t\t}\r\n
\t\tthis._new_event = null;\r\n
\t} else {\r\n
\t\tif (mode){\r\n
\t\t\tthis.callEvent("onEventChanged", [ev.id, ev]);\r\n
\t\t}\r\n
\t}\r\n
};\r\n
\r\n
scheduler.getEvents = function(from, to) {\r\n
\tvar result = [];\r\n
\tfor (var a in this._events) {\r\n
\t\tvar ev = this._events[a];\r\n
\t\tif (ev && ( (!from && !to) || (ev.start_date < to && ev.end_date > from) ))\r\n
\t\t\tresult.push(ev);\r\n
\t}\r\n
\treturn result;\r\n
};\r\n
scheduler.getRenderedEvent = function(id) {\r\n
\tif (!id)\r\n
\t\treturn;\r\n
\tvar rendered_events = scheduler._rendered;\r\n
\tfor (var i=0; i<rendered_events.length; i++) {\r\n
\t\tvar rendered_event = rendered_events[i];\r\n
\t\tif (rendered_event.getAttribute("event_id") == id) {\r\n
\t\t\treturn rendered_event;\r\n
\t\t}\r\n
\t}\r\n
\treturn null;\r\n
};\r\n
scheduler.showEvent = function(id, mode) {\r\n
\tvar ev = (typeof id == "number" || typeof id == "string") ? scheduler.getEvent(id) : id;\r\n
\tmode = mode||scheduler._mode;\r\n
\r\n
\tif (!ev || (this.checkEvent("onBeforeEventDisplay") && !this.callEvent("onBeforeEventDisplay", [ev, mode])))\r\n
\t\treturn;\r\n
\r\n
\tvar scroll_hour = scheduler.config.scroll_hour;\r\n
\tscheduler.config.scroll_hour = ev.start_date.getHours();\r\n
\tvar preserve_scroll = scheduler.config.preserve_scroll;\r\n
\tscheduler.config.preserve_scroll = false;\r\n
\r\n
\tvar original_color = ev.color;\r\n
\tvar original_text_color = ev.textColor;\r\n
\tif (scheduler.config.highlight_displayed_event) {\r\n
\t\tev.color = scheduler.config.displayed_event_color;\r\n
\t\tev.textColor = scheduler.config.displayed_event_text_color;\r\n
\t}\r\n
\r\n
\tscheduler.setCurrentView(new Date(ev.start_date), mode);\r\n
\r\n
\tev.color = original_color;\r\n
\tev.textColor = original_text_color;\r\n
\tscheduler.config.scroll_hour = scroll_hour;\r\n
\tscheduler.config.preserve_scroll = preserve_scroll;\r\n
\r\n
\tif (scheduler.matrix && scheduler.matrix[mode]) {\r\n
\t\tscheduler._els.dhx_cal_data[0].scrollTop = getAbsoluteTop(scheduler.getRenderedEvent(ev.id)) - getAbsoluteTop(scheduler._els.dhx_cal_data[0]) - 20;\r\n
\t}\r\n
\r\n
\tscheduler.callEvent("onAfterEventDisplay", [ev, mode]);\r\n
};\r\n
\r\n
scheduler._append_drag_marker = function(m){\r\n
\tif(m.parentNode) return;\r\n
\tvar zone = scheduler._els["dhx_cal_data"][0];\r\n
\r\n
\tvar scale = zone.lastChild;\r\n
\tif(scale.className && scale.className.indexOf("dhx_scale_holder") < 0 && scale.previousSibling){\r\n
\t\tscale = scale.previousSibling;\r\n
\t}\r\n
\tif (scale && scale.className.indexOf("dhx_scale_holder") === 0) {\r\n
\t\tscale.appendChild(m);\r\n
\t}\r\n
};\r\n
\r\n
scheduler._update_marker_position = function(m, event){\r\n
\tvar size = scheduler._calc_event_y(event, 0);\r\n
\tm.style.top = size.top + "px";\r\n
\tm.style.height = size.height + "px";\r\n
};\r\n
\r\n
scheduler.highlightEventPosition = function(event){\r\n
\tvar m = document.createElement("div");\r\n
\r\n
\tm.setAttribute("event_id", event.id);\r\n
\tthis._rendered.push(m);\r\n
\tthis._update_marker_position(m, event);\r\n
\r\n
\tvar css = this.templates.drag_marker_class(event.start_date, event.end_date, event);\r\n
\tvar html = this.templates.drag_marker_content(event.start_date, event.end_date, event);\r\n
\tm.className = "dhx_drag_marker";\r\n
\tif(css)\r\n
\t\tm.className += " " + css;\r\n
\tif(html)\r\n
\t\tm.innerHTML = html;\r\n
\tthis._append_drag_marker(m);\r\n
};\r\n
scheduler._loaded = {};\r\n
scheduler._load = function(url, from) {\r\n
\turl = url || this._load_url;\r\n
\r\n
\tif(!url){\r\n
\t\t//if scheduler.setLoadMode is called before scheduler.init, initial rendering will invoke data loading while url is undefined\r\n
\t\treturn;\r\n
\t}\r\n
\r\n
\turl += (url.indexOf("?") == -1 ? "?" : "&") + "timeshift=" + (new Date()).getTimezoneOffset();\r\n
\tif (this.config.prevent_cache)    url += "&uid=" + this.uid();\r\n
\tvar to;\r\n
\tfrom = from || this._date;\r\n
\r\n
\tif (this._load_mode) {\r\n
\t\tvar lf = this.templates.load_format;\r\n
\r\n
\t\tfrom = this.date[this._load_mode + "_start"](new Date(from.valueOf()));\r\n
\t\twhile (from > this._min_date) from = this.date.add(from, -1, this._load_mode);\r\n
\t\tto = from;\r\n
\r\n
\t\tvar cache_line = true;\r\n
\t\twhile (to < this._max_date) {\r\n
\t\t\tto = this.date.add(to, 1, this._load_mode);\r\n
\t\t\tif (this._loaded[lf(from)] && cache_line)\r\n
\t\t\t\tfrom = this.date.add(from, 1, this._load_mode); else cache_line = false;\r\n
\t\t}\r\n
\r\n
\t\tvar temp_to = to;\r\n
\t\tdo {\r\n
\t\t\tto = temp_to;\r\n
\t\t\ttemp_to = this.date.add(to, -1, this._load_mode);\r\n
\t\t} while (temp_to > from && this._loaded[lf(temp_to)]);\r\n
\r\n
\t\tif (to <= from)\r\n
\t\t\treturn false; //already loaded\r\n
\t\tdhtmlxAjax.get(url + "&from=" + lf(from) + "&to=" + lf(to), function(l) {scheduler.on_load(l);});\r\n
\t\twhile (from < to) {\r\n
\t\t\tthis._loaded[lf(from)] = true;\r\n
\t\t\tfrom = this.date.add(from, 1, this._load_mode);\r\n
\t\t}\r\n
\t} else\r\n
\t\tdhtmlxAjax.get(url, function(l) {scheduler.on_load(l);});\r\n
\tthis.callEvent("onXLS", []);\r\n
\treturn true;\r\n
};\r\n
scheduler.on_load = function(loader) {\r\n
\tvar evs;\r\n
\tvar error = false;\r\n
\tif (this._process && this._process != "xml") {\r\n
\t\ttry{\r\n
\t\t\tevs = this[this._process].parse(loader.xmlDoc.responseText);\r\n
\t\t}catch (e){\r\n
\t\t\terror = true;\r\n
\t\t}\r\n
\t} else {\r\n
\t\tevs = this._magic_parser(loader);\r\n
\t\tif(!evs){\r\n
\t\t\terror = true;\r\n
\t\t}\r\n
\t}\r\n
\r\n
\tif(error){\r\n
\t\tthis.callEvent("onLoadError", [loader.xmlDoc]);\r\n
\t\tevs = [];\r\n
\t}\r\n
\t\r\n
\tscheduler._process_loading(evs);\r\n
\r\n
\tthis.callEvent("onXLE", []);\r\n
};\r\n
scheduler._process_loading = function(evs) {\r\n
\tthis._loading = true;\r\n
\tthis._not_render = true;\r\n
\tfor (var i = 0; i < evs.length; i++) {\r\n
\t\tif (!this.callEvent("onEventLoading", [evs[i]])) continue;\r\n
\t\tthis.addEvent(evs[i]);\r\n
\t}\r\n
\tthis._not_render = false;\r\n
\tif (this._render_wait) this.render_view_data();\r\n
\r\n
\tthis._loading = false;\r\n
\tif (this._after_call) this._after_call();\r\n
\tthis._after_call = null;\r\n
};\r\n
scheduler._init_event = function(event) {\r\n
\tevent.text = (event.text || event._tagvalue) || "";\r\n
\tevent.start_date = scheduler._init_date(event.start_date);\r\n
\tevent.end_date = scheduler._init_date(event.end_date);\r\n
};\r\n
\r\n
scheduler._init_date = function(date){\r\n
\tif(!date)\r\n
\t\treturn null;\r\n
\tif(typeof date == "string")\r\n
\t\treturn scheduler.templates.xml_date(date);\r\n
\telse return new Date(date);\r\n
};\r\n
\r\n
scheduler.json = {};\r\n
scheduler.json.parse = function(data) {\r\n
\tif (typeof data == "string") {\r\n
\t\tscheduler._temp = eval("(" + data + ")");\r\n
\t\tdata = (scheduler._temp) ? scheduler._temp.data || scheduler._temp.d || scheduler._temp : [];\r\n
\t}\r\n
\r\n
\tif (data.dhx_security)\r\n
\t\tdhtmlx.security_key = data.dhx_security;\r\n
\r\n
\tvar collections = (scheduler._temp && scheduler._temp.collections) ? scheduler._temp.collections : {};\r\n
\tvar collections_loaded = false;\r\n
\tfor (var key in collections) {\r\n
\t\tif (collections.hasOwnProperty(key)) {\r\n
\t\t\tcollections_loaded = true;\r\n
\t\t\tvar collection = collections[key];\r\n
\t\t\tvar arr = scheduler.serverList[key];\r\n
\t\t\tif (!arr) continue;\r\n
\t\t\tarr.splice(0, arr.length); //clear old options\r\n
\t\t\tfor (var j = 0; j < collection.length; j++) {\r\n
\t\t\t\tvar option = collection[j];\r\n
\t\t\t\tvar obj = { key: option.value, label: option.label }; // resulting option object\r\n
\t\t\t\tfor (var option_key in option) {\r\n
\t\t\t\t\tif (option.hasOwnProperty(option_key)) {\r\n
\t\t\t\t\t\tif (option_key == "value" || option_key == "label")\r\n
\t\t\t\t\t\t\tcontinue;\r\n
\t\t\t\t\t\tobj[option_key] = option[option_key]; // obj[\'value\'] = option[\'value\']\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t\tarr.push(obj);\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
\tif (collections_loaded)\r\n
\t\tscheduler.callEvent("onOptionsLoad", []);\r\n
\r\n
\tvar evs = [];\r\n
\tfor (var i = 0; i < data.length; i++) {\r\n
\t\tvar event = data[i];\r\n
\t\tscheduler._init_event(event);\r\n
\t\tevs.push(event);\r\n
\t}\r\n
\treturn evs;\r\n
};\r\n
scheduler.parse = function(data, type) {\r\n
\tthis._process = type;\r\n
\tthis.on_load({xmlDoc: {responseText: data}});\r\n
};\r\n
scheduler.load = function(url, call) {\r\n
\tif (typeof call == "string") {\r\n
\t\tthis._process = call;\r\n
\t\tcall = arguments[2];\r\n
\t}\r\n
\r\n
\tthis._load_url = url;\r\n
\tthis._after_call = call;\r\n
\tthis._load(url, this._date);\r\n
};\r\n
//possible values - day,week,month,year,all\r\n
scheduler.setLoadMode = function(mode) {\r\n
\tif (mode == "all") mode = "";\r\n
\tthis._load_mode = mode;\r\n
};\r\n
\r\n
scheduler.serverList = function(name, array) {\r\n
\tif (array) {\r\n
\t\tthis.serverList[name] = array.slice(0);\r\n
\t\treturn this.serverList[name];\r\n
\t}\r\n
\tthis.serverList[name] = (this.serverList[name] || []);\r\n
\treturn this.serverList[name];\r\n
};\r\n
scheduler._userdata = {};\r\n
scheduler._magic_parser = function(loader) {\r\n
\tvar xml;\r\n
\tif (!loader.getXMLTopNode) { //from a string\r\n
\t\tvar xml_string = loader.xmlDoc.responseText;\r\n
\t\tloader = new dtmlXMLLoaderObject(function() {});\r\n
\t\tloader.loadXMLString(xml_string);\r\n
\t}\r\n
\r\n
\txml = loader.getXMLTopNode("data");\r\n
\tif (xml.tagName != "data") return null;//not an xml\r\n
\tvar skey = xml.getAttribute("dhx_security");\r\n
\tif (skey)\r\n
\t\tdhtmlx.security_key = skey;\r\n
\r\n
\tvar opts = loader.doXPath("//coll_options");\r\n
\tfor (var i = 0; i < opts.length; i++) {\r\n
\t\tvar bind = opts[i].getAttribute("for");\r\n
\t\tvar arr = this.serverList[bind];\r\n
\t\tif (!arr) continue;\r\n
\t\tarr.splice(0, arr.length);\t//clear old options\r\n
\t\tvar itms = loader.doXPath(".//item", opts[i]);\r\n
\t\tfor (var j = 0; j < itms.length; j++) {\r\n
\t\t\tvar itm = itms[j];\r\n
\t\t\tvar attrs = itm.attributes;\r\n
\t\t\tvar obj = { key: itms[j].getAttribute("value"), label: itms[j].getAttribute("label")};\r\n
\t\t\tfor (var k = 0; k < attrs.length; k++) {\r\n
\t\t\t\tvar attr = attrs[k];\r\n
\t\t\t\tif (attr.nodeName == "value" || attr.nodeName == "label")\r\n
\t\t\t\t\tcontinue;\r\n
\t\t\t\tobj[attr.nodeName] = attr.nodeValue;\r\n
\t\t\t}\r\n
\t\t\tarr.push(obj);\r\n
\t\t}\r\n
\t}\r\n
\tif (opts.length)\r\n
\t\tscheduler.callEvent("onOptionsLoad", []);\r\n
\r\n
\tvar ud = loader.doXPath("//userdata");\r\n
\tfor (var i = 0; i < ud.length; i++) {\r\n
\t\tvar udx = this._xmlNodeToJSON(ud[i]);\r\n
\t\tthis._userdata[udx.name] = udx.text;\r\n
\t}\r\n
\r\n
\tvar evs = [];\r\n
\txml = loader.doXPath("//event");\r\n
\r\n
\tfor (var i = 0; i < xml.length; i++) {\r\n
\t\tvar ev = evs[i] = this._xmlNodeToJSON(xml[i]);\r\n
\t\tscheduler._init_event(ev);\r\n
\t}\r\n
\treturn evs;\r\n
};\r\n
scheduler._xmlNodeToJSON = function(node) {\r\n
\tvar t = {};\r\n
\tfor (var i = 0; i < node.attributes.length; i++)\r\n
\t\tt[node.attributes[i].name] = node.attributes[i].value;\r\n
\r\n
\tfor (var i = 0; i < node.childNodes.length; i++) {\r\n
\t\tvar child = node.childNodes[i];\r\n
\t\tif (child.nodeType == 1)\r\n
\t\t\tt[child.tagName] = child.firstChild ? child.firstChild.nodeValue : "";\r\n
\t}\r\n
\r\n
\tif (!t.text) t.text = node.firstChild ? node.firstChild.nodeValue : "";\r\n
\r\n
\treturn t;\r\n
};\r\n
scheduler.attachEvent("onXLS", function() {\r\n
\tif (this.config.show_loading === true) {\r\n
\t\tvar t;\r\n
\t\tt = this.config.show_loading = document.createElement("DIV");\r\n
\t\tt.className = \'dhx_loading\';\r\n
\t\tt.style.left = Math.round((this._x - 128) / 2) + "px";\r\n
\t\tt.style.top = Math.round((this._y - 15) / 2) + "px";\r\n
\t\tthis._obj.appendChild(t);\r\n
\t}\r\n
});\r\n
scheduler.attachEvent("onXLE", function() {\r\n
\tvar t = this.config.show_loading;\r\n
\tif (t && typeof t == "object") {\r\n
\t\t\tthis._obj.removeChild(t);\r\n
\t\t\tthis.config.show_loading = true;\r\n
\t\t}\r\n
});\r\n
\r\n
scheduler.ical={\r\n
\tparse:function(str){\r\n
\t\tvar data = str.match(RegExp(this.c_start+"[^\\f]*"+this.c_end,""));\r\n
\t\tif (!data.length) return;\r\n
\t\t\r\n
\t\t//unfolding \r\n
\t\tdata[0]=data[0].replace(/[\\r\\n]+(?=[a-z \\t])/g," ");\r\n
\t\t//drop property\r\n
\t\tdata[0]=data[0].replace(/\\;[^:\\r\\n]*:/g,":");\r\n
\t\t\r\n
\t\t\r\n
\t\tvar incoming=[];\r\n
\t\tvar match;\r\n
\t\tvar event_r = RegExp("(?:"+this.e_start+")([^\\f]*?)(?:"+this.e_end+")","g");\r\n
\t\twhile ((match=event_r.exec(data)) !== null){\r\n
\t\t\tvar e={};\r\n
\t\t\tvar param;\r\n
\t\t\tvar param_r = /[^\\r\\n]+[\\r\\n]+/g;\r\n
\t\t\twhile ((param=param_r.exec(match[1])) !== null)\r\n
\t\t\t\tthis.parse_param(param.toString(),e);\r\n
\t\t\tif (e.uid && !e.id) e.id = e.uid; //fallback to UID, when ID is not defined\r\n
\t\t\tincoming.push(e);\t\r\n
\t\t}\r\n
\t\treturn incoming;\r\n
\t},\r\n
\tparse_param:function(str,obj){\r\n
\t\tvar d = str.indexOf(":"); \r\n
\t\t\tif (d==-1) return;\r\n
\t\t\r\n
\t\tvar name = str.substr(0,d).toLowerCase();\r\n
\t\tvar value = str.substr(d+1).replace(/\\\\\\,/g,",").replace(/[\\r\\n]+$/,"");\r\n
\t\tif (name=="summary")\r\n
\t\t\tname="text";\r\n
\t\telse if (name=="dtstart"){\r\n
\t\t\tname = "start_date";\r\n
\t\t\tvalue = this.parse_date(value,0,0);\r\n
\t\t}\r\n
\t\telse if (name=="dtend"){\r\n
\t\t\tname = "end_date";\r\n
\t\t\tvalue = this.parse_date(value,0,0);\r\n
\t\t}\r\n
\t\tobj[name]=value;\r\n
\t},\r\n
\tparse_date:function(value,dh,dm){\r\n
\t\tvar t = value.split("T");\t\r\n
\t\tif (t[1]){\r\n
\t\t\tdh=t[1].substr(0,2);\r\n
\t\t\tdm=t[1].substr(2,2);\r\n
\t\t}\r\n
\t\tvar dy = t[0].substr(0,4);\r\n
\t\tvar dn = parseInt(t[0].substr(4,2),10)-1;\r\n
\t\tvar dd = t[0].substr(6,2);\r\n
\t\tif (scheduler.config.server_utc && !t[1]) { // if no hours/minutes were specified == full day event\r\n
\t\t\treturn new Date(Date.UTC(dy,dn,dd,dh,dm)) ;\r\n
\t\t}\r\n
\t\treturn new Date(dy,dn,dd,dh,dm);\r\n
\t},\r\n
\tc_start:"BEGIN:VCALENDAR",\r\n
\te_start:"BEGIN:VEVENT",\r\n
\te_end:"END:VEVENT",\r\n
\tc_end:"END:VCALENDAR"\t\r\n
};\r\n
scheduler._lightbox_controls = {};\r\n
scheduler.formSection = function(name){\r\n
\tvar config = this.config.lightbox.sections;\r\n
\tvar i =0;\r\n
\tfor (i; i < config.length; i++)\r\n
\t\tif (config[i].name == name)\r\n
\t\t\tbreak;\r\n
\tvar section = config[i];\r\n
\tif (!scheduler._lightbox)\r\n
\t\tscheduler.getLightbox();\r\n
\tvar header = document.getElementById(section.id);\r\n
\tvar node = header.nextSibling;\r\n
\r\n
\tvar result = {\r\n
\t\tsection: section,\r\n
\t\theader: header,\r\n
\t\tnode: node,\r\n
\t\tgetValue:function(ev){\r\n
\t\t\treturn scheduler.form_blocks[section.type].get_value(node, (ev||{}), section);\r\n
\t\t},\r\n
\t\tsetValue:function(value, ev){\r\n
\t\t\treturn scheduler.form_blocks[section.type].set_value(node, value, (ev||{}), section);\r\n
\t\t}\r\n
\t};\r\n
\r\n
\tvar handler = scheduler._lightbox_controls["get_"+section.type+"_control"];\r\n
\treturn handler?handler(result):result;\r\n
};\r\n
scheduler._lightbox_controls.get_template_control = function(result) {\r\n
\tresult.control = result.node;\r\n
\treturn result;\r\n
};\r\n
scheduler._lightbox_controls.get_select_control = function(result) {\r\n
\tresult.control = result.node.getElementsByTagName(\'select\')[0];\r\n
\treturn result;\r\n
};\r\n
scheduler._lightbox_controls.get_textarea_control = function(result) {\r\n
\tresult.control = result.node.getElementsByTagName(\'textarea\')[0];\r\n
\treturn result;\r\n
};\r\n
scheduler._lightbox_controls.get_time_control = function(result) {\r\n
\tresult.control = result.node.getElementsByTagName(\'select\'); // array\r\n
\treturn result;\r\n
};\r\n
scheduler.form_blocks={\r\n
\ttemplate:{\r\n
\t\t\trender: function(sns){\r\n
\t\t\tvar height=(sns.height||"30")+"px";\r\n
\t\t\treturn "<div class=\'dhx_cal_ltext dhx_cal_template\' style=\'height:"+height+";\'></div>";\r\n
\t\t},\r\n
\t\tset_value:function(node,value,ev,config){\r\n
\t\t\tnode.innerHTML = value||"";\r\n
\t\t},\r\n
\t\tget_value:function(node,ev,config){\r\n
\t\t\treturn node.innerHTML||"";\r\n
\t\t},\r\n
\t\tfocus: function(node){\r\n
\t\t}\r\n
\t},\r\n
\ttextarea:{\r\n
\t\trender:function(sns){\r\n
\t\t\tvar height=(sns.height||"130")+"px";\r\n
\t\t\treturn "<div class=\'dhx_cal_ltext\' style=\'height:"+height+";\'><textarea></textarea></div>";\r\n
\t\t},\r\n
\t\tset_value:function(node,value,ev){\r\n
\t\t\tnode.firstChild.value=value||"";\r\n
\t\t},\r\n
\t\tget_value:function(node,ev){\r\n
\t\t\treturn node.firstChild.value;\r\n
\t\t},\r\n
\t\tfocus:function(node){\r\n
\t\t\tvar a=node.firstChild; scheduler._focus(a, true);\r\n
\t\t}\r\n
\t},\r\n
\tselect:{\r\n
\t\trender:function(sns){\r\n
\t\t\tvar height=(sns.height||"23")+"px";\r\n
\t\t\tvar html="<div class=\'dhx_cal_ltext\' style=\'height:"+height+";\'><select style=\'width:100%;\'>";\r\n
\t\t\tfor (var i=0; i < sns.options.length; i++)\r\n
\t\t\t\thtml+="<option value=\'"+sns.options[i].key+"\'>"+sns.options[i].label+"</option>";\r\n
\t\t\thtml+="</select></div>";\r\n
\t\t\treturn html;\r\n
\t\t},\r\n
\t\tset_value:function(node,value,ev,sns){\r\n
\t\t\tvar select = node.firstChild;\r\n
\t\t\tif (!select._dhx_onchange && sns.onchange) {\r\n
\t\t\t\tselect.onchange = sns.onchange;\r\n
\t\t\t\tselect._dhx_onchange = true;\r\n
\t\t\t}\r\n
\t\t\tif (typeof value == "undefined")\r\n
\t\t\t\tvalue = (select.options[0]||{}).value;\r\n
\t\t\tselect.value=value||"";\r\n
\t\t},\r\n
\t\tget_value:function(node,ev){\r\n
\t\t\treturn node.firstChild.value;\r\n
\t\t},\r\n
\t\tfocus:function(node){\r\n
\t\t\tvar a=node.firstChild; scheduler._focus(a, true); \r\n
\t\t}\r\n
\t},\r\n
\ttime:{\r\n
\t\trender:function(sns) {\r\n
\t\t\tif (!sns.time_format) {\r\n
\t\t\t\t// default order\r\n
\t\t\t\tsns.time_format = ["%H:%i", "%d", "%m", "%Y"];\r\n
\t\t\t}\r\n
\t\t\t// map: default order => real one\r\n
\t\t\tsns._time_format_order = {};\r\n
\t\t\tvar time_format = sns.time_format;\r\n
\r\n
\t\t\tvar cfg = scheduler.config;\r\n
\t\t\tvar dt = this.date.date_part(scheduler._currentDate());\r\n
\t\t\tvar last = 24*60, first = 0;\r\n
\t\t\tif(scheduler.config.limit_time_select){\r\n
\t\t\t\tlast = 60*cfg.last_hour+1;\r\n
\t\t\t\tfirst = 60*cfg.first_hour;\r\n
\t\t\t\tdt.setHours(cfg.first_hour);\r\n
\t\t\t}\r\n
\t\t\tvar html = "";\r\n
\r\n
\t\t\tfor (var p = 0; p < time_format.length; p++) {\r\n
\t\t\t\tvar time_option = time_format[p];\r\n
\r\n
\t\t\t\t// adding spaces between selects\r\n
\t\t\t\tif (p > 0) {\r\n
\t\t\t\t\thtml += " ";\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tswitch (time_option) {\r\n
\t\t\t\t\tcase "%Y":\r\n
\t\t\t\t\t\tsns._time_format_order[3] = p;\r\n
\t\t\t\t\t\t//year\r\n
\t\t\t\t\t\thtml+="<select>";\r\n
\t\t\t\t\t\tvar year = dt.getFullYear()-5; //maybe take from config?\r\n
\t\t\t\t\t\tfor (var i=0; i < 10; i++)\r\n
\t\t\t\t\t\t\thtml+="<option value=\'"+(year+i)+"\'>"+(year+i)+"</option>";\r\n
\t\t\t\t\t\thtml+="</select> ";\r\n
\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\tcase "%m":\r\n
\t\t\t\t\t\tsns._time_format_order[2] = p;\r\n
\t\t\t\t\t\t//month\r\n
\t\t\t\t\t\thtml+="<select>";\r\n
\t\t\t\t\t\tfor (var i=0; i < 12; i++)\r\n
\t\t\t\t\t\t\thtml+="<option value=\'"+i+"\'>"+this.locale.date.month_full[i]+"</option>";\r\n
\t\t\t\t\t\thtml += "</select>";\r\n
\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\tcase "%d":\r\n
\t\t\t\t\t\tsns._time_format_order[1] = p;\r\n
\t\t\t\t\t\t//days\r\n
\t\t\t\t\t\thtml+="<select>";\r\n
\t\t\t\t\t\tfor (var i=1; i < 32; i++)\r\n
\t\t\t\t\t\t\thtml+="<option value=\'"+i+"\'>"+i+"</option>";\r\n
\t\t\t\t\t\thtml += "</select>";\r\n
\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\tcase "%H:%i":\r\n
\t\t\t\t\t\tsns._time_format_order[0] = p;\r\n
\t\t\t\t\t\t//hours\r\n
\t\t\t\t\t\thtml += "<select>";\r\n
\t\t\t\t\t\tvar i = first;\r\n
\t\t\t\t\t\tvar tdate = dt.getDate();\r\n
\t\t\t\t\t\tsns._time_values = [];\r\n
\r\n
\t\t\t\t\t\twhile(i<last){\r\n
\t\t\t\t\t\t\tvar time=this.templates.time_picker(dt);\r\n
\t\t\t\t\t\t\thtml+="<option value=\'"+i+"\'>"+time+"</option>";\r\n
\t\t\t\t\t\t\tsns._time_values.push(i);\r\n
\t\t\t\t\t\t\tdt.setTime(dt.valueOf()+this.config.time_step*60*1000);\r\n
\t\t\t\t\t\t\tvar diff = (dt.getDate()!=tdate)?1:0; // moved or not to the next day\r\n
\t\t\t\t\t\t\ti=diff*24*60+dt.getHours()*60+dt.getMinutes();\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t\thtml += "</select>";\r\n
\t\t\t\t\t\tbreak;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn "<div style=\'height:30px;padding-top:0px;font-size:inherit;\' class=\'dhx_section_time\'>"+html+"<span style=\'font-weight:normal; font-size:10pt;\'> &nbsp;&ndash;&nbsp; </span>"+html+"</div>";\r\n
\t\t},\r\n
\t\tset_value:function(node,value,ev,config){\r\n
\t\t\tvar cfg = scheduler.config;\r\n
\t\t\tvar s=node.getElementsByTagName("select");\r\n
\t\t\tvar map = config._time_format_order;\r\n
\t\t\tvar start_date, end_date;\r\n
\r\n
\t\t\tif(cfg.full_day) {\r\n
\t\t\t\tif (!node._full_day){\r\n
\t\t\t\t\tvar html = "<label class=\'dhx_fullday\'><input type=\'checkbox\' name=\'full_day\' value=\'true\'> "+scheduler.locale.labels.full_day+"&nbsp;</label></input>";\r\n
\t\t\t\t\tif (!scheduler.config.wide_form)\r\n
\t\t\t\t\t\thtml = node.previousSibling.innerHTML+html;\r\n
\t\t\t\t\tnode.previousSibling.innerHTML=html;\r\n
\t\t\t\t\tnode._full_day=true;\r\n
\t\t\t\t}\r\n
\t\t\t\tvar input=node.previousSibling.getElementsByTagName("input")[0];\r\n
\t\t\t\tinput.checked = (scheduler.date.time_part(ev.start_date)===0 && scheduler.date.time_part(ev.end_date)===0);\r\n
\r\n
\t\t\t\ts[map[0]].disabled=input.checked;\r\n
\t\t\t\ts[ map[0] + s.length/2 ].disabled=input.checked;\r\n
\r\n
\t\t\t\tinput.onclick = function(){ \r\n
\t\t\t\t\tif(input.checked) {\r\n
\t\t\t\t\t\tvar obj = {};\r\n
\t\t\t\t\t\tscheduler.form_blocks.time.get_value(node,obj,config);\r\n
\r\n
\t\t\t\t\t\tstart_date = scheduler.date.date_part(obj.start_date);\r\n
\t\t\t\t\t\tend_date = scheduler.date.date_part(obj.end_date);\r\n
\r\n
\t\t\t\t\t\tif (+end_date == +start_date || (+end_date >= +start_date && (ev.end_date.getHours() !== 0 || ev.end_date.getMinutes() !== 0)))\r\n
\t\t\t\t\t\t\tend_date = scheduler.date.add(end_date, 1, "day");\r\n
\t\t\t\t\t}else{\r\n
\t\t\t\t\t\tstart_date = null;\r\n
\t\t\t\t\t\tend_date = null;\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\ts[map[0]].disabled=input.checked;\r\n
\t\t\t\t\ts[ map[0] + s.length/2 ].disabled=input.checked;\r\n
\t\t\t\t\t\r\n
\t\t\t\t\t_fill_lightbox_select(s,0,start_date||ev.start_date);\r\n
\t\t\t\t\t_fill_lightbox_select(s,4,end_date||ev.end_date);\r\n
\t\t\t\t};\r\n
\t\t\t}\r\n
\t\t\t\r\n
\t\t\tif(cfg.auto_end_date && cfg.event_duration) {\r\n
\t\t\t\tvar _update_lightbox_select = function () {\r\n
\t\t\t\t\tstart_date = new Date(s[map[3]].value,s[map[2]].value,s[map[1]].value,0,s[map[0]].value);\r\n
\t\t\t\t\tend_date = new Date(start_date.getTime() + (scheduler.config.event_duration * 60 * 1000));\r\n
\t\t\t\t\t_fill_lightbox_select(s, 4, end_date);\r\n
\t\t\t\t};\r\n
\t\t\t\tfor(var i=0; i<4; i++) {\r\n
\t\t\t\t\ts[i].onchange = _update_lightbox_select;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t\t\r\n
\t\t\tfunction _fill_lightbox_select(s,i,d) {\r\n
\t\t\t\tvar time_values = config._time_values;\r\n
\t\t\t\tvar direct_value = d.getHours()*60+d.getMinutes();\r\n
\t\t\t\tvar fixed_value = direct_value;\r\n
\t\t\t\tvar value_found = false;\r\n
\t\t\t\tfor (var k=0; k<time_values.length; k++) {\r\n
\t\t\t\t\tvar t_v = time_values[k];\r\n
\t\t\t\t\tif (t_v === direct_value) {\r\n
\t\t\t\t\t\tvalue_found = true;\r\n
\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\tif (t_v < direct_value)\r\n
\t\t\t\t\t\tfixed_value = t_v;\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\ts[i+map[0]].value=(value_found)?direct_value:fixed_value;\r\n
\t\t\t\tif(!(value_found || fixed_value)){\r\n
\t\t\t\t\ts[i+map[0]].selectedIndex = -1;//show empty select in FF\r\n
\t\t\t\t}\r\n
\t\t\t\ts[i+map[1]].value=d.getDate();\r\n
\t\t\t\ts[i+map[2]].value=d.getMonth();\r\n
\t\t\t\ts[i+map[3]].value=d.getFullYear();\r\n
\t\t\t}\r\n
\r\n
\t\t\t_fill_lightbox_select(s,0,ev.start_date);\r\n
\t\t\t_fill_lightbox_select(s,4,ev.end_date);\r\n
\t\t},\r\n
\t\tget_value:function(node, ev, config) {\r\n
\t\t\tvar s = node.getElementsByTagName("select");\r\n
\t\t\tvar map = config._time_format_order;\r\n
\r\n
\t\t\tev.start_date=new Date(s[map[3]].value,s[map[2]].value,s[map[1]].value,0,s[map[0]].value);\r\n
\t\t\tev.end_date=new Date(s[map[3]+4].value,s[map[2]+4].value,s[map[1]+4].value,0,s[map[0]+4].value);\r\n
\r\n
\t\t\tif(!(s[map[3]].value && s[map[3]+4].value)){\r\n
\t\t\t\t// use the previous date if start/end years are empty (outside lightbox range)\r\n
\t\t\t\tvar original = this.getEvent(this._lightbox_id);\r\n
\t\t\t\tif(original){\r\n
\t\t\t\t\tev.start_date = original.start_date;\r\n
\t\t\t\t\tev.end_date = original.end_date;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\tif (ev.end_date<=ev.start_date) \r\n
\t\t\t\tev.end_date=scheduler.date.add(ev.start_date,scheduler.config.time_step,"minute");\r\n
\t\t\treturn {\r\n
\t\t\t\tstart_date: new Date(ev.start_date),\r\n
\t\t\t\tend_date: new Date(ev.end_date)\r\n
\t\t\t};\r\n
\t\t},\r\n
\t\tfocus:function(node){\r\n
\t\t\tscheduler._focus(node.getElementsByTagName("select")[0]); \r\n
\t\t}\r\n
\t}\r\n
};\r\n
scheduler.showCover=function(box){\r\n
\tif (box){\r\n
\t\tbox.style.display="block";\r\n
\r\n
\t\tvar scroll_top = window.pageYOffset||document.body.scrollTop||document.documentElement.scrollTop;\r\n
\t\tvar scroll_left = window.pageXOffset||document.body.scrollLeft||document.documentElement.scrollLeft;\r\n
\r\n
\t\tvar view_height = window.innerHeight||document.documentElement.clientHeight;\r\n
\r\n
\t\tif(scroll_top) // if vertical scroll on window\r\n
\t\t\tbox.style.top=Math.round(scroll_top+Math.max((view_height-box.offsetHeight)/2, 0))+"px";\r\n
\t\telse // vertical scroll on body\r\n
\t\t\tbox.style.top=Math.round(Math.max(((view_height-box.offsetHeight)/2), 0) + 9)+"px"; // +9 for compatibility with auto tests\r\n
\r\n
\t\t// not quite accurate but used for compatibility reasons\r\n
\t\tif(document.documentElement.scrollWidth > document.body.offsetWidth) // if horizontal scroll on the window\r\n
\t\t\tbox.style.left=Math.round(scroll_left+(document.body.offsetWidth-box.offsetWidth)/2)+"px";\r\n
\t\telse // horizontal scroll on the body\r\n
\t\t\tbox.style.left=Math.round((document.body.offsetWidth-box.offsetWidth)/2)+"px";\r\n
\t}\r\n
    this.show_cover();\r\n
};\r\n
scheduler.showLightbox=function(id){\r\n
\tif (!id) return;\r\n
\tif (!this.callEvent("onBeforeLightbox",[id])) {\r\n
\t\tif (this._new_event)\r\n
\t\t\tthis._new_event = null;\r\n
\t\treturn;\r\n
\t}\r\n
\tvar box = this.getLightbox();\r\n
\tthis.showCover(box);\r\n
\tthis._fill_lightbox(id,box);\r\n
\tthis.callEvent("onLightbox",[id]);\r\n
};\r\n
scheduler._fill_lightbox = function(id, box) {\r\n
\tvar ev = this.getEvent(id);\r\n
\tvar s = box.getElementsByTagName("span");\r\n
\tif (scheduler.templates.lightbox_header) {\r\n
\t\ts[1].innerHTML = "";\r\n
\t\ts[2].innerHTML = scheduler.templates.lightbox_header(ev.start_date, ev.end_date, ev);\r\n
\t} else {\r\n
\t\ts[1].innerHTML = this.templates.event_header(ev.start_date, ev.end_date, ev);\r\n
\t\ts[2].innerHTML = (this.templates.event_bar_text(ev.start_date, ev.end_date, ev) || "").substr(0, 70); //IE6 fix\r\n
\t}\r\n
\r\n
\tvar sns = this.config.lightbox.sections;\r\n
\tfor (var i = 0; i < sns.length; i++) {\r\n
\t\tvar current_sns = sns[i];\r\n
\t\tvar node = document.getElementById(current_sns.id).nextSibling;\r\n
\t\tvar block = this.form_blocks[current_sns.type];\r\n
\t\tvar value = (ev[current_sns.map_to] !== undefined) ? ev[current_sns.map_to] : current_sns.default_value;\r\n
\t\tblock.set_value.call(this, node, value, ev, current_sns);\r\n
\t\tif (sns[i].focus)\r\n
\t\t\tblock.focus.call(this, node);\r\n
\t}\r\n
\r\n
\tscheduler._lightbox_id = id;\r\n
};\r\n
scheduler._lightbox_out=function(ev){\r\n
\tvar sns = this.config.lightbox.sections;\r\n
\tfor (var i=0; i < sns.length; i++) {\r\n
\t\tvar node = document.getElementById(sns[i].id);\r\n
\t\tnode=(node?node.nextSibling:node);\r\n
\t\tvar block=this.form_blocks[sns[i].type];\r\n
\t\tvar res=block.get_value.call(this,node,ev, sns[i]);\r\n
\t\tif (sns[i].map_to!="auto")\r\n
\t\t\tev[sns[i].map_to]=res;\r\n
\t}\r\n
\treturn ev;\r\n
};\r\n
scheduler._empty_lightbox=function(data){\r\n
\tvar id=scheduler._lightbox_id;\r\n
\tvar ev=this.getEvent(id);\r\n
\tvar box=this.getLightbox();\r\n
\r\n
\tthis._lame_copy(ev, data);\r\n
\r\n
\tthis.setEvent(ev.id,ev);\r\n
\tthis._edit_stop_event(ev,true);\r\n
\tthis.render_view_data();\r\n
};\r\n
scheduler.hide_lightbox=function(id){\r\n
\tthis.hideCover(this.getLightbox());\r\n
\tthis._lightbox_id = null;\r\n
\tthis.callEvent("onAfterLightbox",[]);\r\n
};\r\n
scheduler.hideCover=function(box){\r\n
\tif (box) box.style.display="none";\r\n
\tthis.hide_cover();\r\n
};\r\n
scheduler.hide_cover=function(){\r\n
\tif (this._cover) \r\n
\t\tthis._cover.parentNode.removeChild(this._cover);\r\n
\tthis._cover=null;\r\n
};\r\n
scheduler.show_cover=function(){\r\n
\tif(this._cover)\r\n
\t\treturn;\r\n
\r\n
\tthis._cover=document.createElement("DIV");\r\n
\tthis._cover.className="dhx_cal_cover";\r\n
\tvar _document_height = ((document.height !== undefined) ? document.height : document.body.offsetHeight);\r\n
\tvar _scroll_height = ((document.documentElement) ? document.documentElement.scrollHeight : 0);\r\n
\tthis._cover.style.height = Math.max(_document_height, _scroll_height) + \'px\';\r\n
\tdocument.body.appendChild(this._cover);\r\n
};\r\n
scheduler.save_lightbox=function(){\r\n
\tvar data = this._lightbox_out({}, this._lame_copy(this.getEvent(this._lightbox_id)));\r\n
\tif (this.checkEvent("onEventSave") && !this.callEvent("onEventSave",[this._lightbox_id, data, this._new_event]))\r\n
\t\treturn;\r\n
\tthis._empty_lightbox(data);\r\n
\tthis.hide_lightbox();\r\n
};\r\n
scheduler.startLightbox = function(id, box){\r\n
\tthis._lightbox_id = id;\r\n
\tthis._custom_lightbox = true;\r\n
\r\n
\tthis._temp_lightbox = this._lightbox;\r\n
\tthis._lightbox = box;\r\n
\tthis.showCover(box);\r\n
};\r\n
scheduler.endLightbox = function(mode, box){\r\n
\tthis._edit_stop_event(scheduler.getEvent(this._lightbox_id),mode);\r\n
\tif (mode)\r\n
\t\tscheduler.render_view_data();\r\n
\tthis.hideCover(box);\r\n
\r\n
\tif (this._custom_lightbox){\r\n
\t\tthis._lightbox = this._temp_lightbox;\r\n
\t\tthis._custom_lightbox = false;\r\n
\t}\r\n
\tthis._temp_lightbox = this._lightbox_id = null; // in case of custom lightbox user only calls endLightbox so we need to reset _lightbox_id\r\n
};\r\n
scheduler.resetLightbox = function(){\r\n
\tif (scheduler._lightbox && !scheduler._custom_lightbox)\r\n
\t\tscheduler._lightbox.parentNode.removeChild(scheduler._lightbox);\r\n
\tscheduler._lightbox = null;\r\n
};\r\n
scheduler.cancel_lightbox=function(){\r\n
\tthis.callEvent("onEventCancel",[this._lightbox_id, this._new_event]);\r\n
\tthis.endLightbox(false);\r\n
\tthis.hide_lightbox();\r\n
};\r\n
scheduler._init_lightbox_events=function(){\r\n
\tthis.getLightbox().onclick=function(e){\r\n
\t\tvar src=e?e.target:event.srcElement;\r\n
\t\tif (!src.className) src=src.previousSibling;\r\n
\t\tif (src && src.className)\r\n
\t\t\tswitch(src.className){\r\n
\t\t\t\tcase "dhx_save_btn":\r\n
\t\t\t\t\tscheduler.save_lightbox();\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\tcase "dhx_delete_btn":\r\n
\t\t\t\t\tvar c=scheduler.locale.labels.confirm_deleting;\r\n
\r\n
\t\t\t\t\tscheduler._dhtmlx_confirm(c, scheduler.locale.labels.title_confirm_deleting, function(){\r\n
\t\t\t\t\t\tscheduler.deleteEvent(scheduler._lightbox_id);\r\n
\t\t\t\t\t\tscheduler._new_event = null; //clear flag, if it was unsaved event\r\n
\t\t\t\t\t\tscheduler.hide_lightbox();\r\n
\t\t\t\t\t});\r\n
\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\tcase "dhx_cancel_btn":\r\n
\t\t\t\t\tscheduler.cancel_lightbox();\r\n
\t\t\t\t\tbreak;\r\n
\r\n
\t\t\t\tdefault:\r\n
\t\t\t\t\tif (src.getAttribute("dhx_button")) {\r\n
\t\t\t\t\t\tscheduler.callEvent("onLightboxButton", [src.className, src, e]);\r\n
\t\t\t\t\t} else {\r\n
\t\t\t\t\t\tvar index, block, sec;\r\n
\t\t\t\t\t\tif (src.className.indexOf("dhx_custom_button") != -1) {\r\n
\t\t\t\t\t\t\tif (src.className.indexOf("dhx_custom_button_") != -1) {\r\n
\t\t\t\t\t\t\t\tindex = src.parentNode.getAttribute("index");\r\n
\t\t\t\t\t\t\t\tsec = src.parentNode.parentNode;\r\n
\t\t\t\t\t\t\t} else {\r\n
\t\t\t\t\t\t\t\tindex = src.getAttribute("index");\r\n
\t\t\t\t\t\t\t\tsec = src.parentNode;\r\n
\t\t\t\t\t\t\t\tsrc = src.firstChild;\r\n
\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t\tif (index) {\r\n
\t\t\t\t\t\t\tblock = scheduler.form_blocks[scheduler.config.lightbox.sections[index].type];\r\n
\t\t\t\t\t\t\tblock.button_click(index, src, sec, sec.nextSibling);\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t}\r\n
\t};\r\n
\tthis.getLightbox().onkeydown=function(e){\r\n
\t\tswitch((e||event).keyCode){\r\n
\t\t\tcase scheduler.keys.edit_save:\r\n
\t\t\t\tif ((e||event).shiftKey) return;\r\n
\t\t\t\tscheduler.save_lightbox();\r\n
\t\t\t\tbreak;\r\n
\t\t\tcase scheduler.keys.edit_cancel:\r\n
\t\t\t\tscheduler.cancel_lightbox();\r\n
\t\t\t\tbreak;\r\n
\t\t\tdefault:\r\n
\t\t\t\tbreak;\r\n
\t\t}\r\n
\t};\r\n
};\r\n
scheduler.setLightboxSize=function(){\r\n
\tvar d = this._lightbox;\r\n
\tif (!d) return;\r\n
\r\n
\tvar con = d.childNodes[1];\r\n
\tcon.style.height="0px";\r\n
\tcon.style.height=con.scrollHeight+"px";\r\n
\td.style.height=con.scrollHeight+scheduler.xy.lightbox_additional_height+"px";\r\n
\tcon.style.height=con.scrollHeight+"px"; //it is incredible , how ugly IE can be\r\n
};\r\n
\r\n
scheduler._init_dnd_events = function(){\r\n
\tdhtmlxEvent(document.body, "mousemove", scheduler._move_while_dnd);\r\n
\tdhtmlxEvent(document.body, "mouseup", scheduler._finish_dnd);\r\n
\tscheduler._init_dnd_events = function(){};\r\n
};\r\n
scheduler._move_while_dnd = function(e){\r\n
\tif (scheduler._dnd_start_lb){\r\n
\t\tif (!document.dhx_unselectable){\r\n
\t\t\tdocument.body.className += " dhx_unselectable";\r\n
\t\t\tdocument.dhx_unselectable = true;\r\n
\t\t}\r\n
\t\tvar lb = scheduler.getLightbox();\r\n
\t\tvar now = (e&&e.target)?[e.pageX, e.pageY]:[event.clientX, event.clientY];\r\n
\t\tlb.style.top = scheduler._lb_start[1]+now[1]-scheduler._dnd_start_lb[1]+"px";\r\n
\t\tlb.style.left = scheduler._lb_start[0]+now[0]-scheduler._dnd_start_lb[0]+"px";\r\n
\t}\r\n
};\r\n
scheduler._ready_to_dnd = function(e){\r\n
\tvar lb = scheduler.getLightbox();\r\n
\tscheduler._lb_start = [parseInt(lb.style.left,10), parseInt(lb.style.top,10)];\r\n
\tscheduler._dnd_start_lb = (e&&e.target)?[e.pageX, e.pageY]:[event.clientX, event.clientY];\r\n
};\r\n
scheduler._finish_dnd = function(){\r\n
\tif (scheduler._lb_start){\r\n
\t\tscheduler._lb_start = scheduler._dnd_start_lb = false;\r\n
\t\tdocument.body.className = document.body.className.replace(" dhx_unselectable","");\r\n
\t\tdocument.dhx_unselectable = false;\r\n
\t}\r\n
};\r\n
scheduler.getLightbox=function(){ //scheduler.config.wide_form=true;\r\n
\tif (!this._lightbox){\r\n
\t\tvar d=document.createElement("DIV");\r\n
\t\td.className="dhx_cal_light";\r\n
\t\tif (scheduler.config.wide_form)\r\n
\t\t\td.className+=" dhx_cal_light_wide";\r\n
\t\tif (scheduler.form_blocks.recurring)\r\n
\t\t\td.className+=" dhx_cal_light_rec";\r\n
\t\t\t\r\n
\t\tif (/msie|MSIE 6/.test(navigator.userAgent))\r\n
\t\t\td.className+=" dhx_ie6";\r\n
\t\td.style.visibility="hidden";\r\n
\t\tvar html = this._lightbox_template;\r\n
\r\n
\t\tvar buttons = this.config.buttons_left;\r\n
\t\tfor (var i = 0; i < buttons.length; i++)\r\n
\t\t\thtml+="<div class=\'dhx_btn_set dhx_left_btn_set "+buttons[i]+"_set\'><div dhx_button=\'1\' class=\'"+buttons[i]+"\'></div><div>"+scheduler.locale.labels[buttons[i]]+"</div></div>";\r\n
\r\n
\t\tbuttons = this.config.buttons_right;\r\n
\t\tfor (var i = 0; i < buttons.length; i++)\r\n
\t\t\thtml+="<div class=\'dhx_btn_set dhx_right_btn_set "+buttons[i]+"_set\' style=\'float:right;\'><div dhx_button=\'1\' class=\'"+buttons[i]+"\'></div><div>"+scheduler.locale.labels[buttons[i]]+"</div></div>";\r\n
\r\n
\t\thtml+="</div>";\r\n
\t\td.innerHTML=html;\r\n
\t\tif (scheduler.config.drag_lightbox){\r\n
\t\t\td.firstChild.onmousedown = scheduler._ready_to_dnd;\r\n
\t\t\td.firstChild.onselectstart = function(){ return false; };\r\n
\t\t\td.firstChild.style.cursor = "pointer";\r\n
\t\t\tscheduler._init_dnd_events();\r\n
\r\n
\t\t}\r\n
\t\tdocument.body.insertBefore(d,document.body.firstChild);\r\n
\t\tthis._lightbox=d;\r\n
\t\t\r\n
\t\tvar sns=this.config.lightbox.sections;\r\n
\t\thtml="";\r\n
\t\tfor (var i=0; i < sns.length; i++) {\r\n
\t\t\tvar block=this.form_blocks[sns[i].type];\r\n
\t\t\tif (!block) continue; //ignore incorrect blocks\r\n
\t\t\tsns[i].id="area_"+this.uid();\r\n
\t\t\tvar button = "";\r\n
\t\t\tif (sns[i].button){\r\n
\t\t\t \tbutton = "<div class=\'dhx_custom_button\' index=\'"+i+"\'><div class=\'dhx_custom_button_"+sns[i].button+"\'></div><div>"+this.locale.labels["button_"+sns[i].button]+"</div></div>";\r\n
\t\t\t }\r\n
\t\t\t\r\n
\t\t\tif (this.config.wide_form){\r\n
\t\t\t\thtml+="<div class=\'dhx_wrap_section\'>";\r\n
\t\t\t}\r\n
\t\t\t\r\n
\t\t\tvar label_name = this.locale.labels["section_"+sns[i].name];\r\n
\t\t\tif(typeof label_name !== "string"){\r\n
\t\t\t\tlabel_name = sns[i].name;\r\n
\t\t\t}\r\n
\t\t\thtml+="<div id=\'"+sns[i].id+"\' class=\'dhx_cal_lsection\'>"+button+label_name+"</div>"+block.render.call(this,sns[i]);\r\n
\t\t\thtml+="</div>";\r\n
\t\t}\r\n
\r\n
\t\tvar ds=d.getElementsByTagName("div");\r\n
\t\tfor (var i=0; i<ds.length; i++) {\r\n
\t\t\tvar t_ds = ds[i];\r\n
\t\t\tif (t_ds.className == "dhx_cal_larea") {\r\n
\t\t\t\tt_ds.innerHTML = html;\r\n
\t\t\t\tbreak;\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\t//sizes\r\n
\t\tthis.setLightboxSize();\r\n
\r\n
\t\tthis._init_lightbox_events(this);\r\n
\t\td.style.display="none";\r\n
\t\td.style.visibility="visible";\r\n
\t}\r\n
\treturn this._lightbox;\r\n
};\r\n
\r\n
scheduler.attachEvent("onEventIdChange", function(old_id, new_id){\r\n
\tif(this._lightbox_id == old_id)\r\n
\t\tthis._lightbox_id = new_id;\r\n
});\r\n
\r\n
scheduler._lightbox_template="<div class=\'dhx_cal_ltitle\'><span class=\'dhx_mark\'>&nbsp;</span><span class=\'dhx_time\'></span><span class=\'dhx_title\'></span></div><div class=\'dhx_cal_larea\'></div>";\r\n
\r\n
scheduler._init_touch_events = function(){\r\n
\tif (this.config.touch != "force")\r\n
\t\tthis.config.touch = this.config.touch  &&\r\n
\t\t\t    ( (navigator.userAgent.indexOf("Mobile")!=-1)   ||\r\n
\t\t\t\t(navigator.userAgent.indexOf("iPad")!=-1)       ||\r\n
\t\t\t\t(navigator.userAgent.indexOf("Android")!=-1)    ||\r\n
\t\t\t\t(navigator.userAgent.indexOf("Touch")!=-1));\r\n
\r\n
\tif (this.config.touch){\r\n
\t\tthis.xy.scroll_width = 0;\r\n
\t\tif (window.navigator.msPointerEnabled){\r\n
\t\t\tthis._touch_events(["MSPointerMove", "MSPointerDown", "MSPointerUp"], function(ev){\r\n
\t\t\t\tif (ev.pointerType == ev.MSPOINTER_TYPE_MOUSE ) return null;\r\n
\t\t\t\treturn ev;\r\n
\t\t\t}, function(ev){\r\n
\t\t\t\treturn (!ev || ev.pointerType == ev.MSPOINTER_TYPE_MOUSE);\r\n
\t\t\t});\r\n
\t\t\tthis._obj.ondblclick = function(){};\r\n
\t\t} else\r\n
\t\t\tthis._touch_events(["touchmove", "touchstart", "touchend"], function(ev){\r\n
\t\t\t\tif (ev.touches && ev.touches.length > 1) return null;\r\n
\t\t\t\tif (ev.touches[0])\r\n
\t\t\t\t\treturn { target:ev.target, pageX:ev.touches[0].pageX, pageY:ev.touches[0].pageY };\r\n
\t\t\t\telse \r\n
\t\t\t\t\treturn ev;\r\n
\t\t\t}, function(){ return false; });\r\n
\t}\r\n
};\r\n
\r\n
scheduler._touch_events = function(names, accessor, ignore){\r\n
\t//webkit on android need to be handled separately\r\n
\tvar a_webkit = (navigator.userAgent.indexOf("Android")!=-1) && (navigator.userAgent.indexOf("WebKit")!=-1);\r\n
\tvar source, tracker, timer, drag_mode, scroll_mode, action_mode;\r\n
\tvar dblclicktime = 0;\r\n
\r\n
\tfunction attachTouchEvent(element, name, callback){\r\n
\t\t//touch gestures must be disabled when ligthbox is opened\r\n
\t\tdhtmlxEvent(element, name, function(e){\r\n
\t\t\tif(scheduler._is_lightbox_open()){\r\n
\t\t\t\treturn true;\r\n
\t\t\t}else{\r\n
\t\t\t\treturn callback(e);\r\n
\t\t\t}\r\n
\t\t});\r\n
\t}\r\n
\r\n
\tfunction check_direction_swipe(s_ev, e_ev, step, max_dy){\r\n
\t\tif (!s_ev || !e_ev) return;\r\n
\r\n
\t\tvar t = s_ev.target;\r\n
\t\twhile(t && t != scheduler._obj){\r\n
\t\t\tt = t.parentNode;\r\n
\t\t}\r\n
\t\tif(t != scheduler._obj){\r\n
\t\t\t//swipe outside scheduler\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\tvar dy = Math.abs(s_ev.pageY - e_ev.pageY);\r\n
\t\tvar dx = Math.abs(s_ev.pageX - e_ev.pageX);\r\n
\t\tif (dy < max_dy && dx>step && (!dy || (dx/dy > 3))){\r\n
\t\t\tif (s_ev.pageX > e_ev.pageX)\r\n
\t\t\t\tscheduler._click.dhx_cal_next_button();\r\n
\t\t\telse\r\n
\t\t\t\tscheduler._click.dhx_cal_prev_button();\r\n
\t\t}\r\n
\t}\r\n
\r\n
\tfunction doMouseMove(e){\r\n
\t\tvar dnd = scheduler.getState().drag_mode,\r\n
\t\t\ttimeline = scheduler.matrix ? scheduler.matrix[scheduler._mode] : false;\r\n
\r\n
\t\tvar original_render = scheduler.render_view_data;\r\n
\t\tif(dnd == \'create\' && timeline){\r\n
\t\t\t//suppress full redraw of timeline on creating event\r\n
\t\t\tscheduler.render_view_data = function() {\r\n
\t\t\t\tvar id = scheduler.getState().drag_id;\r\n
\t\t\t\tvar ev = scheduler.getEvent(id);\r\n
\t\t\t\tvar property = timeline.y_property;\r\n
\r\n
\t\t\t\tvar evs = scheduler.getEvents(ev.start_date, ev.end_date);\r\n
\t\t\t\tfor(var i = 0; i < evs.length; i++){\r\n
\t\t\t\t\tif(evs[i][property] != ev[property]){\r\n
\t\t\t\t\t\tevs.splice(i, 1);\r\n
\t\t\t\t\t\ti--;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t\tev._sorder = evs.length - 1;\r\n
\t\t\t\tev._count = evs.length;\r\n
\r\n
\t\t\t\tthis.render_data([ev], scheduler.getState().mode);\r\n
\r\n
\t\t\t};\r\n
\t\t}\r\n
\r\n
\t\tscheduler._on_mouse_move(e);\r\n
\r\n
\t\tif(dnd == \'create\' && timeline){\r\n
\t\t\tscheduler.render_view_data = original_render;\r\n
\t\t}\r\n
\t}\r\n
\tattachTouchEvent(document.body, names[0], function(e){\r\n
\t\tif (ignore(e)) return;\r\n
\r\n
\t\tif (drag_mode){\r\n
\t\t\tdoMouseMove(accessor(e));\r\n
\t\t\tscheduler._update_global_tip();\r\n
\t\t\tif (e.preventDefault)\r\n
\t\t\t\te.preventDefault();\r\n
\t\t\te.cancelBubble = true;\r\n
\t\t\treturn false;\r\n
\t\t}\r\n
\r\n
\t\t//if (tracker && a_webkit){\r\n
\t\t//\tcheck_direction_swipe(tracker, accessor(e), 0);\r\n
\t\t//}\r\n
\r\n
\t\ttracker = accessor(e);\r\n
\t\t//ignore common and scrolling moves\r\n
\t\tif (!action_mode) return;\r\n
\r\n
\t\t//multitouch\t\t\r\n
\t\tif (!tracker){\r\n
\t\t\tscroll_mode = true;\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\t//target changed - probably in scroll mode\r\n
\r\n
\t\tif (source.target != tracker.target || (Math.abs(source.pageX - tracker.pageX) > 5) || (Math.abs(source.pageY - tracker.pageY) > 5)){\r\n
\t\t\tscroll_mode = true;\r\n
\t\t\tclearTimeout(timer);\r\n
\t\t}\r\n
\r\n
\t});\r\n
\r\n
\tattachTouchEvent(this._els["dhx_cal_data"][0], "scroll", drag_cancel);\r\n
\tattachTouchEvent(this._els["dhx_cal_data"][0], "touchcancel", drag_cancel);\r\n
\tattachTouchEvent(this._els["dhx_cal_data"][0], "contextmenu", function(e){\r\n
\t\tif (action_mode){\r\n
\t\t\tif (e && e.preventDefault)\r\n
\t\t\t\te.preventDefault();\r\n
\t\t\t(e||event).cancelBubble = true;\r\n
\t\t\treturn false;\r\n
\t\t}\r\n
\t});\r\n
\tattachTouchEvent(this._els["dhx_cal_data"][0], names[1], function(e){\r\n
\t\tif (ignore(e)) return;\r\n
\t\t\r\n
\t\tvar fake_event;\r\n
\t\tdrag_mode = scroll_mode = false;\r\n
\t\taction_mode = true;\r\n
\t\tscheduler._temp_touch_block = true;\r\n
\t\tfake_event = tracker = accessor(e);\r\n
\r\n
\t\tif (!fake_event){\r\n
\t\t\tscroll_mode = true;\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\t//dbl click\r\n
\t\tvar now = new Date();\r\n
\r\n
\t\tif (!scroll_mode && !drag_mode && now - dblclicktime < 250){\r\n
\t\t\tscheduler._click.dhx_cal_data(fake_event);\r\n
\t\t\twindow.setTimeout(function(){\r\n
\t\t\t\tscheduler._on_dbl_click(fake_event);\r\n
\t\t\t}, 50);\r\n
\t\t\t\r\n
\t\t\tif (e.preventDefault)\r\n
\t\t\t\te.preventDefault();\r\n
\t\t\te.cancelBubble = true;\r\n
\t\t\tscheduler._block_next_stop = true;\r\n
\t\t\treturn false;\r\n
\t\t}\r\n
\t\tdblclicktime = now;\r\n
\r\n
\t\t//drag\r\n
\t\t\r\n
\t\tif (scroll_mode || drag_mode || !scheduler.config.touch_drag)\r\n
\t\t\treturn;\r\n
\r\n
\t\tvar actTask = scheduler._locate_event(document.activeElement);\r\n
\t\tvar fakeTask = scheduler._locate_event(fake_event.target);\r\n
\t\tvar sourceTask = source? scheduler._locate_event(source.target) : null;\r\n
\r\n
\t\tif(actTask && fakeTask && actTask == fakeTask && actTask != sourceTask)\r\n
\t\t{\r\n
\t\t\tif(e.preventDefault) {\r\n
\t\t\t\te.preventDefault();\r\n
\t\t\t}\r\n
\t\t\te.cancelBubble = true;\r\n
\t\t\tscheduler._ignore_next_click = false;\r\n
\t\t\tscheduler._click.dhx_cal_data(fake_event);\r\n
\t\t\tsource = fake_event;\r\n
\t\t\treturn false;\r\n
\t\t}\r\n
\t\t\r\n
\t\t//there is no target\r\n
\t\ttimer = setTimeout(function(){\r\n
\r\n
\t\t\tdrag_mode = true;\r\n
\t\t\tvar target = source.target;\r\n
\t\t\tif (target && target.className && target.className.indexOf("dhx_body") != -1)\r\n
\t\t\t\ttarget = target.previousSibling;\r\n
\r\n
\t\t\tscheduler._on_mouse_down(source, target);\r\n
\t\t\tif (scheduler._drag_mode && scheduler._drag_mode != "create"){\r\n
\t\t\t\t//var pos = -1;\r\n
\t\t\t\tscheduler.for_rendered(scheduler._drag_id, function(node, i) {\r\n
\t\t\t\t//\tpos = node.getBoundingClientRect().top;\r\n
\t\t\t\t\tnode.style.display=\'none\';\r\n
\t\t\t\t\tscheduler._rendered.splice(i, 1);\r\n
\t\t\t\t});\r\n
\t\t\t\t/*if (pos>=0){\r\n
\t\t\t\t\tvar step = scheduler.config.time_step;\r\n
\t\t\t\t\tscheduler._move_pos_shift = step* Math.round((fake_event.pageY - pos)*60/(scheduler.config.hour_size_px*step));\r\n
\t\t\t\t}*/\r\n
\t\t\t}\r\n
\r\n
\t\t\tif (scheduler.config.touch_tip)\r\n
\t\t\t\tscheduler._show_global_tip();\r\n
\t\t\tscheduler._on_mouse_move(source);\r\n
\t\t},scheduler.config.touch_drag);\r\n
\r\n
\t\tsource = fake_event;\r\n
\t});\r\n
\tfunction drag_cancel(e){\r\n
\t\tscheduler._hide_global_tip();\r\n
\t\tif (drag_mode){\r\n
\t\t\tscheduler._on_mouse_up( accessor(e||event) );\r\n
\t\t\tscheduler._temp_touch_block = false;\r\n
\t\t}\r\n
\t\tscheduler._drag_id = null;\r\n
\t\tscheduler._drag_mode=null;\r\n
\t\tscheduler._drag_pos=null;\r\n
\t\t\r\n
\t\tclearTimeout(timer);\r\n
\t\tdrag_mode = action_mode = false;\r\n
\t\tscroll_mode = true;\r\n
\t}\r\n
\tattachTouchEvent(this._els["dhx_cal_data"][0], names[2], function(e){\r\n
\t\tif (ignore(e)) return;\r\n
\r\n
\t\tif (!drag_mode)\r\n
\t\t\tcheck_direction_swipe(source, tracker, 200, 100);\r\n
\t\t\r\n
\t\tif (drag_mode)\r\n
\t\t\tscheduler._ignore_next_click = true;\r\n
\r\n
\t\tdrag_cancel(e);\r\n
\t\tif (scheduler._block_next_stop){\r\n
\t\t\tscheduler._block_next_stop = false;\r\n
\t\t\tif (e.preventDefault)\r\n
\t\t\t\te.preventDefault();\r\n
\t\t\te.cancelBubble = true;\r\n
\t\t\treturn false;\t\r\n
\t\t}\r\n
\t});\t\r\n
\r\n
\tdhtmlxEvent(document.body, names[2], drag_cancel);\r\n
};\r\n
\r\n
scheduler._show_global_tip = function(){\r\n
\tscheduler._hide_global_tip();\r\n
\r\n
\tvar toptip = scheduler._global_tip = document.createElement("DIV");\r\n
\ttoptip.className=\'dhx_global_tip\';\r\n
\r\n
\tscheduler._update_global_tip(1);\r\n
\r\n
\tdocument.body.appendChild(toptip);\r\n
};\r\n
scheduler._update_global_tip = function(init){\r\n
\tvar toptip = scheduler._global_tip;\r\n
\tif (toptip){\r\n
\t\tvar time = "";\r\n
\t\tif (scheduler._drag_id && !init){\r\n
\t\t\tvar ev = scheduler.getEvent(scheduler._drag_id);\r\n
\t\t\tif (ev)\r\n
\t\t\t\ttime = "<div>" + (ev._timed ? scheduler.templates.event_header(ev.start_date, ev.end_date, ev):scheduler.templates.day_date(ev.start_date, ev.end_date, ev)) + "</div>";\r\n
\t\t}\r\n
\r\n
\t\tif (scheduler._drag_mode == "create" || scheduler._drag_mode == "new-size")\r\n
\t\t\ttoptip.innerHTML = (scheduler.locale.drag_to_create || "Drag to create")+time;\r\n
\t\telse\r\n
\t\t\ttoptip.innerHTML = (scheduler.locale.drag_to_move || "Drag to move")+time;\r\n
\t}\r\n
};\r\n
scheduler._hide_global_tip = function(){\r\n
\tvar toptip = scheduler._global_tip;\r\n
\tif (toptip && toptip.parentNode){\r\n
\t\ttoptip.parentNode.removeChild(toptip);\r\n
\t\tscheduler._global_tip = 0;\r\n
\t}\r\n
};\r\n
\r\n
scheduler._dp_init=function(dp){\r\n
\tdp._methods=["_set_event_text_style","","changeEventId","_dp_hook_delete"];\r\n
\t\r\n
\tthis._dp_hook_delete = function(id){\r\n
\t\treturn this.deleteEvent(id, true);\r\n
\t};\r\n
\tthis.attachEvent("onEventAdded",function(id){\r\n
\t\tif (!this._loading && this._validId(id))\r\n
\t\t\tdp.setUpdated(id,true,"inserted");\r\n
\t});\r\n
\tthis.attachEvent("onConfirmedBeforeEventDelete", function(id){\r\n
\t\tif (!this._validId(id)) return;\r\n
\t\tvar z=dp.getState(id);\r\n
        \r\n
\t\tif (z=="inserted" || this._new_event) {  dp.setUpdated(id,false);\t\treturn true; }\r\n
\t\tif (z=="deleted")  return false;\r\n
    \tif (z=="true_deleted")  return true;\r\n
    \t\r\n
\t\tdp.setUpdated(id,true,"deleted");\r\n
      \treturn false;\r\n
\t});\r\n
\tthis.attachEvent("onEventChanged",function(id){\r\n
\t\tif (!this._loading && this._validId(id))\r\n
\t\t\tdp.setUpdated(id,true,"updated");\r\n
\t});\r\n
\t\r\n
\tdp._getRowData=function(id,pref){\r\n
\t\tvar ev=this.obj.getEvent(id);\r\n
\t\tvar data = {};\r\n
\t\t\r\n
\t\tfor (var a in ev){\r\n
\t\t\tif (a.indexOf("_") === 0) continue;\r\n
\t\t\tif (ev[a] && ev[a].getUTCFullYear) //not very good, but will work\r\n
\t\t\t\tdata[a] = this.obj.templates.xml_format(ev[a]);\r\n
\t\t\telse\r\n
\t\t\t\tdata[a] = ev[a];\r\n
\t\t}\r\n
\t\t\r\n
\t\treturn data;\r\n
\t};\r\n
\tdp._clearUpdateFlag=function(){};\r\n
\t\r\n
\tdp.attachEvent("insertCallback", scheduler._update_callback);\r\n
\tdp.attachEvent("updateCallback", scheduler._update_callback);\r\n
\tdp.attachEvent("deleteCallback", function(upd, id) {\r\n
\t\tthis.obj.setUserData(id, this.action_param, "true_deleted");\r\n
\t\tthis.obj.deleteEvent(id);\r\n
\t});\r\n
\t\t\r\n
};\r\n
\r\n
scheduler._validId=function(id){\r\n
\treturn true;\r\n
};\r\n
\r\n
scheduler.setUserData=function(id,name,value){\r\n
\tif (id)\r\n
\t\tthis.getEvent(id)[name]=value;\r\n
\telse\r\n
\t\tthis._userdata[name]=value;\r\n
};\r\n
scheduler.getUserData=function(id,name){\r\n
\treturn id?this.getEvent(id)[name]:this._userdata[name];\r\n
};\r\n
scheduler._set_event_text_style=function(id,style){\r\n
\tthis.for_rendered(id,function(r){\r\n
\t\tr.style.cssText+=";"+style;\r\n
\t});\r\n
\tvar ev = this.getEvent(id);\r\n
\tev["_text_style"]=style;\r\n
\tthis.event_updated(ev);\r\n
};\r\n
\r\n
scheduler._update_callback = function(upd,id){\r\n
\tvar data\t\t=\tscheduler._xmlNodeToJSON(upd.firstChild);\r\n
\tdata.text\t\t=\tdata.text||data._tagvalue;\r\n
\tdata.start_date\t=\tscheduler.templates.xml_date(data.start_date);\r\n
\tdata.end_date\t=\tscheduler.templates.xml_date(data.end_date);\r\n
\t\r\n
\tscheduler.addEvent(data);\r\n
};\r\n
scheduler._skin_settings = {\r\n
\tfix_tab_position: [1,0],\r\n
\tuse_select_menu_space: [1,0],\r\n
\twide_form: [1,0],\r\n
\r\n
\thour_size_px: [44,42],\r\n
\tdisplayed_event_color: ["#ff4a4a", "ffc5ab"],\r\n
\tdisplayed_event_text_color: ["#ffef80", "7e2727"]\r\n
};\r\n
\r\n
scheduler._skin_xy = {\r\n
\tlightbox_additional_height: [90,50],\r\n
\tnav_height: [59,22],\r\n
\tbar_height: [24,20]\r\n
};\r\n
\r\n
scheduler._configure = function(col, data, skin){\r\n
\tfor (var key in data)\r\n
\t\tif (typeof col[key] == "undefined")\r\n
\t\t\tcol[key] = data[key][skin];\r\n
};\r\n
scheduler._skin_init = function(){\r\n
\tif (!scheduler.skin){\r\n
\t\tvar links = document.getElementsByTagName("link");\r\n
\t\tfor (var i = 0; i < links.length; i++) {\r\n
\t\t\tvar res = links[i].href.match("dhtmlxscheduler_([a-z]+).css");\r\n
\t\t\tif (res){\r\n
\t\t\t\tscheduler.skin = res[1];\r\n
\t\t\t\tbreak;\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
\r\n
\t\r\n
\t\r\n
\tvar set = 0;\r\n
\tif (scheduler.skin && (scheduler.skin === "classic" || scheduler.skin === "glossy")) set = 1;\r\n
\r\n
\t//apply skin related settings\r\n
\tthis._configure(scheduler.config, scheduler._skin_settings, set);\r\n
\tthis._configure(scheduler.xy, scheduler._skin_xy, set);\r\n
\r\n
\tif (scheduler.skin === "flat"){\r\n
\t\tscheduler.xy.scale_height = 35;\r\n
\t\tscheduler.templates.hour_scale = function(date){\r\n
\t\t\tvar min = date.getMinutes();\r\n
\t\t\tmin = min < 10 ? "0"+min : min;\r\n
\t\t\tvar html = "<span class=\'dhx_scale_h\'>"+ date.getHours() +"</span>"+\r\n
\t\t\t\t"<span class=\'dhx_scale_m\'>&nbsp;"+ min +"</span>";\r\n
\t\t\treturn html;\r\n
\t\t};\r\n
\t}\r\n
\r\n
\t//classic skin need not any further customization\r\n
\tif (set) return;\r\n
\t\r\n
\t\r\n
\tvar minic = scheduler.config.minicalendar;\r\n
\tif (minic) minic.padding = 14;\r\n
\r\n
\tscheduler.templates.event_bar_date = function(start,end,ev) {\r\n
\t\treturn "• <b>"+scheduler.templates.event_date(start)+"</b> ";\r\n
\t};\r\n
\r\n
\t//scheduler._lightbox_template="<div class=\'dhx_cal_ltitle\'><span class=\'dhx_mark\'>&nbsp;</span><span class=\'dhx_time\'></span><span class=\'dhx_title\'></span><div class=\'dhx_close_icon\'></div></div><div class=\'dhx_cal_larea\'></div>";\r\n
\tscheduler.attachEvent("onTemplatesReady", function() {\r\n
\r\n
\t\tvar date_to_str = scheduler.date.date_to_str("%d");\r\n
\t\tif(!scheduler.templates._old_month_day){\r\n
\t\t\tscheduler.templates._old_month_day = scheduler.templates.month_day;\r\n
\t\t}\r\n
\t\tvar old_month_day = scheduler.templates._old_month_day;\r\n
\t\tscheduler.templates.month_day = function(date) {\r\n
\t\t\tif (this._mode == "month") {\r\n
\t\t\t\tvar label = date_to_str(date);\r\n
\t\t\t\tif (date.getDate() == 1) {\r\n
\t\t\t\t\tlabel = scheduler.locale.date.month_full[date.getMonth()] + " " + label;\r\n
\t\t\t\t}\r\n
\t\t\t\tif (+date == +scheduler.date.date_part(new Date())) {\r\n
\t\t\t\t\tlabel = scheduler.locale.labels.dhx_cal_today_button + " " + label;\r\n
\t\t\t\t}\r\n
\t\t\t\treturn label;\r\n
\t\t\t} else {\r\n
\t\t\t\treturn old_month_day.call(this, date);\r\n
\t\t\t}\r\n
\t\t};\r\n
\r\n
\r\n
\t\tif (scheduler.config.fix_tab_position){\r\n
\t\t\tvar navline_divs = scheduler._els["dhx_cal_navline"][0].getElementsByTagName(\'div\');\r\n
\t\t\tvar minical = null;\r\n
\t\t\tvar tabs = [];\r\n
\t\t\tvar last = 211;\r\n
\t\t\tfor (var i=0; i<navline_divs.length; i++) {\r\n
\t\t\t\tvar div = navline_divs[i];\r\n
\t\t\t\tvar name = div.getAttribute("name");\r\n
\t\t\t\tif (name) { // mode tab\r\n
\t\t\t\t\tdiv.style.right = "auto";\r\n
\t\t\t\t\tswitch (name) {\r\n
\t\t\t\t\t\tcase "day_tab":\r\n
\t\t\t\t\t\t\tdiv.style.left = "14px";\r\n
\t\t\t\t\t\t\tdiv.className += " dhx_cal_tab_first";\r\n
\t\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t\tcase "week_tab":\r\n
\t\t\t\t\t\t\tdiv.style.left = "75px";\r\n
\t\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t\tcase "month_tab":\r\n
\t\t\t\t\t\t\tdiv.style.left = "136px";\r\n
\t\t\t\t\t\t\tdiv.className += " dhx_cal_tab_last";\r\n
\t\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t\tdefault:\r\n
\t\t\t\t\t\t\tdiv.style.left = last+"px";\r\n
\t\t\t\t\t\t\tdiv.className += " dhx_cal_tab_standalone";\r\n
\t\t\t\t\t\t\tlast = last + 14 + div.offsetWidth;\r\n
\t\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}else{\r\n
\t\t\t\t\tif((div.className || "").indexOf("dhx_minical_icon") === 0 &&\r\n
\t\t\t\t\t\tdiv.parentNode == scheduler._els["dhx_cal_navline"][0]){\r\n
\t\t\t\t\t\t// if default minicalendar icon\r\n
\t\t\t\t\t\tminical = div;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t}\r\n
\r\n
\t\t\tif(minical){\r\n
\t\t\t\tminical.style.left = last+"px";\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t});\r\n
\tscheduler._skin_init = function(){};\r\n
};\r\n
\r\n
\r\n
if (window.jQuery){\r\n
\r\n
(function( $ ){\r\n
\r\n
\tvar methods = [];\r\n
\t$.fn.dhx_scheduler = function(config){\r\n
\t\tif (typeof(config) === \'string\') {\r\n
\t\t\tif (methods[config] ) {\r\n
\t\t\t\treturn methods[config].apply(this, []);\r\n
\t\t\t}else {\r\n
\t\t\t\t$.error(\'Method \' +  config + \' does not exist on jQuery.dhx_scheduler\');\r\n
\t\t\t}\r\n
\t\t} else {\r\n
\t\t\tvar views = [];\r\n
\t\t\tthis.each(function() {\r\n
\t\t\t\tif (this && this.getAttribute){\r\n
\t\t\t\t\tif (!this.getAttribute("dhxscheduler")){\r\n
\t\t\t\t\t\tfor (var key in config)\r\n
\t\t\t\t\t\t\tif (key!="data")\r\n
\t\t\t\t\t\t\t\tscheduler.config[key] = config[key];\r\n
\r\n
\t\t\t\t\t\tif (!this.getElementsByTagName("div").length){\r\n
\t\t\t\t\t\t\tthis.innerHTML = \'<div class="dhx_cal_navline"><div class="dhx_cal_prev_button">&nbsp;</div><div class="dhx_cal_next_button">&nbsp;</div><div class="dhx_cal_today_button"></div><div class="dhx_cal_date"></div><div class="dhx_cal_tab" name="day_tab" style="right:204px;"></div><div class="dhx_cal_tab" name="week_tab" style="right:140px;"></div><div class="dhx_cal_tab" name="month_tab" style="right:76px;"></div></div><div class="dhx_cal_header"></div><div class="dhx_cal_data"></div>\';\r\n
\t\t\t\t\t\t\tthis.className += " dhx_cal_container";\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t\tscheduler.init(this, scheduler.config.date, scheduler.config.mode);\r\n
\t\t\t\t\t\tif (config.data)\r\n
\t\t\t\t\t\t\tscheduler.parse(config.data);\r\n
\r\n
\t\t\t\t\t\tviews.push(scheduler);\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t});\r\n
\r\n
\t\t\tif (views.length === 1) return views[0];\r\n
\t\t\treturn views;\r\n
\t\t}\r\n
\t};\r\n
\t\r\n
\r\n
\t\r\n
\r\n
})(jQuery);\r\n
\r\n
}\r\n
(function(){\r\n
\r\n
\tvar setCurrentView = scheduler.setCurrentView,\r\n
\t\tupdateView = scheduler.updateView;\r\n
\tvar update_view_timer = null,\r\n
\t\tcurr_view_timer = null;\r\n
\r\n
\tvar lazy_setCurrentView = function(date, mode){\r\n
\t\tvar self = this;\r\n
\t\twindow.clearTimeout(curr_view_timer);\r\n
\t\twindow.clearTimeout(update_view_timer);\r\n
\r\n
\t\tupdateFlags(this, date, mode);\r\n
\r\n
\t\tcurr_view_timer = setTimeout(function(){\r\n
\r\n
\t\t\tif (!self.callEvent("onBeforeViewChange", [self._mode, self._date, mode || self._mode, date || self._date])) return;\r\n
\t\t\tupdateView.call(self, date, mode);\r\n
\t\t\tself.callEvent("onViewChange", [self._mode, self._date]);\r\n
\r\n
\t\t\twindow.clearTimeout(update_view_timer);\r\n
\t\t\tcurr_view_timer = 0;\r\n
\t\t}, scheduler.config.delay_render);\r\n
\t};\r\n
\tvar lazy_updateView = function(date, mode){\r\n
\t\tvar self = this,\r\n
\t\t\tars = arguments;\r\n
\r\n
\t\tupdateFlags(this, date, mode);\r\n
\r\n
\t\twindow.clearTimeout(update_view_timer);\r\n
\t\tupdate_view_timer = setTimeout(function(){\r\n
\t\t\tif(curr_view_timer)\r\n
\t\t\t\treturn;\r\n
\r\n
\t\t\tupdateView.apply(self, ars);\r\n
\t\t}, scheduler.config.delay_render);\r\n
\t};\r\n
\tfunction updateFlags(scheduler, date, mode){\r\n
\t\tif(date)\r\n
\t\t\tscheduler._date = date;\r\n
\t\tif(mode)\r\n
\t\t\tscheduler._mode = mode;\r\n
\r\n
\t}\r\n
\tscheduler.attachEvent("onSchedulerReady", function(){\r\n
\t\tif(scheduler.config.delay_render){\r\n
\t\t\tscheduler.setCurrentView = lazy_setCurrentView;\r\n
\t\t\tscheduler.updateView = lazy_updateView;\r\n
\t\t}else{\r\n
\t\t\tscheduler.setCurrentView = setCurrentView;\r\n
\t\t\tscheduler.updateView = updateView;\r\n
\t\t}\r\n
\t});\r\n
\r\n
})();

]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <none/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
