<tal:block xmlns:tal="http://xml.zope.org/namespaces/tal"
           xmlns:metal="http://xml.zope.org/namespaces/metal"
           xmlns:i18n="http://xml.zope.org/namespaces/i18n">
  <tal:block tal:condition="here/portal_skins/updateSkinCookie | nothing"
             tal:define="dummy here/setupCurrentSkin;" />
  <tal:block tal:define="response request/RESPONSE;
             mtool here/portal_membership;
             isAnon mtool/isAnonymousUser|nothing;">
    <tal:block tal:condition="isAnon">
      <tal:block tal:define="dummy python: response.expireCookie('__ac', path='/');
                 is_user_account_blocked python: request.get('is_user_account_blocked', False);
                 is_user_account_password_expired python: request.get('is_user_account_password_expired', False);">

        <!-- Login and/or password is incorrect. -->
        <tal:block tal:condition="python: not is_user_account_blocked and not is_user_account_password_expired">
          <tal:block tal:define="url python: '%s/login_form?portal_status_message=%s' % (here.absolute_url(), here.Base_translateString('Login and/or password is incorrect.'));
                                 url python: request.get('came_from') and  '%s&amp;came_from=%s' % (url, request['came_from']) or url;
                                 dummy python: response.redirect(url);"/>
        </tal:block>

        <!-- Login is blocked. -->
        <tal:block tal:condition="is_user_account_blocked">
          <tal:block tal:define="url python: '%s/login_form?portal_status_message=%s' % (here.absolute_url(), here.Base_translateString('Account is blocked.'));
                                 url python: request.get('came_from') and  '%s&amp;came_from=%s' % (url, request['came_from']) or url;
                                 dummy python: response.redirect(url);"/>
        </tal:block>

        <!-- Password is expired permanently. -->
        <tal:block tal:condition="is_user_account_password_expired">
          <tal:block tal:define="message python: {False: 'Password is expired.',
                                                  True: 'Password is expired. You will soon receive an email with details about how you can recover it.'}.get(here.getPortalObject().portal_preferences.isPreferredSystemRecoverExpiredPassword());
                                 url python: '%s/login_form?portal_status_message=%s' % (here.absolute_url(), here.Base_translateString(message));
                                 url python: request.get('came_from') and  '%s&amp;came_from=%s' % (url, request['came_from']) or url;
                                 dummy python: response.redirect(url);"/>
        </tal:block>

      </tal:block>
    </tal:block>
    <tal:block tal:condition="not: isAnon"
               tal:define="is_user_account_password_expired_expire_date python:request.get('is_user_account_password_expired_expire_date', 0);">
      
      <!-- Password will expire soon just warn user ?  -->
      <tal:block tal:condition="is_user_account_password_expired_expire_date">
         <tal:block tal:define="came_from python: request.get('came_from') or here.absolute_url();
                                dummy python: response.redirect('%s/ERP5Site_viewNewPersonCredentialUpdateDialog?portal_status_message=%s&amp;cancel_url=%s' %(came_from, here.Base_translateString('Your password will expire at %s. You are advised to change it as soon as possible.' %context.Base_FormatDate(is_user_account_password_expired_expire_date,  hour_minute=1)), came_from));" />
      </tal:block>

      <tal:block tal:condition="not: is_user_account_password_expired_expire_date">
        <tal:block tal:define="came_from python: request.get('came_from') or here.absolute_url();
                               dummy python: response.redirect(came_from);" />
      </tal:block>

    </tal:block>
  </tal:block>
</tal:block>