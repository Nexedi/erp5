<office:document-content
          xmlns:draw='urn:oasis:names:tc:opendocument:xmlns:drawing:1.0'
          xmlns:office='urn:oasis:names:tc:opendocument:xmlns:office:1.0'
          xmlns:text='urn:oasis:names:tc:opendocument:xmlns:text:1.0'
          xmlns:ooo='http://openoffice.org/2004/office'
          xmlns:number='urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0'
          xmlns:dc='http://purl.org/dc/elements/1.1/'
          xmlns:meta='urn:oasis:names:tc:opendocument:xmlns:meta:1.0'
          xmlns:table='urn:oasis:names:tc:opendocument:xmlns:table:1.0'
          xmlns:dr3d='urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0'
          xmlns:fo='urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0'
          xmlns:style='urn:oasis:names:tc:opendocument:xmlns:style:1.0'
          xmlns:xforms='http://www.w3.org/2002/xforms'
          xmlns:form='urn:oasis:names:tc:opendocument:xmlns:form:1.0'
          xmlns:script='urn:oasis:names:tc:opendocument:xmlns:script:1.0'
          xmlns:ooow='http://openoffice.org/2004/writer'
          xmlns:svg='urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0'
          xmlns:chart='urn:oasis:names:tc:opendocument:xmlns:chart:1.0'
          xmlns:dom='http://www.w3.org/2001/xml-events'
          xmlns:xlink='http://www.w3.org/1999/xlink'
          xmlns:xsd='http://www.w3.org/2001/XMLSchema'
          xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
          xmlns:oooc='http://openoffice.org/2004/calc'
          xmlns:math='http://www.w3.org/1998/Math/MathML'
          xmlns:tal='http://xml.zope.org/namespaces/tal'
          xmlns:i18n='http://xml.zope.org/namespaces/i18n'
          xmlns:metal='http://xml.zope.org/namespaces/metal'
          tal:attributes='dummy python:request.RESPONSE.setHeader("Content-Type", "text/html;; charset=utf-8")'
          tal:define="render_prefix render_prefix|nothing;
                      editable_mode request/editable_mode | nothing;
                      dummy python: editable_mode is None and here.REQUEST.set('editable_mode', 0);"
          office:version='1.0'>

  <office:scripts/>
  <office:font-face-decls>
    <style:font-face svg:font-family="'DejaVu Sans'" style:font-family-generic='roman' style:name='DejaVu Sans' style:font-pitch='variable'/>
    <style:font-face svg:font-family="'DejaVu Sans'" style:font-family-generic='swiss' style:name='DejaVu Sans1' style:font-pitch='variable'/>
    <style:font-face svg:font-family="'DejaVu Sans'" style:font-family-generic='system' style:name='DejaVu Sans2' style:font-pitch='variable'/>
  </office:font-face-decls>
  <office:automatic-styles>
    <style:style style:family='table' style:name='field-table'>
      <style:table-properties style:may-break-between-rows='false' table:align='margins' style:width='29.351cm'/>
    </style:style>
    <style:style style:family='table-column' style:name='field-table.A'>
      <style:table-column-properties style:rel-column-width='32767*' style:column-width='14.676cm'/>
    </style:style>
    <style:style style:family='table-column' style:name='field-table.B'>
      <style:table-column-properties style:rel-column-width='32768*' style:column-width='14.676cm'/>
    </style:style>
    <style:style style:family='table-cell' style:name='field-table.A1'>
      <style:table-cell-properties fo:padding='0.097cm' fo:border-right='0.002cm solid #000000' fo:border-top='0.002cm solid #000000' fo:background-color='#e6e6e6' fo:border-left='0.002cm solid #000000' fo:border-bottom='0.002cm solid #000000'>
        <style:background-image/>
      </style:table-cell-properties>
    </style:style>
    <style:style style:family='table-cell' style:name='field-table.B1'>
      <style:table-cell-properties fo:padding='0.097cm' fo:border='0.002cm solid #000000'/>
    </style:style>
    <style:style style:family='table-cell' style:name='field-table.A2'>
      <style:table-cell-properties fo:padding='0.097cm' fo:border-right='none' fo:border-top='none' fo:background-color='#e6e6e6' fo:border-left='0.002cm solid #000000' fo:border-bottom='0.002cm solid #000000'>
        <style:background-image/>
      </style:table-cell-properties>
    </style:style>
    <style:style style:family='table-cell' style:name='field-table.B2'>
      <style:table-cell-properties fo:border-left='0.002cm solid #000000' fo:border-right='0.002cm solid #000000' fo:border-bottom='0.002cm solid #000000' fo:padding='0.097cm' fo:border-top='none'/>
    </style:style>
    <style:style style:family='table' style:name='listbox-table'>
      <style:table-properties style:may-break-between-rows='true' table:align='margins' style:shadow='none' style:width='29.351cm'/>
    </style:style>
    <style:style style:family='table-column' style:name='listbox-table.A'>
      <style:table-column-properties style:rel-column-width='21845*' style:column-width='9.784cm'/>
    </style:style>
    <style:style style:family='table-column' style:name='listbox-table.B'>
      <style:table-column-properties style:rel-column-width='21848*' style:column-width='9.784cm'/>
    </style:style>
    <style:style style:family='table-column' style:name='listbox-table.C'>
      <style:table-column-properties style:rel-column-width='21842*' style:column-width='9.783cm'/>
    </style:style>
    <style:style style:family='table-cell' style:name='listbox-table.A1'>
      <style:table-cell-properties fo:padding='0.097cm' fo:border-right='0.002cm solid #000000' fo:border-top='0.002cm solid #000000' fo:background-color='#e6e6e6' fo:border-left='0.002cm solid #000000' fo:border-bottom='0.002cm solid #000000'>
        <style:background-image/>
      </style:table-cell-properties>
    </style:style>
    <style:style style:family='table-cell' style:name='listbox-table.C1'>
      <style:table-cell-properties fo:padding='0.097cm' fo:background-color='#b3b3b3' fo:border='0.002cm solid #000000'>
        <style:background-image/>
      </style:table-cell-properties>
    </style:style>
    <style:style style:family='table-cell' style:name='listbox-table.A2'>
      <style:table-cell-properties fo:border-left='0.002cm solid #000000' fo:border-right='none' fo:border-bottom='0.002cm solid #000000' fo:padding='0.097cm' fo:border-top='none'/>
    </style:style>
    <style:style style:family='table-cell' style:name='listbox-table.C2'>
      <style:table-cell-properties fo:border-left='0.002cm solid #000000' fo:border-right='0.002cm solid #000000' fo:border-bottom='0.002cm solid #000000' fo:padding='0.097cm' fo:border-top='none'/>
    </style:style>
    <style:style style:family='table-cell' style:name='listbox-table.A3'>
      <style:table-cell-properties fo:padding='0.097cm' fo:border-right='none' fo:border-top='none' fo:background-color='#e6e6e6' fo:border-left='0.002cm solid #000000' fo:border-bottom='0.002cm solid #000000'>
        <style:background-image/>
      </style:table-cell-properties>
    </style:style>
    <style:style style:family='table-cell' style:name='listbox-table.C3'>
      <style:table-cell-properties fo:padding='0.097cm' fo:border-right='0.002cm solid #000000' fo:border-top='none' fo:background-color='#e6e6e6' fo:border-left='0.002cm solid #000000' fo:border-bottom='0.002cm solid #000000'>
        <style:background-image/>
      </style:table-cell-properties>
    </style:style>
    <style:style style:name="inline-graphic" style:family="graphic" style:parent-style-name="Graphics">
       <style:graphic-properties style:run-through="foreground" style:wrap="none" style:number-wrapped-paragraphs="no-limit" style:wrap-contour="false" style:horizontal-pos="center" style:horizontal-rel="paragraph" style:mirror="none" fo:clip="rect(0cm 0cm 0cm 0cm)" draw:luminance="0%" draw:contrast="0%" draw:red="0%" draw:green="0%" draw:blue="0%" draw:gamma="100%" draw:color-inversion="false" draw:image-opacity="100%" draw:color-mode="standard"/>
    </style:style>
  </office:automatic-styles>
  <office:body>
    <office:text>
      <office:forms form:automatic-focus="false" form:apply-design-mode="false"/>
      <text:sequence-decls>
        <text:sequence-decl text:display-outline-level='0' text:name='Illustration'/>
        <text:sequence-decl text:display-outline-level='0' text:name='Table'/>
        <text:sequence-decl text:display-outline-level='0' text:name='Text'/>
        <text:sequence-decl text:display-outline-level='0' text:name='Drawing'/>
      </text:sequence-decls>
      <tal:block metal:define-macro="form_layout"
                 tal:define="dummy python: request.set('here', here);
                             preference_tool python:here.getPortalObject().portal_preferences;
                             render_text python: lambda txt, attr_dict={}: context.Base_viewODTStyleFieldLibrary.my_title.render_odt(value=txt,
                                                                                                                      REQUEST=request,
                                                                                                                      attr_dict=attr_dict);">
        <!-- standard groups -->
        <tal:block tal:repeat="group python: [g for g in form.get_groups() if g not in ('bottom', 'center', 'hidden')]">
          <tal:block tal:define="field_list python: form.get_fields_in_group(group)">
            <tal:block tal:condition="field_list">
              <table:table table:style-name='field-table' table:name='field-table'>
                <table:table-column table:style-name='field-table.A'/>
                <table:table-column table:style-name='field-table.A'/>
                <tal:block tal:repeat="field field_list">
                  <tal:block tal:define="field_type python: field.meta_type == 'ProxyField' and field.getRecursiveTemplateField().meta_type or field.meta_type">
                    <tal:block tal:condition="python:field_type not in ('HiddenStringField', 'FileField')">
                      <table:table-row>
                      <table:table-cell table:style-name='field-table.A1' office:value-type='string'>
                        <text:p tal:replace="structure python:render_text(here.Base_translateString(field.get_value('title')),
                                              {'{urn:oasis:names:tc:opendocument:xmlns:text:1.0}style-name': 'field-label'})"/>
                      </table:table-cell>
                      <tal:block tal:define="item_list python:field.has_value('items') and field.get_value('items') or None">
                        <table:table-cell table:style-name='field-table.B1' 
                                      office:value-type='string'
                                      tal:define="value python: field.get_value('default')">
                          <tal:block tal:condition="python: field_type not in ('ImageField','OOoChart' )">
                            <text:p tal:replace="structure python:field.render_odt(REQUEST=request, attr_dict={'{urn:oasis:names:tc:opendocument:xmlns:text:1.0}style-name': 'field-content'})"
                                    />
                          </tal:block>
                          <!-- With this max_size, pictures and graph stay in a table cell-->
                          <tal:block tal:define="global max_size python:9;"/>
                          <tal:block tal:condition="python: field_type == 'ImageField'">
                            <text:p text:style-name='field-content'
                                    tal:define="preferred_width python: preference_tool.getPreference('preferred_%s_image_width' % (field.get_value('image_display')), 100);
                                    width python:(preferred_width / 20.) &lt; max_size and (preferred_width / 20.) or max_size;
                                    field_value python: field.get_value('default')">
                              <tal:block tal:condition="field_value">
                                <office:include_img tal:attributes="width width;
                                path python: '/'.join(request.physicalPathFromURL(field_value));"
                                style="inline-graphic"/>
                              </tal:block>
                            </text:p>
                          </tal:block>
                          <tal:block tal:condition="python: field_type == 'OOoChart'">
                            <tal:block tal:define="display python: field.get_value('image_display');
                            preferred_method_height_id python: 'getPreferred%sImageHeight' % (display.capitalize());
                            preferred_method_width_id python: 'getPreferred%sImageWidth'
                                          % (display.capitalize());
                            width python:int((getattr(preference_tool, preferred_method_width_id)()));
                            height python:int((getattr(preference_tool, preferred_method_height_id)()));
                            width_graph python:(width *0.02  &lt; max_size and width*0.02  ) or max_size;
                            height_graph python:(height*0.02  &lt; max_size and height*0.02  ) or max_size;"
                            tal:condition="display">
                              <text:p text:style-name='field-content'>
                                <draw:frame draw:style-name='gr1'
                                      draw:layer='layout'
                                      text:anchor-type="paragraph"
                                      tal:attributes="svg:height python:str(height_graph)+'cm';
                                      svg:width python:str(width_graph)+'cm'"
                                      tal:content="structure python: field.render_odf(render_prefix=render_prefix)">
                                </draw:frame>
                              </text:p>
                            </tal:block>
                          </tal:block>
                        </table:table-cell>
                      </tal:block>
                    </table:table-row>
                  </tal:block>
                </tal:block>
              </tal:block>
             </table:table>
            <text:p></text:p>
          </tal:block>
        </tal:block>
      </tal:block>

      <!-- center group -->
      <tal:block tal:define="field_list python: form.get_fields_in_group('center')">
        <tal:block tal:repeat="field field_list">
          <tal:block tal:define="field_type python: field.meta_type == 'ProxyField' and field.getRecursiveTemplateField().meta_type or field.meta_type">
            <tal:block tal:condition="python: field_type not in ('ImageField','OOoChart' )">
              <text:p tal:replace="structure python:render_text(here.Base_translateString(field.get_value('title')),
                                              {'{urn:oasis:names:tc:opendocument:xmlns:text:1.0}style-name': 'field-label-center'})"/>
              <text:p tal:replace="structure python:field.render_odt(REQUEST=request, attr_dict={'{urn:oasis:names:tc:opendocument:xmlns:text:1.0}style-name': 'field-content-center'})"/>
            </tal:block>
            <tal:block tal:condition="python: field_type == 'ImageField'">
              <text:p text:style-name='field-label-center' i18n:domain="ui"
                      i18n:translate=""
                      tal:content="python: field.get_value('title')"/>

              <text:p text:style-name='field-content-center'
                      tal:define="preferred_width python: preference_tool.getPreference('preferred_%s_image_width' % (field.get_value('image_display')));">
                <office:include_img style="inline-graphic"
                                    tal:attributes="width python: (preferred_width or 100) / 20.;
                                    path python: '/'.join(request.physicalPathFromURL(field.get_value('default')));"/>
              </text:p>
            </tal:block>
            <tal:block tal:condition="python: field_type == 'OOoChart'">
              <text:p text:style-name='field-label-center' i18n:domain="ui" i18n:translate=""
              tal:content="python: field.get_value('title')"/>
              <text:p text:style-name='standard'/>
              <tal:block tal:define="display python: field.get_value('image_display') "
                 tal:condition="display">
                <tal:block tal:define="preferred_method_height_id python: 'getPreferred%sImageHeight' % (display.capitalize());
                   preferred_method_width_id python: 'getPreferred%sImageWidth'
                   % (display.capitalize());
                   " >
                  <tal:block tal:define="global height python:'%scm' % (int((getattr(preference_tool, preferred_method_height_id)())) * 0.020);
                             global width  python: '%scm' % (int((getattr(preference_tool, preferred_method_width_id)())) * 0.020 );"/>
                  </tal:block>
                </tal:block>
                <text:p text:style-name='field-content-center'>
                  <draw:frame draw:style-name='inline-graphic'
                              draw:layer='layout'
                              text:anchor-type="paragraph"
                              tal:attributes="svg:height python:height;
                              svg:width python:width">
                    <tal:block tal:replace="structure python: field.render_odf(render_prefix=render_prefix)"/>
                  </draw:frame>
                </text:p>

              </tal:block>
            </tal:block>
          </tal:block>
        </tal:block>

        <!-- bottom group -->
        <tal:block tal:define="field_list python: form.get_fields_in_group('bottom')">
          <tal:block tal:repeat="field field_list">
            <tal:block tal:define="field_type python: field.meta_type == 'ProxyField' and field.getRecursiveTemplateField().meta_type or field.meta_type">
              <tal:block tal:condition="python: field_type == 'MatrixBox'">
                <tal:block  tal:define="matrixbox python:field;">
                  <div metal:use-macro="here/matrixbox_odt_macro/macros/matrixbox" />
                </tal:block>
              </tal:block>
              <tal:block tal:condition="python: field_type == 'ListBox'">
                <tal:block  tal:define="listbox python:field;" >
                  <div metal:use-macro="here/listbox_odt_macro/macros/listbox" />
                </tal:block>
              </tal:block>
              <tal:block tal:condition="python: field_type not in ('ImageField', 'OOoChart')">
                <tal:block tal:define="item_list python:field.has_value('items') and field.get_value('items') or None;
                                       value python: field.get_value('default')">
                  <tal:block tal:condition="python: same_type(value,[]) or same_type(value,())">
                    <tal:block tal:repeat="item value">
                      <text:p text:style-name='field-content-center'
                           tal:content="python: str(item)"
                           tal:condition="not:item_list"/>
                      <text:p text:style-name='field-content'
                           tal:content="python: [i[0] for i in item_list if i[1] == item][0]"
                           tal:on-error="item"
                           tal:condition="item_list" />
                    </tal:block>
                  </tal:block>
                  <tal:block tal:condition="python: (not (same_type(value,[]) or same_type(value,()) )) and (value != None)">
                    <tal:block tal:condition="python: field_type=='EditorField' and field.get_value('text_editor')=='fck_editor'">
                        <text:p tal:replace="structure python:field.render_odt(value=here.getPortalObject().portal_transforms.convertToData('text/plain', value), REQUEST=request, attr_dict={'{urn:oasis:names:tc:opendocument:xmlns:text:1.0}style-name': 'field-content-center'})"/>
                    </tal:block>
                    <tal:block tal:condition="python: field_type in ('EditorField',) and field.get_value('text_editor')=='text_area'">
                      <text:p tal:replace="structure python:field.render_odt(REQUEST=request, attr_dict={'{urn:oasis:names:tc:opendocument:xmlns:text:1.0}style-name': 'field-content-center'})"/>
                    </tal:block>
                    <tal:block tal:condition="python: field_type!='EditorField'">
                      <text:p tal:replace="structure python:field.render_odt(REQUEST=request, attr_dict={'{urn:oasis:names:tc:opendocument:xmlns:text:1.0}style-name': 'field-content-center'})"/>
                    </tal:block>
                  </tal:block>
                  <tal:block tal:condition="python: value is None">
                    <text:p text:style-name='field-content'/>
                  </tal:block>
                </tal:block>
              </tal:block>
              <tal:block tal:condition="python: field_type == 'ImageField'">
                <text:p text:style-name='field-content-center'
                        tal:define="preferred_width python: preference_tool.getPreference('preferred_%s_image_width' % (field.get_value('image_display')))">
                  <office:include_img style="inline-graphic"
                                      tal:attributes="width python: preferred_width or (100 / 20.);
                                      path python: '/'.join(request.physicalPathFromURL(field.get_value('default')));"/>
              </text:p>
            </tal:block>
            <tal:block tal:condition="python: field_type == 'OOoChart'">
              <tal:block tal:define="display python: field.get_value('image_display') "
                      tal:condition="display">
                  <tal:block tal:define="preferred_method_height_id python: 'getPreferred%sImageHeight' % (display.capitalize());
                        preferred_method_width_id python: 'getPreferred%sImageWidth'
                        % (display.capitalize());
                        " >
                    <tal:block tal:define="global height python:'%scm' % (int((getattr(preference_tool, preferred_method_height_id)())) * 0.020) ;
                               global width  python: '%scm' % (int((getattr(preference_tool, preferred_method_width_id)())) * 0.020 );"/>
                  </tal:block>
                </tal:block>
                <text:p text:style-name='field-content-center'>
                  <draw:frame draw:style-name='inline-graphic'
                              draw:layer='layout'
                              text:anchor-type="paragraph"
                              tal:attributes="svg:height python:height;
                                              svg:width python:width">
                    <tal:block tal:replace="structure python: field.render_odf(render_prefix=render_prefix)"/>
                  </draw:frame>
                </text:p>
              </tal:block>
            </tal:block>
          </tal:block>
        </tal:block>
      </tal:block>
    </office:text>
  </office:body>
</office:document-content>