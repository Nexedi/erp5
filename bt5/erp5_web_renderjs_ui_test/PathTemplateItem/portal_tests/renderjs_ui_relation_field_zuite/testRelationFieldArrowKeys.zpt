<html xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Test RenderJS UI</title>
</head>
<body>
<table cellpadding="1" cellspacing="1" border="1">
<thead>
<tr><td rowspan="1" colspan="3">Test RenderJS UI</td></tr>
</thead><tbody>
<tal:block metal:use-macro="here/Zuite_CommonTemplate/macros/init" />
<!-- Clean Up -->
<tr>
  <td>open</td>
  <td>${base_url}/foo_module/ListBoxZuite_reset</td>
  <td></td>
</tr>
<tr>
  <td>assertTextPresent</td>
  <td>Reset Successfully.</td>
  <td></td>
</tr>
<!-- Initialize -->
<tr>
  <td>open</td>
  <td>${base_url}/web_site_module/renderjs_runner/#/foo_module</td>
  <td></td>
</tr>
<tal:block metal:use-macro="here/Zuite_CommonTemplateForRenderjsUi/macros/wait_for_app_loaded" />
<tal:block tal:define="click_configuration python: {'text': 'Add'}">
  <tal:block metal:use-macro="here/Zuite_CommonTemplateForRenderjsUi/macros/click_on_header_link" />
</tal:block>
<tal:block metal:use-macro="here/Zuite_CommonTemplateForRenderjsUi/macros/wait_for_content_loaded" />
<tal:block metal:use-macro="here/Zuite_CommonTemplateForRenderjsUi/macros/submit_dialog" />
<tal:block tal:define="notification_configuration python: {'class': 'success',
                                                           'text': 'Object created.'}">
  <tal:block metal:use-macro="here/Zuite_CommonTemplateForRenderjsUi/macros/wait_for_notification" />
</tal:block>
<tal:block metal:use-macro="here/Zuite_CommonTemplateForRenderjsUi/macros/wait_for_content_loaded" />
<tr>
  <td>assertTextPresent</td>
  <td>Save</td>
  <td></td>
</tr>
<tr>
  <td>assertTextPresent</td>
  <td>Quantity</td>
  <td></td>
</tr>
<tal:block metal:use-macro="here/Zuite_CommonTemplateForRenderjsUi/macros/go_to_foo_relation_field_view" />
<tr>
  <td>waitForElementPresent</td>
  <td>//input[@name='field_my_foo_category_title']</td>
  <td></td>
</tr>
<tr>
  <td>click</td>
  <td>//input[@name='field_my_foo_category_title']</td>
  <td></td>
</tr>
<tr>
  <td>assertEval</td>
  <td>(function() { selenium.browserbot.getCurrentWindow().document.getElementById("field_my_foo_category_title").value = "Qua%"; return true;})()
  <td>true</td>
</tr>
<tr>
  <td>fireEvent</td>
  <td>//input[@name='field_my_foo_category_title']</td>
  <td>input</td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>//li[@data-relative-url='portal_categories/divergence_scope/quantity']</td>
  <td></td>
</tr>
<!-- We have class "active" for every line that should be highlighted -->
<!-- Initially, no lines are highlighted -->
<tr>
  <td>assertElementNotPresent</td>
  <td>//input[@name='field_my_foo_category_title']/parent::*//li[position()=1 and contains(@class,'active')]</td>
  <td></td>
</tr>
<tr>
  <td>assertElementNotPresent</td>
  <td>//input[@name='field_my_foo_category_title']/parent::*//li[position()=2 and contains(@class,'active')]</td>
  <td></td>
</tr>
<!-- We do Arrow down key, then first line should be highlighted -->
<tr>
  <td>assertEval</td>
  <td>var e = new KeyboardEvent('keydown', {'key':'ArrowDown'});
    selenium.browserbot.getDocument().querySelector("input[name='field_my_foo_category_title']").dispatchEvent(e)</td>
  <td>true</td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>//input[@name='field_my_foo_category_title']/parent::*//li[position()=1 and contains(@class,'active')]</td>
  <td></td>
</tr>
<tr>
  <td>assertElementPresent</td>
  <td>//input[@name='field_my_foo_category_title']/parent::*//li[position()=1 and contains(@class,'active')]</td>
  <td></td>
</tr>
<tr>
  <td>assertElementNotPresent</td>
  <td>//input[@name='field_my_foo_category_title']/parent::*//li[position()=2 and contains(@class,'active')]</td>
  <td></td>
</tr>
<!-- We do Arrow down key again, then second line should be highlighted -->
<tr>
  <td>assertEval</td>
  <td>var e = new KeyboardEvent('keydown', {'key':'ArrowDown'});
    selenium.browserbot.getDocument().querySelector("input[name='field_my_foo_category_title']").dispatchEvent(e)</td>
  <td>true</td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>//input[@name='field_my_foo_category_title']/parent::*//li[position()=2 and contains(@class,'active')]</td>
  <td></td>
</tr>
<tr>
  <td>assertElementNotPresent</td>
  <td>//input[@name='field_my_foo_category_title']/parent::*//li[position()=1 and contains(@class,'active')]</td>
  <td></td>
</tr>
<tr>
  <td>assertElementPresent</td>
  <td>//input[@name='field_my_foo_category_title']/parent::*//li[position()=2 and contains(@class,'active')]</td>
  <td></td>
</tr>
<!-- We do Arrow up key, then first line should be highlighted -->
<tr>
  <td>assertEval</td>
  <td>var e = new KeyboardEvent('keydown', {'key':'ArrowUp'});
    selenium.browserbot.getDocument().querySelector("input[name='field_my_foo_category_title']").dispatchEvent(e)</td>
  <td>true</td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>//input[@name='field_my_foo_category_title']/parent::*//li[position()=1 and contains(@class,'active')]</td>
  <td></td>
</tr>
<tr>
  <td>assertElementPresent</td>
  <td>//input[@name='field_my_foo_category_title']/parent::*//li[position()=1 and contains(@class,'active')]</td>
  <td></td>
</tr>
<tr>
  <td>assertElementNotPresent</td>
  <td>//input[@name='field_my_foo_category_title']/parent::*//li[position()=2 and contains(@class,'active')]</td>
  <td></td>
</tr>
<!-- Make sure Enter key allows to validate the selected line and disable the list of choice -->
<tr>
  <td>assertEval</td>
  <td>var e = new KeyboardEvent('keydown', {'key':'Enter'});
    selenium.browserbot.getDocument().querySelector("input[name='field_my_foo_category_title']").dispatchEvent(e)</td>
  <td>true</td>
</tr>
<tr>
  <td>assertElementNotPresent</td>
  <td>//li[@data-relative-url='portal_categories/divergence_scope/quantity']</td>
  <td></td>
</tr>
<tr>
  <td>assertValue</td>
  <td>//input[@name='field_my_foo_category_title']</td>
  <td>Quantity</td>
</tr>
<tal:block metal:use-macro="here/Zuite_CommonTemplateForRenderjsUi/macros/save" />
<tr>
  <td>assertValue</td>
  <td>//input[@name='field_my_foo_category_title']</td>
  <td>Quantity</td>
</tr>
</tbody></table>
</body>
</html>