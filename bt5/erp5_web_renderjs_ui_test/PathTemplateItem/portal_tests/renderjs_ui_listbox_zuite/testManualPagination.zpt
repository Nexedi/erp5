<html xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal">
<!--
Ensure anything can be paginated even thought the list script does not support it.

Fortunately - `contentValues` which is the base of many listboxes does not give
a damn about limits so it is perfect adept for testing.

-->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Test RenderJS UI</title>
</head>
<body>
<table cellpadding="1" cellspacing="1" border="1">
<thead>
<tr><td rowspan="1" colspan="3">Test RenderJS UI</td></tr>
</thead><tbody>
<tal:block metal:use-macro="here/Zuite_CommonTemplate/macros/init" />

<!-- Clean Up -->
<tr><td>open</td>
    <td>${base_url}/foo_module/ListBoxZuite_reset</td><td></td></tr>
<tr><td>assertTextPresent</td>
    <td>Reset Successfully.</td><td></td></tr>

<!-- Shortcut for full renderjs url -->
<tr><td>store</td>
    <td>${base_url}/web_site_module/renderjs_runner</td>
    <td>renderjs_url</td></tr>
<tr><td>store</td>
    <td>//div[@data-gadget-url="${renderjs_url}/gadget_erp5_field_listbox.html"]</td>
    <td>listbox</td></tr>

<!-- Our listbox displays 3 lines so we want to test pagination twice -->
<tr><td>open</td>
    <td>${base_url}/foo_module/FooModule_createObjects?start:int=1&amp;num:int=1&amp;create_line:int=0</td><td></td></tr>
<tr><td>assertTextPresent</td>
    <td>Created Successfully.</td><td></td></tr>
<tr><td>open</td>
    <td>${base_url}/foo_module/1/Foo_createObjects?start:int=1&amp;num:int=8&amp;</td><td></td></tr>
<tr><td>assertTextPresent</td>
    <td>Created Successfully.</td><td></td></tr>
<tal:block metal:use-macro="here/Zuite_CommonTemplate/macros/wait_for_activities" />

<tr><td>open</td>
    <td>${renderjs_url}/#/foo_module/1?editable=1</td><td></td></tr>

<tr><td>waitForElementPresent</td><!-- wait explicitely for the first listbox which holds the modification history -->
    <td>${listbox}//a[@data-i18n="Next"]</td><td></td></tr>
<tr><td>assertElementNotPresent</td><!-- "Next" link must be enabled -->
    <td>${listbox}//a[@data-i18n="Next" and contains(@class, "ui-disabled")]</td><td></td></tr>
<tr><td>assertTextPresent</td>
    <td>Records 1 - 3</td><td></td></tr>

<tr><td>click</td>
    <td>${listbox}//a[@data-i18n="Next"]</td><td></td></tr>
<tal:block metal:use-macro="here/Zuite_CommonTemplateForRenderjsUi/macros/wait_for_content_loaded" />
<tr><td>waitForElementPresent</td>
    <td>${listbox}//a[@data-i18n="Next"]</td><td></td></tr>
<tr><td>assertElementNotPresent</td><!-- "Next" link must be enabled -->
    <td>${listbox}//a[@data-i18n="Next" and contains(@class, "ui-disabled")]</td><td></td></tr>
<tr><td>assertTextPresent</td>
    <td>Records 4 - 6</td><td></td></tr>

<tr><td>click</td><!-- wait explicitely for the first listbox which holds the modification history -->
    <td>${listbox}//a[@data-i18n="Next"]</td><td></td></tr>
<tal:block metal:use-macro="here/Zuite_CommonTemplateForRenderjsUi/macros/wait_for_content_loaded" />
<tr><td>waitForElementPresent</td><!-- wait explicitely for the first listbox which holds the modification history -->
    <td>${listbox}//a[@data-i18n="Next"]</td><td></td></tr>
<tr><td>assertElementPresent</td><!-- "Next" link must be disabled because we are at the end -->
    <td>${listbox}//a[@data-i18n="Next" and contains(@class, "ui-disabled")]</td><td></td></tr>
<tr><td>assertTextPresent</td>
    <td>Records 7 - 8</td><td></td></tr>

</tbody></table>
</body>
</html>