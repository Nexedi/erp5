<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>from Products.ERP5Type.Document import newTempBase\n
marker = []\n
\n
result = []\n
\n
portal_catalog = context.portal_catalog\n
portal_workflow = context.portal_workflow\n
portal_templates = context.portal_templates\n
\n
def get_term_list(business_field, reference):\n
  reference = reference.rsplit(\'_action\', 1)[0]\n
  term_list = portal_catalog(portal_type=\'Glossary Term\',\n
                             validation_state=\'validated\',\n
                             language_id=\'en\',\n
                             business_field_title=(\'core\', business_field),\n
                             reference=reference)\n
  return [i.getObject() for i in term_list]\n
\n
def get_obj_and_reference_list(business_field):\n
  business_field = business_field.split(\'/\')[0]\n
  result = []\n
  # XXX this might be too simple: some business template include more than one skin folder\n
  bt = portal_templates.getInstalledBusinessTemplate("erp5_%s" % business_field)\n
  if bt is None: return result\n
  for wf_id in bt.getTemplateWorkflowIdList():\n
    wf = getattr(portal_workflow, wf_id)\n
    if getattr(wf, "interactions", marker) is marker: # only way to make sure it is not an interaction workflow ?\n
      result.append((wf, wf_id, \'workflow\'))\n
      for state_id, state in wf.getStateValueList().items():\n
        result.append((state, state_id, \'state\'))\n
      for trans_id, trans in wf.getTransitionValueList().items():\n
        result.append((trans, trans_id, \'transition\'))\n
        if trans.trigger_type == 1 and trans.actbox_name: # 1 == TRIGGER_USER_ACTION\n
          result.append((trans, "%s_actbox_name" % trans_id, \'action\'))\n
  return result\n
\n
business_field_list = [i for i in business_field_list if i]\n
\n
line_list = []\n
c = 0\n
item_dict = {}\n
for business_field in business_field_list:\n
  for wf_item, reference, type in get_obj_and_reference_list(business_field):\n
    term_list = get_term_list(business_field, reference)\n
    #if not term_list:\n
    #  continue\n
    if item_dict.has_key(wf_item):\n
      continue\n
    item_dict[wf_item] = True\n
\n
    c += 1\n
    if type == \'workflow\':\n
      wf_item_path = wf_item.id\n
      wf_item_title = wf_item.title\n
    elif type == \'state\':\n
      wf_item_path = \'%s/states/%s\' % (wf_item.aq_parent.aq_parent.id, wf_item.id)\n
      wf_item_title = wf_item.title\n
    elif type == \'transition\':\n
      wf_item_path = \'%s/transitions/%s\' % (wf_item.aq_parent.aq_parent.id, wf_item.id)\n
      wf_item_title = wf_item.title\n
    else: # type == \'action\'\n
      wf_item_path = \'%s/transitions/%s_actbox_name\' % (wf_item.aq_parent.aq_parent.id, wf_item.id)\n
      wf_item_title = wf_item.actbox_name\n
    wf_item_description = wf_item.description\n
\n
    if type == \'transition\' and wf_item_path.endswith(\'_action\'):\n
      if len(term_list) == 1 and \\\n
          term_list[0].getTitle() + \' Action\' == wf_item_title and \\\n
          term_list[0].getDescription() == wf_item_description:\n
        continue\n
    else:\n
      if len(term_list) == 1 and \\\n
          term_list[0].getTitle() == wf_item_title and \\\n
          term_list[0].getDescription() == wf_item_description:\n
        continue\n
\n
    line = newTempBase(context, \'tmp_glossary_wf_item_%s\' %  c)\n
    line.edit(wf_item_path=wf_item_path,\n
              wf_item_type=type,\n
              wf_item_title=wf_item_title,\n
              wf_item_edit_url = "%s/manage_properties" % wf_item.absolute_url(),\n
              wf_item_description = wf_item_description,\n
              reference=reference,\n
              term_list=term_list\n
              )\n
    line.setUid(wf_item_path)\n
    line_list.append(line)\n
\n
line_list.sort(key=lambda x:x.wf_item_path)\n
return line_list\n
</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>business_field_list, **kw</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>GlossaryModule_getBusinessFieldWorkflowList</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
