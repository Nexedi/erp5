<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts50885478.49</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>jquery_native.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>248854</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/*!\r\n
 * jQuery JavaScript Library v1.7.1\r\n
 * http://jquery.com/\r\n
 *\r\n
 * Copyright 2011, John Resig\r\n
 * Dual licensed under the MIT or GPL Version 2 licenses.\r\n
 * http://jquery.org/license\r\n
 *\r\n
 * Includes Sizzle.js\r\n
 * http://sizzlejs.com/\r\n
 * Copyright 2011, The Dojo Foundation\r\n
 * Released under the MIT, BSD, and GPL Licenses.\r\n
 *\r\n
 * Date: Mon Nov 21 21:11:03 2011 -0500\r\n
 */\r\n
(function( window, undefined ) {\r\n
\r\n
// Use the correct document accordingly with window argument (sandbox)\r\n
var document = window.document,\r\n
\tnavigator = window.navigator,\r\n
\tlocation = window.location;\r\n
var jQuery = (function() {\r\n
\r\n
// Define a local copy of jQuery\r\n
var jQuery = function( selector, context ) {\r\n
\t\t// The jQuery object is actually just the init constructor \'enhanced\'\r\n
\t\treturn new jQuery.fn.init( selector, context, rootjQuery );\r\n
\t},\r\n
\r\n
\t// Map over jQuery in case of overwrite\r\n
\t_jQuery = window.jQuery,\r\n
\r\n
\t// Map over the $ in case of overwrite\r\n
\t_$ = window.$,\r\n
\r\n
\t// A central reference to the root jQuery(document)\r\n
\trootjQuery,\r\n
\r\n
\t// A simple way to check for HTML strings or ID strings\r\n
\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\r\n
\tquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/,\r\n
\r\n
\t// Check if a string has a non-whitespace character in it\r\n
\trnotwhite = /\\S/,\r\n
\r\n
\t// Used for trimming whitespace\r\n
\ttrimLeft = /^\\s+/,\r\n
\ttrimRight = /\\s+$/,\r\n
\r\n
\t// Match a standalone tag\r\n
\trsingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/,\r\n
\r\n
\t// JSON RegExp\r\n
\trvalidchars = /^[\\],:{}\\s]*$/,\r\n
\trvalidescape = /\\\\(?:["\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,\r\n
\trvalidtokens = /"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,\r\n
\trvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g,\r\n
\r\n
\t// Useragent RegExp\r\n
\trwebkit = /(webkit)[ \\/]([\\w.]+)/,\r\n
\tropera = /(opera)(?:.*version)?[ \\/]([\\w.]+)/,\r\n
\trmsie = /(msie) ([\\w.]+)/,\r\n
\trmozilla = /(mozilla)(?:.*? rv:([\\w.]+))?/,\r\n
\r\n
\t// Matches dashed string for camelizing\r\n
\trdashAlpha = /-([a-z]|[0-9])/ig,\r\n
\trmsPrefix = /^-ms-/,\r\n
\r\n
\t// Used by jQuery.camelCase as callback to replace()\r\n
\tfcamelCase = function( all, letter ) {\r\n
\t\treturn ( letter + "" ).toUpperCase();\r\n
\t},\r\n
\r\n
\t// Keep a UserAgent string for use with jQuery.browser\r\n
\tuserAgent = navigator.userAgent,\r\n
\r\n
\t// For matching the engine and version of the browser\r\n
\tbrowserMatch,\r\n
\r\n
\t// The deferred used on DOM ready\r\n
\treadyList,\r\n
\r\n
\t// The ready event handler\r\n
\tDOMContentLoaded,\r\n
\r\n
\t// Save a reference to some core methods\r\n
\ttoString = Object.prototype.toString,\r\n
\thasOwn = Object.prototype.hasOwnProperty,\r\n
\tpush = Array.prototype.push,\r\n
\tslice = Array.prototype.slice,\r\n
\ttrim = String.prototype.trim,\r\n
\tindexOf = Array.prototype.indexOf,\r\n
\r\n
\t// [[Class]] -> type pairs\r\n
\tclass2type = {};\r\n
\r\n
jQuery.fn = jQuery.prototype = {\r\n
\tconstructor: jQuery,\r\n
\tinit: function( selector, context, rootjQuery ) {\r\n
\t\t// Handle $(""), $(null), or $(undefined)\r\n
\t    if ( !selector ) {\r\n
\t\t    return this;\r\n
\t    }\r\n
\r\n
\t    // Handle $(DOMElement)\r\n
\t    if ( selector.nodeType ) {\r\n
\t\t    this.context = this[0] = selector;\r\n
\t\t    this.length = 1;\r\n
\t\t    return this;\r\n
\t    }\r\n
\t    \r\n
\t    if ( jQuery.isFunction( selector ) ) {\n
\t\t\treturn rootjQuery.ready( selector );\n
\t\t}\n
\n
\t\treturn jQuery.makeArray( _null_object, this );\r\n
\t},\r\n
\r\n
\t// Start with an empty selector\r\n
\tselector: "",\r\n
\r\n
\t// The current version of jQuery being used\r\n
\tjquery: "1.7.1",\r\n
\r\n
\t// The default length of a jQuery object is 0\r\n
\tlength: 0,\r\n
\r\n
\t// The number of elements contained in the matched element set\r\n
\tsize: function() {\r\n
\t\treturn this.length;\r\n
\t},\r\n
\r\n
\ttoArray: function() {\r\n
\t\treturn slice.call( this, 0 );\r\n
\t},\r\n
\r\n
\t// Get the Nth element in the matched element set OR\r\n
\t// Get the whole matched element set as a clean array\r\n
\tget: function( num ) {\r\n
\t\treturn num == null ?\r\n
\r\n
\t\t\t// Return a \'clean\' array\r\n
\t\t\tthis.toArray() :\r\n
\r\n
\t\t\t// Return just the object\r\n
\t\t\t( num < 0 ? this[ this.length + num ] : this[ num ] );\r\n
\t},\r\n
\r\n
\t// Take an array of elements and push it onto the stack\r\n
\t// (returning the new matched element set)\r\n
\tpushStack: function( elems, name, selector ) {\r\n
\t\t// Build a new jQuery matched element set\r\n
\t\tvar ret = this.constructor();\r\n
\r\n
\t\tif ( jQuery.isArray( elems ) ) {\r\n
\t\t\tpush.apply( ret, elems );\r\n
\r\n
\t\t} else {\r\n
\t\t\tjQuery.merge( ret, elems );\r\n
\t\t}\r\n
\r\n
\t\t// Add the old object onto the stack (as a reference)\r\n
\t\tret.prevObject = this;\r\n
\r\n
\t\tret.context = this.context;\r\n
\r\n
\t\tif ( name === "find" ) {\r\n
\t\t\tret.selector = this.selector + ( this.selector ? " " : "" ) + selector;\r\n
\t\t} else if ( name ) {\r\n
\t\t\tret.selector = this.selector + "." + name + "(" + selector + ")";\r\n
\t\t}\r\n
\r\n
\t\t// Return the newly-formed element set\r\n
\t\treturn ret;\r\n
\t},\r\n
\r\n
\t// Execute a callback for every element in the matched set.\r\n
\t// (You can seed the arguments with an array of args, but this is\r\n
\t// only used internally.)\r\n
\teach: function( callback, args ) {\r\n
\t\treturn jQuery.each( this, callback, args );\r\n
\t},\r\n
\r\n
\tready: function( fn ) {\r\n
\t\t// Attach the listeners\r\n
\t\tjQuery.bindReady();\r\n
\r\n
\t\t// Add the callback\r\n
\t\treadyList.add( fn );\r\n
\r\n
\t\treturn this;\r\n
\t},\r\n
\r\n
\teq: function( i ) {\r\n
\t\ti = +i;\r\n
\t\treturn i === -1 ?\r\n
\t\t\tthis.slice( i ) :\r\n
\t\t\tthis.slice( i, i + 1 );\r\n
\t},\r\n
\r\n
\tfirst: function() {\r\n
\t\treturn this.eq( 0 );\r\n
\t},\r\n
\r\n
\tlast: function() {\r\n
\t\treturn this.eq( -1 );\r\n
\t},\r\n
\r\n
\tslice: function() {\r\n
\t\treturn this.pushStack( slice.apply( this, arguments ),\r\n
\t\t\t"slice", slice.call(arguments).join(",") );\r\n
\t},\r\n
\r\n
\tmap: function( callback ) {\r\n
\t\treturn this.pushStack( jQuery.map(this, function( elem, i ) {\r\n
\t\t\treturn callback.call( elem, i, elem );\r\n
\t\t}));\r\n
\t},\r\n
\r\n
\tend: function() {\r\n
\t\treturn this.prevObject || this.constructor(null);\r\n
\t},\r\n
\r\n
\t// For internal use only.\r\n
\t// Behaves like an Array\'s method, not like a jQuery method.\r\n
\tpush: push,\r\n
\tsort: [].sort,\r\n
\tsplice: [].splice\r\n
};\r\n
\r\n
// Give the init function the jQuery prototype for later instantiation\r\n
jQuery.fn.init.prototype = jQuery.fn;\r\n
\r\n
jQuery.extend = jQuery.fn.extend = function() {\r\n
\tvar options, name, src, copy, copyIsArray, clone,\r\n
\t\ttarget = arguments[0] || {},\r\n
\t\ti = 1,\r\n
\t\tlength = arguments.length,\r\n
\t\tdeep = false;\r\n
\r\n
\t// Handle a deep copy situation\r\n
\tif ( typeof target === "boolean" ) {\r\n
\t\tdeep = target;\r\n
\t\ttarget = arguments[1] || {};\r\n
\t\t// skip the boolean and the target\r\n
\t\ti = 2;\r\n
\t}\r\n
\r\n
\t// Handle case when target is a string or something (possible in deep copy)\r\n
\tif ( typeof target !== "object" && !jQuery.isFunction(target) ) {\r\n
\t\ttarget = {};\r\n
\t}\r\n
\r\n
\t// extend jQuery itself if only one argument is passed\r\n
\tif ( length === i ) {\r\n
\t\ttarget = this;\r\n
\t\t--i;\r\n
\t}\r\n
\r\n
\tfor ( ; i < length; i++ ) {\r\n
\t\t// Only deal with non-null/undefined values\r\n
\t\tif ( (options = arguments[ i ]) != null ) {\r\n
\t\t\t// Extend the base object\r\n
\t\t\tfor ( name in options ) {\r\n
\t\t\t\tsrc = target[ name ];\r\n
\t\t\t\tcopy = options[ name ];\r\n
\r\n
\t\t\t\t// Prevent never-ending loop\r\n
\t\t\t\tif ( target === copy ) {\r\n
\t\t\t\t\tcontinue;\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\t// Recurse if we\'re merging plain objects or arrays\r\n
\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\r\n
\t\t\t\t\tif ( copyIsArray ) {\r\n
\t\t\t\t\t\tcopyIsArray = false;\r\n
\t\t\t\t\t\tclone = src && jQuery.isArray(src) ? src : [];\r\n
\r\n
\t\t\t\t\t} else {\r\n
\t\t\t\t\t\tclone = src && jQuery.isPlainObject(src) ? src : {};\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t// Never move original objects, clone them\r\n
\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\r\n
\r\n
\t\t\t\t// Don\'t bring in undefined values\r\n
\t\t\t\t} else if ( copy !== undefined ) {\r\n
\t\t\t\t\ttarget[ name ] = copy;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
\r\n
\t// Return the modified object\r\n
\treturn target;\r\n
};\r\n
\r\n
jQuery.extend({\r\n
\tnoConflict: function( deep ) {\r\n
\t\tif ( window.$ === jQuery ) {\r\n
\t\t\twindow.$ = _$;\r\n
\t\t}\r\n
\r\n
\t\tif ( deep && window.jQuery === jQuery ) {\r\n
\t\t\twindow.jQuery = _jQuery;\r\n
\t\t}\r\n
\r\n
\t\treturn jQuery;\r\n
\t},\r\n
\r\n
\t// Is the DOM ready to be used? Set to true once it occurs.\r\n
\tisReady: false,\r\n
\r\n
\t// A counter to track how many items to wait for before\r\n
\t// the ready event fires. See #6781\r\n
\treadyWait: 1,\r\n
\r\n
\t// Hold (or release) the ready event\r\n
\tholdReady: function( hold ) {\r\n
\t\tif ( hold ) {\r\n
\t\t\tjQuery.readyWait++;\r\n
\t\t} else {\r\n
\t\t\tjQuery.ready( true );\r\n
\t\t}\r\n
\t},\r\n
\r\n
\t// Handle when the DOM is ready\r\n
\tready: function( wait ) {\r\n
\t\t// Either a released hold or an DOMready/load event and not yet ready\r\n
\t\tif ( (wait === true && !--jQuery.readyWait) || (wait !== true && !jQuery.isReady) ) {\r\n
\t\t\t// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).\r\n
\t\t\tif ( !document.body ) {\r\n
\t\t\t\treturn setTimeout( jQuery.ready, 1 );\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Remember that the DOM is ready\r\n
\t\t\tjQuery.isReady = true;\r\n
\r\n
\t\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\r\n
\t\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\r\n
\t\t\t\treturn;\r\n
\t\t\t}\r\n
\r\n
\t\t\t// If there are functions bound, to execute\r\n
\t\t\treadyList.fireWith( document, [ jQuery ] );\r\n
\r\n
\t\t\t// Trigger any bound ready events\r\n
\t\t\tif ( jQuery.fn.trigger ) {\r\n
\t\t\t\tjQuery( document ).trigger( "ready" ).off( "ready" );\r\n
\t\t\t}\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tbindReady: function() {\r\n
\t\tif ( readyList ) {\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\treadyList = jQuery.Callbacks( "once memory" );\r\n
\r\n
\t\t// Catch cases where $(document).ready() is called after the\r\n
\t\t// browser event has already occurred.\r\n
\t\tif ( document.readyState === "complete" ) {\r\n
\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\r\n
\t\t\treturn setTimeout( jQuery.ready, 1 );\r\n
\t\t}\r\n
\r\n
\t\t// Mozilla, Opera and webkit nightlies currently support this event\r\n
\t\tif ( document.addEventListener ) {\r\n
\t\t\t// Use the handy event callback\r\n
\t\t\tdocument.addEventListener( "DOMContentLoaded", DOMContentLoaded, false );\r\n
\r\n
\t\t\t// A fallback to window.onload, that will always work\r\n
\t\t\twindow.addEventListener( "load", jQuery.ready, false );\r\n
\r\n
\t\t// If IE event model is used\r\n
\t\t} else if ( document.attachEvent ) {\r\n
\t\t\t// ensure firing before onload,\r\n
\t\t\t// maybe late but safe also for iframes\r\n
\t\t\tdocument.attachEvent( "onreadystatechange", DOMContentLoaded );\r\n
\r\n
\t\t\t// A fallback to window.onload, that will always work\r\n
\t\t\twindow.attachEvent( "onload", jQuery.ready );\r\n
\r\n
\t\t\t// If IE and not a frame\r\n
\t\t\t// continually check to see if the document is ready\r\n
\t\t\tvar toplevel = false;\r\n
\r\n
\t\t\ttry {\r\n
\t\t\t\ttoplevel = window.frameElement == null;\r\n
\t\t\t} catch(e) {}\r\n
\r\n
\t\t\tif ( document.documentElement.doScroll && toplevel ) {\r\n
\t\t\t\tdoScrollCheck();\r\n
\t\t\t}\r\n
\t\t}\r\n
\t},\r\n
\r\n
\t// See test/unit/core.js for details concerning isFunction.\r\n
\t// Since version 1.3, DOM methods and functions like alert\r\n
\t// aren\'t supported. They return false on IE (#2968).\r\n
\tisFunction: function( obj ) {\r\n
\t\treturn jQuery.type(obj) === "function";\r\n
\t},\r\n
\r\n
\tisArray: Array.isArray || function( obj ) {\r\n
\t\treturn jQuery.type(obj) === "array";\r\n
\t},\r\n
\r\n
\t// A crude way of determining if an object is a window\r\n
\tisWindow: function( obj ) {\r\n
\t\treturn obj && typeof obj === "object" && "setInterval" in obj;\r\n
\t},\r\n
\r\n
\tisNumeric: function( obj ) {\r\n
\t\treturn !isNaN( parseFloat(obj) ) && isFinite( obj );\r\n
\t},\r\n
\r\n
\ttype: function( obj ) {\r\n
\t\treturn obj == null ?\r\n
\t\t\tString( obj ) :\r\n
\t\t\tclass2type[ toString.call(obj) ] || "object";\r\n
\t},\r\n
\r\n
\tisPlainObject: function( obj ) {\r\n
\t\t// Must be an Object.\r\n
\t\t// Because of IE, we also have to check the presence of the constructor property.\r\n
\t\t// Make sure that DOM nodes and window objects don\'t pass through, as well\r\n
\t\tif ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {\r\n
\t\t\treturn false;\r\n
\t\t}\r\n
\r\n
\t\ttry {\r\n
\t\t\t// Not own constructor property must be Object\r\n
\t\t\tif ( obj.constructor &&\r\n
\t\t\t\t!hasOwn.call(obj, "constructor") &&\r\n
\t\t\t\t!hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {\r\n
\t\t\t\treturn false;\r\n
\t\t\t}\r\n
\t\t} catch ( e ) {\r\n
\t\t\t// IE8,9 Will throw exceptions on certain host objects #9897\r\n
\t\t\treturn false;\r\n
\t\t}\r\n
\r\n
\t\t// Own properties are enumerated firstly, so to speed up,\r\n
\t\t// if last one is own, then all properties are own.\r\n
\r\n
\t\tvar key;\r\n
\t\tfor ( key in obj ) {}\r\n
\r\n
\t\treturn key === undefined || hasOwn.call( obj, key );\r\n
\t},\r\n
\r\n
\tisEmptyObject: function( obj ) {\r\n
\t\tfor ( var name in obj ) {\r\n
\t\t\treturn false;\r\n
\t\t}\r\n
\t\treturn true;\r\n
\t},\r\n
\r\n
\terror: function( msg ) {\r\n
\t\tthrow new Error( msg );\r\n
\t},\r\n
\r\n
\tparseJSON: function( data ) {\r\n
\t\tif ( typeof data !== "string" || !data ) {\r\n
\t\t\treturn null;\r\n
\t\t}\r\n
\r\n
\t\t// Make sure leading/trailing whitespace is removed (IE can\'t handle it)\r\n
\t\tdata = jQuery.trim( data );\r\n
\r\n
\t\t// Attempt to parse using the native JSON parser first\r\n
\t\tif ( window.JSON && window.JSON.parse ) {\r\n
\t\t\treturn window.JSON.parse( data );\r\n
\t\t}\r\n
\r\n
\t\t// Make sure the incoming data is actual JSON\r\n
\t\t// Logic borrowed from http://json.org/json2.js\r\n
\t\tif ( rvalidchars.test( data.replace( rvalidescape, "@" )\r\n
\t\t\t.replace( rvalidtokens, "]" )\r\n
\t\t\t.replace( rvalidbraces, "")) ) {\r\n
\r\n
\t\t\treturn ( new Function( "return " + data ) )();\r\n
\r\n
\t\t}\r\n
\t\tjQuery.error( "Invalid JSON: " + data );\r\n
\t},\r\n
\r\n
\t// Cross-browser xml parsing\r\n
\tparseXML: function( data ) {\r\n
\t\tvar xml, tmp;\r\n
\t\ttry {\r\n
\t\t\tif ( window.DOMParser ) { // Standard\r\n
\t\t\t\ttmp = new DOMParser();\r\n
\t\t\t\txml = tmp.parseFromString( data , "text/xml" );\r\n
\t\t\t} else { // IE\r\n
\t\t\t\txml = new ActiveXObject( "Microsoft.XMLDOM" );\r\n
\t\t\t\txml.async = "false";\r\n
\t\t\t\txml.loadXML( data );\r\n
\t\t\t}\r\n
\t\t} catch( e ) {\r\n
\t\t\txml = undefined;\r\n
\t\t}\r\n
\t\tif ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {\r\n
\t\t\tjQuery.error( "Invalid XML: " + data );\r\n
\t\t}\r\n
\t\treturn xml;\r\n
\t},\r\n
\r\n
\tnoop: function() {},\r\n
\r\n
\t// Evaluates a script in a global context\r\n
\t// Workarounds based on findings by Jim Driscoll\r\n
\t// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\r\n
\tglobalEval: function( data ) {\r\n
\t\tif ( data && rnotwhite.test( data ) ) {\r\n
\t\t\t// We use execScript on Internet Explorer\r\n
\t\t\t// We use an anonymous function so that context is window\r\n
\t\t\t// rather than jQuery in Firefox\r\n
\t\t\t( window.execScript || function( data ) {\r\n
\t\t\t\twindow[ "eval" ].call( window, data );\r\n
\t\t\t} )( data );\r\n
\t\t}\r\n
\t},\r\n
\r\n
\t// Convert dashed to camelCase; used by the css and data modules\r\n
\t// Microsoft forgot to hump their vendor prefix (#9572)\r\n
\tcamelCase: function( string ) {\r\n
\t\treturn string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );\r\n
\t},\r\n
\r\n
\tnodeName: function( elem, name ) {\r\n
\t\treturn elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase();\r\n
\t},\r\n
\r\n
\t// args is for internal usage only\r\n
\teach: function( object, callback, args ) {\r\n
\t\tvar name, i = 0,\r\n
\t\t\tlength = object.length,\r\n
\t\t\tisObj = length === undefined || jQuery.isFunction( object );\r\n
\r\n
\t\tif ( args ) {\r\n
\t\t\tif ( isObj ) {\r\n
\t\t\t\tfor ( name in object ) {\r\n
\t\t\t\t\tif ( callback.apply( object[ name ], args ) === false ) {\r\n
\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t} else {\r\n
\t\t\t\tfor ( ; i < length; ) {\r\n
\t\t\t\t\tif ( callback.apply( object[ i++ ], args ) === false ) {\r\n
\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t// A special, fast, case for the most common use of each\r\n
\t\t} else {\r\n
\t\t\tif ( isObj ) {\r\n
\t\t\t\tfor ( name in object ) {\r\n
\t\t\t\t\tif ( callback.call( object[ name ], name, object[ name ] ) === false ) {\r\n
\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t} else {\r\n
\t\t\t\tfor ( ; i < length; ) {\r\n
\t\t\t\t\tif ( callback.call( object[ i ], i, object[ i++ ] ) === false ) {\r\n
\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn object;\r\n
\t},\r\n
\r\n
\t// Use native String.trim function wherever possible\r\n
\ttrim: trim ?\r\n
\t\tfunction( text ) {\r\n
\t\t\treturn text == null ?\r\n
\t\t\t\t"" :\r\n
\t\t\t\ttrim.call( text );\r\n
\t\t} :\r\n
\r\n
\t\t// Otherwise use our own trimming functionality\r\n
\t\tfunction( text ) {\r\n
\t\t\treturn text == null ?\r\n
\t\t\t\t"" :\r\n
\t\t\t\ttext.toString().replace( trimLeft, "" ).replace( trimRight, "" );\r\n
\t\t},\r\n
\r\n
\t// results is for internal usage only\r\n
\tmakeArray: function( array, results ) {\r\n
\t\tvar ret = results || [];\r\n
\r\n
\t\tif ( array != null ) {\r\n
\t\t\t// The window, strings (and functions) also have \'length\'\r\n
\t\t\t// Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930\r\n
\t\t\tvar type = jQuery.type( array );\r\n
\r\n
\t\t\tif ( array.length == null || type === "string" || type === "function" || type === "regexp" || jQuery.isWindow( array ) ) {\r\n
\t\t\t\tpush.call( ret, array );\r\n
\t\t\t} else {\r\n
\t\t\t\tjQuery.merge( ret, array );\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn ret;\r\n
\t},\r\n
\r\n
\tinArray: function( elem, array, i ) {\r\n
\t\tvar len;\r\n
\r\n
\t\tif ( array ) {\r\n
\t\t\tif ( indexOf ) {\r\n
\t\t\t\treturn indexOf.call( array, elem, i );\r\n
\t\t\t}\r\n
\r\n
\t\t\tlen = array.length;\r\n
\t\t\ti = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;\r\n
\r\n
\t\t\tfor ( ; i < len; i++ ) {\r\n
\t\t\t\t// Skip accessing in sparse arrays\r\n
\t\t\t\tif ( i in array && array[ i ] === elem ) {\r\n
\t\t\t\t\treturn i;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn -1;\r\n
\t},\r\n
\r\n
\tmerge: function( first, second ) {\r\n
\t\tvar i = first.length,\r\n
\t\t\tj = 0;\r\n
\r\n
\t\tif ( typeof second.length === "number" ) {\r\n
\t\t\tfor ( var l = second.length; j < l; j++ ) {\r\n
\t\t\t\tfirst[ i++ ] = second[ j ];\r\n
\t\t\t}\r\n
\r\n
\t\t} else {\r\n
\t\t\twhile ( second[j] !== undefined ) {\r\n
\t\t\t\tfirst[ i++ ] = second[ j++ ];\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\tfirst.length = i;\r\n
\r\n
\t\treturn first;\r\n
\t},\r\n
\r\n
\tgrep: function( elems, callback, inv ) {\r\n
\t\tvar ret = [], retVal;\r\n
\t\tinv = !!inv;\r\n
\r\n
\t\t// Go through the array, only saving the items\r\n
\t\t// that pass the validator function\r\n
\t\tfor ( var i = 0, length = elems.length; i < length; i++ ) {\r\n
\t\t\tretVal = !!callback( elems[ i ], i );\r\n
\t\t\tif ( inv !== retVal ) {\r\n
\t\t\t\tret.push( elems[ i ] );\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn ret;\r\n
\t},\r\n
\r\n
\t// arg is for internal usage only\r\n
\tmap: function( elems, callback, arg ) {\r\n
\t\tvar value, key, ret = [],\r\n
\t\t\ti = 0,\r\n
\t\t\tlength = elems.length,\r\n
\t\t\t// jquery objects are treated as arrays\r\n
\t\t\tisArray = elems instanceof jQuery || length !== undefined && typeof length === "number" && ( ( length > 0 && elems[ 0 ] && elems[ length -1 ] ) || length === 0 || jQuery.isArray( elems ) ) ;\r\n
\r\n
\t\t// Go through the array, translating each of the items to their\r\n
\t\tif ( isArray ) {\r\n
\t\t\tfor ( ; i < length; i++ ) {\r\n
\t\t\t\tvalue = callback( elems[ i ], i, arg );\r\n
\r\n
\t\t\t\tif ( value != null ) {\r\n
\t\t\t\t\tret[ ret.length ] = value;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t// Go through every key on the object,\r\n
\t\t} else {\r\n
\t\t\tfor ( key in elems ) {\r\n
\t\t\t\tvalue = callback( elems[ key ], key, arg );\r\n
\r\n
\t\t\t\tif ( value != null ) {\r\n
\t\t\t\t\tret[ ret.length ] = value;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\t// Flatten any nested arrays\r\n
\t\treturn ret.concat.apply( [], ret );\r\n
\t},\r\n
\r\n
\t// A global GUID counter for objects\r\n
\tguid: 1,\r\n
\r\n
\t// Bind a function to a context, optionally partially applying any\r\n
\t// arguments.\r\n
\tproxy: function( fn, context ) {\r\n
\t\tif ( typeof context === "string" ) {\r\n
\t\t\tvar tmp = fn[ context ];\r\n
\t\t\tcontext = fn;\r\n
\t\t\tfn = tmp;\r\n
\t\t}\r\n
\r\n
\t\t// Quick check to determine if target is callable, in the spec\r\n
\t\t// this throws a TypeError, but we will just return undefined.\r\n
\t\tif ( !jQuery.isFunction( fn ) ) {\r\n
\t\t\treturn undefined;\r\n
\t\t}\r\n
\r\n
\t\t// Simulated bind\r\n
\t\tvar args = slice.call( arguments, 2 ),\r\n
\t\t\tproxy = function() {\r\n
\t\t\t\treturn fn.apply( context, args.concat( slice.call( arguments ) ) );\r\n
\t\t\t};\r\n
\r\n
\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\r\n
\t\tproxy.guid = fn.guid = fn.guid || proxy.guid || jQuery.guid++;\r\n
\r\n
\t\treturn proxy;\r\n
\t},\r\n
\r\n
\t// Mutifunctional method to get and set values to a collection\r\n
\t// The value/s can optionally be executed if it\'s a function\r\n
\taccess: function( elems, key, value, exec, fn, pass ) {\r\n
\t\tvar length = elems.length;\r\n
\r\n
\t\t// Setting many attributes\r\n
\t\tif ( typeof key === "object" ) {\r\n
\t\t\tfor ( var k in key ) {\r\n
\t\t\t\tjQuery.access( elems, k, key[k], exec, fn, value );\r\n
\t\t\t}\r\n
\t\t\treturn elems;\r\n
\t\t}\r\n
\r\n
\t\t// Setting one attribute\r\n
\t\tif ( value !== undefined ) {\r\n
\t\t\t// Optionally, function values get executed if exec is true\r\n
\t\t\texec = !pass && exec && jQuery.isFunction(value);\r\n
\r\n
\t\t\tfor ( var i = 0; i < length; i++ ) {\r\n
\t\t\t\tfn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass );\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn elems;\r\n
\t\t}\r\n
\r\n
\t\t// Getting an attribute\r\n
\t\treturn length ? fn( elems[0], key ) : undefined;\r\n
\t},\r\n
\r\n
\tnow: function() {\r\n
\t\treturn ( new Date() ).getTime();\r\n
\t},\r\n
\r\n
\t// Use of jQuery.browser is frowned upon.\r\n
\t// More details: http://docs.jquery.com/Utilities/jQuery.browser\r\n
\tuaMatch: function( ua ) {\r\n
\t\tua = ua.toLowerCase();\r\n
\r\n
\t\tvar match = rwebkit.exec( ua ) ||\r\n
\t\t\tropera.exec( ua ) ||\r\n
\t\t\trmsie.exec( ua ) ||\r\n
\t\t\tua.indexOf("compatible") < 0 && rmozilla.exec( ua ) ||\r\n
\t\t\t[];\r\n
\r\n
\t\treturn { browser: match[1] || "", version: match[2] || "0" };\r\n
\t},\r\n
\r\n
\tsub: function() {\r\n
\t\tfunction jQuerySub( selector, context ) {\r\n
\t\t\treturn new jQuerySub.fn.init( selector, context );\r\n
\t\t}\r\n
\t\tjQuery.extend( true, jQuerySub, this );\r\n
\t\tjQuerySub.superclass = this;\r\n
\t\tjQuerySub.fn = jQuerySub.prototype = this();\r\n
\t\tjQuerySub.fn.constructor = jQuerySub;\r\n
\t\tjQuerySub.sub = this.sub;\r\n
\t\tjQuerySub.fn.init = function init( selector, context ) {\r\n
\t\t\tif ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {\r\n
\t\t\t\tcontext = jQuerySub( context );\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn jQuery.fn.init.call( this, selector, context, rootjQuerySub );\r\n
\t\t};\r\n
\t\tjQuerySub.fn.init.prototype = jQuerySub.fn;\r\n
\t\tvar rootjQuerySub = jQuerySub(document);\r\n
\t\treturn jQuerySub;\r\n
\t},\r\n
\r\n
\tbrowser: {}\r\n
});\r\n
\r\n
// Populate the class2type map\r\n
jQuery.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(i, name) {\r\n
\tclass2type[ "[object " + name + "]" ] = name.toLowerCase();\r\n
});\r\n
\r\n
browserMatch = jQuery.uaMatch( userAgent );\r\n
if ( browserMatch.browser ) {\r\n
\tjQuery.browser[ browserMatch.browser ] = true;\r\n
\tjQuery.browser.version = browserMatch.version;\r\n
}\r\n
\r\n
// Deprecated, use jQuery.browser.webkit instead\r\n
if ( jQuery.browser.webkit ) {\r\n
\tjQuery.browser.safari = true;\r\n
}\r\n
\r\n
// IE doesn\'t match non-breaking spaces with \\s\r\n
if ( rnotwhite.test( "\\xA0" ) ) {\r\n
\ttrimLeft = /^[\\s\\xA0]+/;\r\n
\ttrimRight = /[\\s\\xA0]+$/;\r\n
}\r\n
\r\n
// All jQuery objects should point back to these\r\n
rootjQuery = jQuery(document);\r\n
\r\n
// Cleanup functions for the document ready method\r\n
if ( document.addEventListener ) {\r\n
\tDOMContentLoaded = function() {\r\n
\t\tdocument.removeEventListener( "DOMContentLoaded", DOMContentLoaded, false );\r\n
\t\tjQuery.ready();\r\n
\t};\r\n
\r\n
} else if ( document.attachEvent ) {\r\n
\tDOMContentLoaded = function() {\r\n
\t\t// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).\r\n
\t\tif ( document.readyState === "complete" ) {\r\n
\t\t\tdocument.detachEvent( "onreadystatechange", DOMContentLoaded );\r\n
\t\t\tjQuery.ready();\r\n
\t\t}\r\n
\t};\r\n
}\r\n
\r\n
// The DOM ready check for Internet Explorer\r\n
function doScrollCheck() {\r\n
\tif ( jQuery.isReady ) {\r\n
\t\treturn;\r\n
\t}\r\n
\r\n
\ttry {\r\n
\t\t// If IE is used, use the trick by Diego Perini\r\n
\t\t// http://javascript.nwbox.com/IEContentLoaded/\r\n
\t\tdocument.documentElement.doScroll("left");\r\n
\t} catch(e) {\r\n
\t\tsetTimeout( doScrollCheck, 1 );\r\n
\t\treturn;\r\n
\t}\r\n
\r\n
\t// and execute any waiting functions\r\n
\tjQuery.ready();\r\n
}\r\n
\r\n
return jQuery;\r\n
\r\n
})();\r\n
\r\n
\r\n
// String to Object flags format cache\r\n
var flagsCache = {};\r\n
\r\n
// Convert String-formatted flags into Object-formatted ones and store in cache\r\n
function createFlags( flags ) {\r\n
\tvar object = flagsCache[ flags ] = {},\r\n
\t\ti, length;\r\n
\tflags = flags.split( /\\s+/ );\r\n
\tfor ( i = 0, length = flags.length; i < length; i++ ) {\r\n
\t\tobject[ flags[i] ] = true;\r\n
\t}\r\n
\treturn object;\r\n
}\r\n
\r\n
/*\r\n
 * Create a callback list using the following parameters:\r\n
 *\r\n
 *\tflags:\tan optional list of space-separated flags that will change how\r\n
 *\t\t\tthe callback list behaves\r\n
 *\r\n
 * By default a callback list will act like an event callback list and can be\r\n
 * "fired" multiple times.\r\n
 *\r\n
 * Possible flags:\r\n
 *\r\n
 *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\r\n
 *\r\n
 *\tmemory:\t\t\twill keep track of previous values and will call any callback added\r\n
 *\t\t\t\t\tafter the list has been fired right away with the latest "memorized"\r\n
 *\t\t\t\t\tvalues (like a Deferred)\r\n
 *\r\n
 *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\r\n
 *\r\n
 *\tstopOnFalse:\tinterrupt callings when a callback returns false\r\n
 *\r\n
 */\r\n
jQuery.Callbacks = function( flags ) {\r\n
\r\n
\t// Convert flags from String-formatted to Object-formatted\r\n
\t// (we check in cache first)\r\n
\tflags = flags ? ( flagsCache[ flags ] || createFlags( flags ) ) : {};\r\n
\r\n
\tvar // Actual callback list\r\n
\t\tlist = [],\r\n
\t\t// Stack of fire calls for repeatable lists\r\n
\t\tstack = [],\r\n
\t\t// Last fire value (for non-forgettable lists)\r\n
\t\tmemory,\r\n
\t\t// Flag to know if list is currently firing\r\n
\t\tfiring,\r\n
\t\t// First callback to fire (used internally by add and fireWith)\r\n
\t\tfiringStart,\r\n
\t\t// End of the loop when firing\r\n
\t\tfiringLength,\r\n
\t\t// Index of currently firing callback (modified by remove if needed)\r\n
\t\tfiringIndex,\r\n
\t\t// Add one or several callbacks to the list\r\n
\t\tadd = function( args ) {\r\n
\t\t\tvar i,\r\n
\t\t\t\tlength,\r\n
\t\t\t\telem,\r\n
\t\t\t\ttype,\r\n
\t\t\t\tactual;\r\n
\t\t\tfor ( i = 0, length = args.length; i < length; i++ ) {\r\n
\t\t\t\telem = args[ i ];\r\n
\t\t\t\ttype = jQuery.type( elem );\r\n
\t\t\t\tif ( type === "array" ) {\r\n
\t\t\t\t\t// Inspect recursively\r\n
\t\t\t\t\tadd( elem );\r\n
\t\t\t\t} else if ( type === "function" ) {\r\n
\t\t\t\t\t// Add if not in unique mode and callback is not in\r\n
\t\t\t\t\tif ( !flags.unique || !self.has( elem ) ) {\r\n
\t\t\t\t\t\tlist.push( elem );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t},\r\n
\t\t// Fire callbacks\r\n
\t\tfire = function( context, args ) {\r\n
\t\t\targs = args || [];\r\n
\t\t\tmemory = !flags.memory || [ context, args ];\r\n
\t\t\tfiring = true;\r\n
\t\t\tfiringIndex = firingStart || 0;\r\n
\t\t\tfiringStart = 0;\r\n
\t\t\tfiringLength = list.length;\r\n
\t\t\tfor ( ; list && firingIndex < firingLength; firingIndex++ ) {\r\n
\t\t\t\tif ( list[ firingIndex ].apply( context, args ) === false && flags.stopOnFalse ) {\r\n
\t\t\t\t\tmemory = true; // Mark as halted\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t\tfiring = false;\r\n
\t\t\tif ( list ) {\r\n
\t\t\t\tif ( !flags.once ) {\r\n
\t\t\t\t\tif ( stack && stack.length ) {\r\n
\t\t\t\t\t\tmemory = stack.shift();\r\n
\t\t\t\t\t\tself.fireWith( memory[ 0 ], memory[ 1 ] );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t} else if ( memory === true ) {\r\n
\t\t\t\t\tself.disable();\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\tlist = [];\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t},\r\n
\t\t// Actual Callbacks object\r\n
\t\tself = {\r\n
\t\t\t// Add a callback or a collection of callbacks to the list\r\n
\t\t\tadd: function() {\r\n
\t\t\t\tif ( list ) {\r\n
\t\t\t\t\tvar length = list.length;\r\n
\t\t\t\t\tadd( arguments );\r\n
\t\t\t\t\t// Do we need to add the callbacks to the\r\n
\t\t\t\t\t// current firing batch?\r\n
\t\t\t\t\tif ( firing ) {\r\n
\t\t\t\t\t\tfiringLength = list.length;\r\n
\t\t\t\t\t// With memory, if we\'re not firing then\r\n
\t\t\t\t\t// we should call right away, unless previous\r\n
\t\t\t\t\t// firing was halted (stopOnFalse)\r\n
\t\t\t\t\t} else if ( memory && memory !== true ) {\r\n
\t\t\t\t\t\tfiringStart = length;\r\n
\t\t\t\t\t\tfire( memory[ 0 ], memory[ 1 ] );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t\treturn this;\r\n
\t\t\t},\r\n
\t\t\t// Remove a callback from the list\r\n
\t\t\tremove: function() {\r\n
\t\t\t\tif ( list ) {\r\n
\t\t\t\t\tvar args = arguments,\r\n
\t\t\t\t\t\targIndex = 0,\r\n
\t\t\t\t\t\targLength = args.length;\r\n
\t\t\t\t\tfor ( ; argIndex < argLength ; argIndex++ ) {\r\n
\t\t\t\t\t\tfor ( var i = 0; i < list.length; i++ ) {\r\n
\t\t\t\t\t\t\tif ( args[ argIndex ] === list[ i ] ) {\r\n
\t\t\t\t\t\t\t\t// Handle firingIndex and firingLength\r\n
\t\t\t\t\t\t\t\tif ( firing ) {\r\n
\t\t\t\t\t\t\t\t\tif ( i <= firingLength ) {\r\n
\t\t\t\t\t\t\t\t\t\tfiringLength--;\r\n
\t\t\t\t\t\t\t\t\t\tif ( i <= firingIndex ) {\r\n
\t\t\t\t\t\t\t\t\t\t\tfiringIndex--;\r\n
\t\t\t\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t\t\t// Remove the element\r\n
\t\t\t\t\t\t\t\tlist.splice( i--, 1 );\r\n
\t\t\t\t\t\t\t\t// If we have some unicity property then\r\n
\t\t\t\t\t\t\t\t// we only need to do this once\r\n
\t\t\t\t\t\t\t\tif ( flags.unique ) {\r\n
\t\t\t\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t\treturn this;\r\n
\t\t\t},\r\n
\t\t\t// Control if a given callback is in the list\r\n
\t\t\thas: function( fn ) {\r\n
\t\t\t\tif ( list ) {\r\n
\t\t\t\t\tvar i = 0,\r\n
\t\t\t\t\t\tlength = list.length;\r\n
\t\t\t\t\tfor ( ; i < length; i++ ) {\r\n
\t\t\t\t\t\tif ( fn === list[ i ] ) {\r\n
\t\t\t\t\t\t\treturn true;\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t\treturn false;\r\n
\t\t\t},\r\n
\t\t\t// Remove all callbacks from the list\r\n
\t\t\tempty: function() {\r\n
\t\t\t\tlist = [];\r\n
\t\t\t\treturn this;\r\n
\t\t\t},\r\n
\t\t\t// Have the list do nothing anymore\r\n
\t\t\tdisable: function() {\r\n
\t\t\t\tlist = stack = memory = undefined;\r\n
\t\t\t\treturn this;\r\n
\t\t\t},\r\n
\t\t\t// Is it disabled?\r\n
\t\t\tdisabled: function() {\r\n
\t\t\t\treturn !list;\r\n
\t\t\t},\r\n
\t\t\t// Lock the list in its current state\r\n
\t\t\tlock: function() {\r\n
\t\t\t\tstack = undefined;\r\n
\t\t\t\tif ( !memory || memory === true ) {\r\n
\t\t\t\t\tself.disable();\r\n
\t\t\t\t}\r\n
\t\t\t\treturn this;\r\n
\t\t\t},\r\n
\t\t\t// Is it locked?\r\n
\t\t\tlocked: function() {\r\n
\t\t\t\treturn !stack;\r\n
\t\t\t},\r\n
\t\t\t// Call all callbacks with the given context and arguments\r\n
\t\t\tfireWith: function( context, args ) {\r\n
\t\t\t\tif ( stack ) {\r\n
\t\t\t\t\tif ( firing ) {\r\n
\t\t\t\t\t\tif ( !flags.once ) {\r\n
\t\t\t\t\t\t\tstack.push( [ context, args ] );\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t} else if ( !( flags.once && memory ) ) {\r\n
\t\t\t\t\t\tfire( context, args );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t\treturn this;\r\n
\t\t\t},\r\n
\t\t\t// Call all the callbacks with the given arguments\r\n
\t\t\tfire: function() {\r\n
\t\t\t\tself.fireWith( this, arguments );\r\n
\t\t\t\treturn this;\r\n
\t\t\t},\r\n
\t\t\t// To know if the callbacks have already been called at least once\r\n
\t\t\tfired: function() {\r\n
\t\t\t\treturn !!memory;\r\n
\t\t\t}\r\n
\t\t};\r\n
\r\n
\treturn self;\r\n
};\r\n
\r\n
\r\n
\r\n
\r\n
var // Static reference to slice\r\n
\tsliceDeferred = [].slice;\r\n
\r\n
jQuery.extend({\r\n
\r\n
\tDeferred: function( func ) {\r\n
\t\tvar doneList = jQuery.Callbacks( "once memory" ),\r\n
\t\t\tfailList = jQuery.Callbacks( "once memory" ),\r\n
\t\t\tprogressList = jQuery.Callbacks( "memory" ),\r\n
\t\t\tstate = "pending",\r\n
\t\t\tlists = {\r\n
\t\t\t\tresolve: doneList,\r\n
\t\t\t\treject: failList,\r\n
\t\t\t\tnotify: progressList\r\n
\t\t\t},\r\n
\t\t\tpromise = {\r\n
\t\t\t\tdone: doneList.add,\r\n
\t\t\t\tfail: failList.add,\r\n
\t\t\t\tprogress: progressList.add,\r\n
\r\n
\t\t\t\tstate: function() {\r\n
\t\t\t\t\treturn state;\r\n
\t\t\t\t},\r\n
\r\n
\t\t\t\t// Deprecated\r\n
\t\t\t\tisResolved: doneList.fired,\r\n
\t\t\t\tisRejected: failList.fired,\r\n
\r\n
\t\t\t\tthen: function( doneCallbacks, failCallbacks, progressCallbacks ) {\r\n
\t\t\t\t\tdeferred.done( doneCallbacks ).fail( failCallbacks ).progress( progressCallbacks );\r\n
\t\t\t\t\treturn this;\r\n
\t\t\t\t},\r\n
\t\t\t\talways: function() {\r\n
\t\t\t\t\tdeferred.done.apply( deferred, arguments ).fail.apply( deferred, arguments );\r\n
\t\t\t\t\treturn this;\r\n
\t\t\t\t},\r\n
\t\t\t\tpipe: function( fnDone, fnFail, fnProgress ) {\r\n
\t\t\t\t\treturn jQuery.Deferred(function( newDefer ) {\r\n
\t\t\t\t\t\tjQuery.each( {\r\n
\t\t\t\t\t\t\tdone: [ fnDone, "resolve" ],\r\n
\t\t\t\t\t\t\tfail: [ fnFail, "reject" ],\r\n
\t\t\t\t\t\t\tprogress: [ fnProgress, "notify" ]\r\n
\t\t\t\t\t\t}, function( handler, data ) {\r\n
\t\t\t\t\t\t\tvar fn = data[ 0 ],\r\n
\t\t\t\t\t\t\t\taction = data[ 1 ],\r\n
\t\t\t\t\t\t\t\treturned;\r\n
\t\t\t\t\t\t\tif ( jQuery.isFunction( fn ) ) {\r\n
\t\t\t\t\t\t\t\tdeferred[ handler ](function() {\r\n
\t\t\t\t\t\t\t\t\treturned = fn.apply( this, arguments );\r\n
\t\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\r\n
\t\t\t\t\t\t\t\t\t\treturned.promise().then( newDefer.resolve, newDefer.reject, newDefer.notify );\r\n
\t\t\t\t\t\t\t\t\t} else {\r\n
\t\t\t\t\t\t\t\t\t\tnewDefer[ action + "With" ]( this === deferred ? newDefer : this, [ returned ] );\r\n
\t\t\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t\t\t});\r\n
\t\t\t\t\t\t\t} else {\r\n
\t\t\t\t\t\t\t\tdeferred[ handler ]( newDefer[ action ] );\r\n
\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t});\r\n
\t\t\t\t\t}).promise();\r\n
\t\t\t\t},\r\n
\t\t\t\t// Get a promise for this deferred\r\n
\t\t\t\t// If obj is provided, the promise aspect is added to the object\r\n
\t\t\t\tpromise: function( obj ) {\r\n
\t\t\t\t\tif ( obj == null ) {\r\n
\t\t\t\t\t\tobj = promise;\r\n
\t\t\t\t\t} else {\r\n
\t\t\t\t\t\tfor ( var key in promise ) {\r\n
\t\t\t\t\t\t\tobj[ key ] = promise[ key ];\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\treturn obj;\r\n
\t\t\t\t}\r\n
\t\t\t},\r\n
\t\t\tdeferred = promise.promise({}),\r\n
\t\t\tkey;\r\n
\r\n
\t\tfor ( key in lists ) {\r\n
\t\t\tdeferred[ key ] = lists[ key ].fire;\r\n
\t\t\tdeferred[ key + "With" ] = lists[ key ].fireWith;\r\n
\t\t}\r\n
\r\n
\t\t// Handle state\r\n
\t\tdeferred.done( function() {\r\n
\t\t\tstate = "resolved";\r\n
\t\t}, failList.disable, progressList.lock ).fail( function() {\r\n
\t\t\tstate = "rejected";\r\n
\t\t}, doneList.disable, progressList.lock );\r\n
\r\n
\t\t// Call given func if any\r\n
\t\tif ( func ) {\r\n
\t\t\tfunc.call( deferred, deferred );\r\n
\t\t}\r\n
\r\n
\t\t// All done!\r\n
\t\treturn deferred;\r\n
\t},\r\n
\r\n
\t// Deferred helper\r\n
\twhen: function( firstParam ) {\r\n
\t\tvar args = sliceDeferred.call( arguments, 0 ),\r\n
\t\t\ti = 0,\r\n
\t\t\tlength = args.length,\r\n
\t\t\tpValues = new Array( length ),\r\n
\t\t\tcount = length,\r\n
\t\t\tpCount = length,\r\n
\t\t\tdeferred = length <= 1 && firstParam && jQuery.isFunction( firstParam.promise ) ?\r\n
\t\t\t\tfirstParam :\r\n
\t\t\t\tjQuery.Deferred(),\r\n
\t\t\tpromise = deferred.promise();\r\n
\t\tfunction resolveFunc( i ) {\r\n
\t\t\treturn function( value ) {\r\n
\t\t\t\targs[ i ] = arguments.length > 1 ? sliceDeferred.call( arguments, 0 ) : value;\r\n
\t\t\t\tif ( !( --count ) ) {\r\n
\t\t\t\t\tdeferred.resolveWith( deferred, args );\r\n
\t\t\t\t}\r\n
\t\t\t};\r\n
\t\t}\r\n
\t\tfunction progressFunc( i ) {\r\n
\t\t\treturn function( value ) {\r\n
\t\t\t\tpValues[ i ] = arguments.length > 1 ? sliceDeferred.call( arguments, 0 ) : value;\r\n
\t\t\t\tdeferred.notifyWith( promise, pValues );\r\n
\t\t\t};\r\n
\t\t}\r\n
\t\tif ( length > 1 ) {\r\n
\t\t\tfor ( ; i < length; i++ ) {\r\n
\t\t\t\tif ( args[ i ] && args[ i ].promise && jQuery.isFunction( args[ i ].promise ) ) {\r\n
\t\t\t\t\targs[ i ].promise().then( resolveFunc(i), deferred.reject, progressFunc(i) );\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\t--count;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t\tif ( !count ) {\r\n
\t\t\t\tdeferred.resolveWith( deferred, args );\r\n
\t\t\t}\r\n
\t\t} else if ( deferred !== firstParam ) {\r\n
\t\t\tdeferred.resolveWith( deferred, length ? [ firstParam ] : [] );\r\n
\t\t}\r\n
\t\treturn promise;\r\n
\t}\r\n
});\r\n
\r\n
\r\n
\r\n
\r\n
jQuery.support = (function() {\r\n
\r\n
\tvar support,\r\n
\t\tall,\r\n
\t\ta,\r\n
\t\tselect,\r\n
\t\topt,\r\n
\t\tinput,\r\n
\t\tmarginDiv,\r\n
\t\tfragment,\r\n
\t\ttds,\r\n
\t\tevents,\r\n
\t\teventName,\r\n
\t\ti,\r\n
\t\tisSupported,\r\n
\t\tdiv = document.createElement( "div" ),\r\n
\t\tdocumentElement = document.documentElement;\r\n
\r\n
\t// Preliminary tests\r\n
\tdiv.setAttribute("className", "t");\r\n
\tdiv.innerHTML = "   <link/><table></table><a href=\'/a\' style=\'top:1px;float:left;opacity:.55;\'>a</a><input type=\'checkbox\'/>";\r\n
\r\n
\tall = div.getElementsByTagName( "*" );\r\n
\ta = div.getElementsByTagName( "a" )[ 0 ];\r\n
\r\n
\t// Can\'t get basic test support\r\n
\tif ( !all || !all.length || !a ) {\r\n
\t\treturn {};\r\n
\t}\r\n
\r\n
\t// First batch of supports tests\r\n
\tselect = document.createElement( "select" );\r\n
\topt = select.appendChild( document.createElement("option") );\r\n
\tinput = div.getElementsByTagName( "input" )[ 0 ];\r\n
\r\n
\tsupport = {\r\n
\t\t// IE strips leading whitespace when .innerHTML is used\r\n
\t\tleadingWhitespace: ( div.firstChild.nodeType === 3 ),\r\n
\r\n
\t\t// Make sure that tbody elements aren\'t automatically inserted\r\n
\t\t// IE will insert them into empty tables\r\n
\t\ttbody: !div.getElementsByTagName("tbody").length,\r\n
\r\n
\t\t// Make sure that link elements get serialized correctly by innerHTML\r\n
\t\t// This requires a wrapper element in IE\r\n
\t\thtmlSerialize: !!div.getElementsByTagName("link").length,\r\n
\r\n
\t\t// Get the style information from getAttribute\r\n
\t\t// (IE uses .cssText instead)\r\n
\t\tstyle: /top/.test( a.getAttribute("style") ),\r\n
\r\n
\t\t// Make sure that URLs aren\'t manipulated\r\n
\t\t// (IE normalizes it by default)\r\n
\t\threfNormalized: ( a.getAttribute("href") === "/a" ),\r\n
\r\n
\t\t// Make sure that element opacity exists\r\n
\t\t// (IE uses filter instead)\r\n
\t\t// Use a regex to work around a WebKit issue. See #5145\r\n
\t\topacity: /^0.55/.test( a.style.opacity ),\r\n
\r\n
\t\t// Verify style float existence\r\n
\t\t// (IE uses styleFloat instead of cssFloat)\r\n
\t\tcssFloat: !!a.style.cssFloat,\r\n
\r\n
\t\t// Make sure that if no value is specified for a checkbox\r\n
\t\t// that it defaults to "on".\r\n
\t\t// (WebKit defaults to "" instead)\r\n
\t\tcheckOn: ( input.value === "on" ),\r\n
\r\n
\t\t// Make sure that a selected-by-default option has a working selected property.\r\n
\t\t// (WebKit defaults to false instead of true, IE too, if it\'s in an optgroup)\r\n
\t\toptSelected: opt.selected,\r\n
\r\n
\t\t// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)\r\n
\t\tgetSetAttribute: div.className !== "t",\r\n
\r\n
\t\t// Tests for enctype support on a form(#6743)\r\n
\t\tenctype: !!document.createElement("form").enctype,\r\n
\r\n
\t\t// Makes sure cloning an html5 element does not cause problems\r\n
\t\t// Where outerHTML is undefined, this still works\r\n
\t\thtml5Clone: document.createElement("nav").cloneNode( true ).outerHTML !== "<:nav></:nav>",\r\n
\r\n
\t\t// Will be defined later\r\n
\t\tsubmitBubbles: true,\r\n
\t\tchangeBubbles: true,\r\n
\t\tfocusinBubbles: false,\r\n
\t\tdeleteExpando: true,\r\n
\t\tnoCloneEvent: true,\r\n
\t\tinlineBlockNeedsLayout: false,\r\n
\t\tshrinkWrapBlocks: false,\r\n
\t\treliableMarginRight: true\r\n
\t};\r\n
\r\n
\t// Make sure checked status is properly cloned\r\n
\tinput.checked = true;\r\n
\tsupport.noCloneChecked = input.cloneNode( true ).checked;\r\n
\r\n
\t// Make sure that the options inside disabled selects aren\'t marked as disabled\r\n
\t// (WebKit marks them as disabled)\r\n
\tselect.disabled = true;\r\n
\tsupport.optDisabled = !opt.disabled;\r\n
\r\n
\t// Test to see if it\'s possible to delete an expando from an element\r\n
\t// Fails in Internet Explorer\r\n
\ttry {\r\n
\t\tdelete div.test;\r\n
\t} catch( e ) {\r\n
\t\tsupport.deleteExpando = false;\r\n
\t}\r\n
\r\n
\tif ( !div.addEventListener && div.attachEvent && div.fireEvent ) {\r\n
\t\tdiv.attachEvent( "onclick", function() {\r\n
\t\t\t// Cloning a node shouldn\'t copy over any\r\n
\t\t\t// bound event handlers (IE does this)\r\n
\t\t\tsupport.noCloneEvent = false;\r\n
\t\t});\r\n
\t\tdiv.cloneNode( true ).fireEvent( "onclick" );\r\n
\t}\r\n
\r\n
\t// Check if a radio maintains its value\r\n
\t// after being appended to the DOM\r\n
\tinput = document.createElement("input");\r\n
\tinput.value = "t";\r\n
\tinput.setAttribute("type", "radio");\r\n
\tsupport.radioValue = input.value === "t";\r\n
\r\n
\tinput.setAttribute("checked", "checked");\r\n
\tdiv.appendChild( input );\r\n
\tfragment = document.createDocumentFragment();\r\n
\tfragment.appendChild( div.lastChild );\r\n
\r\n
\t// WebKit doesn\'t clone checked state correctly in fragments\r\n
\tsupport.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;\r\n
\r\n
\t// Check if a disconnected checkbox will retain its checked\r\n
\t// value of true after appended to the DOM (IE6/7)\r\n
\tsupport.appendChecked = input.checked;\r\n
\r\n
\tfragment.removeChild( input );\r\n
\tfragment.appendChild( div );\r\n
\r\n
\tdiv.innerHTML = "";\r\n
\r\n
\t// Check if div with explicit width and no margin-right incorrectly\r\n
\t// gets computed margin-right based on width of container. For more\r\n
\t// info see bug #3333\r\n
\t// Fails in WebKit before Feb 2011 nightlies\r\n
\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\r\n
\tif ( window.getComputedStyle ) {\r\n
\t\tmarginDiv = document.createElement( "div" );\r\n
\t\tmarginDiv.style.width = "0";\r\n
\t\tmarginDiv.style.marginRight = "0";\r\n
\t\tdiv.style.width = "2px";\r\n
\t\tdiv.appendChild( marginDiv );\r\n
\t\tsupport.reliableMarginRight =\r\n
\t\t\t( parseInt( ( window.getComputedStyle( marginDiv, null ) || { marginRight: 0 } ).marginRight, 10 ) || 0 ) === 0;\r\n
\t}\r\n
\r\n
\t// Technique from Juriy Zaytsev\r\n
\t// http://perfectionkills.com/detecting-event-support-without-browser-sniffing/\r\n
\t// We only care about the case where non-standard event systems\r\n
\t// are used, namely in IE. Short-circuiting here helps us to\r\n
\t// avoid an eval call (in setAttribute) which can cause CSP\r\n
\t// to go haywire. See: https://developer.mozilla.org/en/Security/CSP\r\n
\tif ( div.attachEvent ) {\r\n
\t\tfor( i in {\r\n
\t\t\tsubmit: 1,\r\n
\t\t\tchange: 1,\r\n
\t\t\tfocusin: 1\r\n
\t\t}) {\r\n
\t\t\teventName = "on" + i;\r\n
\t\t\tisSupported = ( eventName in div );\r\n
\t\t\tif ( !isSupported ) {\r\n
\t\t\t\tdiv.setAttribute( eventName, "return;" );\r\n
\t\t\t\tisSupported = ( typeof div[ eventName ] === "function" );\r\n
\t\t\t}\r\n
\t\t\tsupport[ i + "Bubbles" ] = isSupported;\r\n
\t\t}\r\n
\t}\r\n
\r\n
\tfragment.removeChild( div );\r\n
\r\n
\t// Null elements to avoid leaks in IE\r\n
\tfragment = select = opt = marginDiv = div = input = null;\r\n
\r\n
\t// Run tests that need a body at doc ready\r\n
\tjQuery(function() {\r\n
\t\tvar container, outer, inner, table, td, offsetSupport,\r\n
\t\t\tconMarginTop, ptlm, vb, style, html,\r\n
\t\t\tbody = document.getElementsByTagName("body")[0];\r\n
\r\n
\t\tif ( !body ) {\r\n
\t\t\t// Return for frameset docs that don\'t have a body\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\tconMarginTop = 1;\r\n
\t\tptlm = "position:absolute;top:0;left:0;width:1px;height:1px;margin:0;";\r\n
\t\tvb = "visibility:hidden;border:0;";\r\n
\t\tstyle = "style=\'" + ptlm + "border:5px solid #000;padding:0;\'";\r\n
\t\thtml = "<div " + style + "><div></div></div>" +\r\n
\t\t\t"<table " + style + " cellpadding=\'0\' cellspacing=\'0\'>" +\r\n
\t\t\t"<tr><td></td></tr></table>";\r\n
\r\n
\t\tcontainer = document.createElement("div");\r\n
\t\tcontainer.style.cssText = vb + "width:0;height:0;position:static;top:0;margin-top:" + conMarginTop + "px";\r\n
\t\tbody.insertBefore( container, body.firstChild );\r\n
\r\n
\t\t// Construct the test element\r\n
\t\tdiv = document.createElement("div");\r\n
\t\tcontainer.appendChild( div );\r\n
\r\n
\t\t// Check if table cells still have offsetWidth/Height when they are set\r\n
\t\t// to display:none and there are still other visible table cells in a\r\n
\t\t// table row; if so, offsetWidth/Height are not reliable for use when\r\n
\t\t// determining if an element has been hidden directly using\r\n
\t\t// display:none (it is still safe to use offsets if a parent element is\r\n
\t\t// hidden; don safety goggles and see bug #4512 for more information).\r\n
\t\t// (only IE 8 fails this test)\r\n
\t\tdiv.innerHTML = "<table><tr><td style=\'padding:0;border:0;display:none\'></td><td>t</td></tr></table>";\r\n
\t\ttds = div.getElementsByTagName( "td" );\r\n
\t\tisSupported = ( tds[ 0 ].offsetHeight === 0 );\r\n
\r\n
\t\ttds[ 0 ].style.display = "";\r\n
\t\ttds[ 1 ].style.display = "none";\r\n
\r\n
\t\t// Check if empty table cells still have offsetWidth/Height\r\n
\t\t// (IE <= 8 fail this test)\r\n
\t\tsupport.reliableHiddenOffsets = isSupported && ( tds[ 0 ].offsetHeight === 0 );\r\n
\r\n
\t\t// Figure out if the W3C box model works as expected\r\n
\t\tdiv.innerHTML = "";\r\n
\t\tdiv.style.width = div.style.paddingLeft = "1px";\r\n
\t\tjQuery.boxModel = support.boxModel = div.offsetWidth === 2;\r\n
\r\n
\t\tif ( typeof div.style.zoom !== "undefined" ) {\r\n
\t\t\t// Check if natively block-level elements act like inline-block\r\n
\t\t\t// elements when setting their display to \'inline\' and giving\r\n
\t\t\t// them layout\r\n
\t\t\t// (IE < 8 does this)\r\n
\t\t\tdiv.style.display = "inline";\r\n
\t\t\tdiv.style.zoom = 1;\r\n
\t\t\tsupport.inlineBlockNeedsLayout = ( div.offsetWidth === 2 );\r\n
\r\n
\t\t\t// Check if elements with layout shrink-wrap their children\r\n
\t\t\t// (IE 6 does this)\r\n
\t\t\tdiv.style.display = "";\r\n
\t\t\tdiv.innerHTML = "<div style=\'width:4px;\'></div>";\r\n
\t\t\tsupport.shrinkWrapBlocks = ( div.offsetWidth !== 2 );\r\n
\t\t}\r\n
\r\n
\t\tdiv.style.cssText = ptlm + vb;\r\n
\t\tdiv.innerHTML = html;\r\n
\r\n
\t\touter = div.firstChild;\r\n
\t\tinner = outer.firstChild;\r\n
\t\ttd = outer.nextSibling.firstChild.firstChild;\r\n
\r\n
\t\toffsetSupport = {\r\n
\t\t\tdoesNotAddBorder: ( inner.offsetTop !== 5 ),\r\n
\t\t\tdoesAddBorderForTableAndCells: ( td.offsetTop === 5 )\r\n
\t\t};\r\n
\r\n
\t\tinner.style.position = "fixed";\r\n
\t\tinner.style.top = "20px";\r\n
\r\n
\t\t// safari subtracts parent border width here which is 5px\r\n
\t\toffsetSupport.fixedPosition = ( inner.offsetTop === 20 || inner.offsetTop === 15 );\r\n
\t\tinner.style.position = inner.style.top = "";\r\n
\r\n
\t\touter.style.overflow = "hidden";\r\n
\t\touter.style.position = "relative";\r\n
\r\n
\t\toffsetSupport.subtractsBorderForOverflowNotVisible = ( inner.offsetTop === -5 );\r\n
\t\toffsetSupport.doesNotIncludeMarginInBodyOffset = ( body.offsetTop !== conMarginTop );\r\n
\r\n
\t\tbody.removeChild( container );\r\n
\t\tdiv  = container = null;\r\n
\r\n
\t\tjQuery.extend( support, offsetSupport );\r\n
\t});\r\n
\r\n
\treturn support;\r\n
})();\r\n
\r\n
\r\n
\r\n
\r\n
var rbrace = /^(?:\\{.*\\}|\\[.*\\])$/,\r\n
\trmultiDash = /([A-Z])/g;\r\n
\r\n
jQuery.extend({\r\n
\tcache: {},\r\n
\r\n
\t// Please use with caution\r\n
\tuuid: 0,\r\n
\r\n
\t// Unique for each copy of jQuery on the page\r\n
\t// Non-digits removed to match rinlinejQuery\r\n
\texpando: "jQuery" + ( jQuery.fn.jquery + Math.random() ).replace( /\\D/g, "" ),\r\n
\r\n
\t// The following elements throw uncatchable exceptions if you\r\n
\t// attempt to add expando properties to them.\r\n
\tnoData: {\r\n
\t\t"embed": true,\r\n
\t\t// Ban all objects except for Flash (which handle expandos)\r\n
\t\t"object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",\r\n
\t\t"applet": true\r\n
\t},\r\n
\r\n
\thasData: function( elem ) {\r\n
\t\telem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];\r\n
\t\treturn !!elem && !isEmptyDataObject( elem );\r\n
\t},\r\n
\r\n
\tdata: function( elem, name, data, pvt /* Internal Use Only */ ) {\r\n
\t\tif ( !jQuery.acceptData( elem ) ) {\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\tvar privateCache, thisCache, ret,\r\n
\t\t\tinternalKey = jQuery.expando,\r\n
\t\t\tgetByName = typeof name === "string",\r\n
\r\n
\t\t\t// We have to handle DOM nodes and JS objects differently because IE6-7\r\n
\t\t\t// can\'t GC object references properly across the DOM-JS boundary\r\n
\t\t\tisNode = elem.nodeType,\r\n
\r\n
\t\t\t// Only DOM nodes need the global jQuery cache; JS object data is\r\n
\t\t\t// attached directly to the object so GC can occur automatically\r\n
\t\t\tcache = isNode ? jQuery.cache : elem,\r\n
\r\n
\t\t\t// Only defining an ID for JS objects if its cache already exists allows\r\n
\t\t\t// the code to shortcut on the same path as a DOM node with no cache\r\n
\t\t\tid = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey,\r\n
\t\t\tisEvents = name === "events";\r\n
\r\n
\t\t// Avoid doing any more work than we need to when trying to get data on an\r\n
\t\t// object that has no data at all\r\n
\t\tif ( (!id || !cache[id] || (!isEvents && !pvt && !cache[id].data)) && getByName && data === undefined ) {\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\tif ( !id ) {\r\n
\t\t\t// Only DOM nodes need a new unique ID for each element since their data\r\n
\t\t\t// ends up in the global cache\r\n
\t\t\tif ( isNode ) {\r\n
\t\t\t\telem[ internalKey ] = id = ++jQuery.uuid;\r\n
\t\t\t} else {\r\n
\t\t\t\tid = internalKey;\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\tif ( !cache[ id ] ) {\r\n
\t\t\tcache[ id ] = {};\r\n
\r\n
\t\t\t// Avoids exposing jQuery metadata on plain JS objects when the object\r\n
\t\t\t// is serialized using JSON.stringify\r\n
\t\t\tif ( !isNode ) {\r\n
\t\t\t\tcache[ id ].toJSON = jQuery.noop;\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\t// An object can be passed to jQuery.data instead of a key/value pair; this gets\r\n
\t\t// shallow copied over onto the existing cache\r\n
\t\tif ( typeof name === "object" || typeof name === "function" ) {\r\n
\t\t\tif ( pvt ) {\r\n
\t\t\t\tcache[ id ] = jQuery.extend( cache[ id ], name );\r\n
\t\t\t} else {\r\n
\t\t\t\tcache[ id ].data = jQuery.extend( cache[ id ].data, name );\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\tprivateCache = thisCache = cache[ id ];\r\n
\r\n
\t\t// jQuery data() is stored in a separate object inside the object\'s internal data\r\n
\t\t// cache in order to avoid key collisions between internal data and user-defined\r\n
\t\t// data.\r\n
\t\tif ( !pvt ) {\r\n
\t\t\tif ( !thisCache.data ) {\r\n
\t\t\t\tthisCache.data = {};\r\n
\t\t\t}\r\n
\r\n
\t\t\tthisCache = thisCache.data;\r\n
\t\t}\r\n
\r\n
\t\tif ( data !== undefined ) {\r\n
\t\t\tthisCache[ jQuery.camelCase( name ) ] = data;\r\n
\t\t}\r\n
\r\n
\t\t// Users should not attempt to inspect the internal events object using jQuery.data,\r\n
\t\t// it is undocumented and subject to change. But does anyone listen? No.\r\n
\t\tif ( isEvents && !thisCache[ name ] ) {\r\n
\t\t\treturn privateCache.events;\r\n
\t\t}\r\n
\r\n
\t\t// Check for both converted-to-camel and non-converted data property names\r\n
\t\t// If a data property was specified\r\n
\t\tif ( getByName ) {\r\n
\r\n
\t\t\t// First Try to find as-is property data\r\n
\t\t\tret = thisCache[ name ];\r\n
\r\n
\t\t\t// Test for null|undefined property data\r\n
\t\t\tif ( ret == null ) {\r\n
\r\n
\t\t\t\t// Try to find the camelCased property\r\n
\t\t\t\tret = thisCache[ jQuery.camelCase( name ) ];\r\n
\t\t\t}\r\n
\t\t} else {\r\n
\t\t\tret = thisCache;\r\n
\t\t}\r\n
\r\n
\t\treturn ret;\r\n
\t},\r\n
\r\n
\tremoveData: function( elem, name, pvt /* Internal Use Only */ ) {\r\n
\t\tif ( !jQuery.acceptData( elem ) ) {\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\tvar thisCache, i, l,\r\n
\r\n
\t\t\t// Reference to internal data cache key\r\n
\t\t\tinternalKey = jQuery.expando,\r\n
\r\n
\t\t\tisNode = elem.nodeType,\r\n
\r\n
\t\t\t// See jQuery.data for more information\r\n
\t\t\tcache = isNode ? jQuery.cache : elem,\r\n
\r\n
\t\t\t// See jQuery.data for more information\r\n
\t\t\tid = isNode ? elem[ internalKey ] : internalKey;\r\n
\r\n
\t\t// If there is already no cache entry for this object, there is no\r\n
\t\t// purpose in continuing\r\n
\t\tif ( !cache[ id ] ) {\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\tif ( name ) {\r\n
\r\n
\t\t\tthisCache = pvt ? cache[ id ] : cache[ id ].data;\r\n
\r\n
\t\t\tif ( thisCache ) {\r\n
\r\n
\t\t\t\t// Support array or space separated string names for data keys\r\n
\t\t\t\tif ( !jQuery.isArray( name ) ) {\r\n
\r\n
\t\t\t\t\t// try the string as a key before any manipulation\r\n
\t\t\t\t\tif ( name in thisCache ) {\r\n
\t\t\t\t\t\tname = [ name ];\r\n
\t\t\t\t\t} else {\r\n
\r\n
\t\t\t\t\t\t// split the camel cased version by spaces unless a key with the spaces exists\r\n
\t\t\t\t\t\tname = jQuery.camelCase( name );\r\n
\t\t\t\t\t\tif ( name in thisCache ) {\r\n
\t\t\t\t\t\t\tname = [ name ];\r\n
\t\t\t\t\t\t} else {\r\n
\t\t\t\t\t\t\tname = name.split( " " );\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tfor ( i = 0, l = name.length; i < l; i++ ) {\r\n
\t\t\t\t\tdelete thisCache[ name[i] ];\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\t// If there is no data left in the cache, we want to continue\r\n
\t\t\t\t// and let the cache object itself get destroyed\r\n
\t\t\t\tif ( !( pvt ? isEmptyDataObject : jQuery.isEmptyObject )( thisCache ) ) {\r\n
\t\t\t\t\treturn;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\t// See jQuery.data for more information\r\n
\t\tif ( !pvt ) {\r\n
\t\t\tdelete cache[ id ].data;\r\n
\r\n
\t\t\t// Don\'t destroy the parent cache unless the internal data object\r\n
\t\t\t// had been the only thing left in it\r\n
\t\t\tif ( !isEmptyDataObject(cache[ id ]) ) {\r\n
\t\t\t\treturn;\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\t// Browsers that fail expando deletion also refuse to delete expandos on\r\n
\t\t// the window, but it will allow it on all other JS objects; other browsers\r\n
\t\t// don\'t care\r\n
\t\t// Ensure that `cache` is not a window object #10080\r\n
\t\tif ( jQuery.support.deleteExpando || !cache.setInterval ) {\r\n
\t\t\tdelete cache[ id ];\r\n
\t\t} else {\r\n
\t\t\tcache[ id ] = null;\r\n
\t\t}\r\n
\r\n
\t\t// We destroyed the cache and need to eliminate the expando on the node to avoid\r\n
\t\t// false lookups in the cache for entries that no longer exist\r\n
\t\tif ( isNode ) {\r\n
\t\t\t// IE does not allow us to delete expando properties from nodes,\r\n
\t\t\t// nor does it have a removeAttribute function on Document nodes;\r\n
\t\t\t// we must handle all of these cases\r\n
\t\t\tif ( jQuery.support.deleteExpando ) {\r\n
\t\t\t\tdelete elem[ internalKey ];\r\n
\t\t\t} else if ( elem.removeAttribute ) {\r\n
\t\t\t\telem.removeAttribute( internalKey );\r\n
\t\t\t} else {\r\n
\t\t\t\telem[ internalKey ] = null;\r\n
\t\t\t}\r\n
\t\t}\r\n
\t},\r\n
\r\n
\t// For internal use only.\r\n
\t_data: function( elem, name, data ) {\r\n
\t\treturn jQuery.data( elem, name, data, true );\r\n
\t},\r\n
\r\n
\t// A method for determining if a DOM node can handle the data expando\r\n
\tacceptData: function( elem ) {\r\n
\t\tif ( elem.nodeName ) {\r\n
\t\t\tvar match = jQuery.noData[ elem.nodeName.toLowerCase() ];\r\n
\r\n
\t\t\tif ( match ) {\r\n
\t\t\t\treturn !(match === true || elem.getAttribute("classid") !== match);\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn true;\r\n
\t}\r\n
});\r\n
\r\n
jQuery.fn.extend({\r\n
\tdata: function( key, value ) {\r\n
\t\tvar parts, attr, name,\r\n
\t\t\tdata = null;\r\n
\r\n
\t\tif ( typeof key === "undefined" ) {\r\n
\t\t\tif ( this.length ) {\r\n
\t\t\t\tdata = jQuery.data( this[0] );\r\n
\r\n
\t\t\t\tif ( this[0].nodeType === 1 && !jQuery._data( this[0], "parsedAttrs" ) ) {\r\n
\t\t\t\t\tattr = this[0].attributes;\r\n
\t\t\t\t\tfor ( var i = 0, l = attr.length; i < l; i++ ) {\r\n
\t\t\t\t\t\tname = attr[i].name;\r\n
\r\n
\t\t\t\t\t\tif ( name.indexOf( "data-" ) === 0 ) {\r\n
\t\t\t\t\t\t\tname = jQuery.camelCase( name.substring(5) );\r\n
\r\n
\t\t\t\t\t\t\tdataAttr( this[0], name, data[ name ] );\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\tjQuery._data( this[0], "parsedAttrs", true );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn data;\r\n
\r\n
\t\t} else if ( typeof key === "object" ) {\r\n
\t\t\treturn this.each(function() {\r\n
\t\t\t\tjQuery.data( this, key );\r\n
\t\t\t});\r\n
\t\t}\r\n
\r\n
\t\tparts = key.split(".");\r\n
\t\tparts[1] = parts[1] ? "." + parts[1] : "";\r\n
\r\n
\t\tif ( value === undefined ) {\r\n
\t\t\tdata = this.triggerHandler("getData" + parts[1] + "!", [parts[0]]);\r\n
\r\n
\t\t\t// Try to fetch any internally stored data first\r\n
\t\t\tif ( data === undefined && this.length ) {\r\n
\t\t\t\tdata = jQuery.data( this[0], key );\r\n
\t\t\t\tdata = dataAttr( this[0], key, data );\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn data === undefined && parts[1] ?\r\n
\t\t\t\tthis.data( parts[0] ) :\r\n
\t\t\t\tdata;\r\n
\r\n
\t\t} else {\r\n
\t\t\treturn this.each(function() {\r\n
\t\t\t\tvar self = jQuery( this ),\r\n
\t\t\t\t\targs = [ parts[0], value ];\r\n
\r\n
\t\t\t\tself.triggerHandler( "setData" + parts[1] + "!", args );\r\n
\t\t\t\tjQuery.data( this, key, value );\r\n
\t\t\t\tself.triggerHandler( "changeData" + parts[1] + "!", args );\r\n
\t\t\t});\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tremoveData: function( key ) {\r\n
\t\treturn this.each(function() {\r\n
\t\t\tjQuery.removeData( this, key );\r\n
\t\t});\r\n
\t}\r\n
});\r\n
\r\n
function dataAttr( elem, key, data ) {\r\n
\t// If nothing was found internally, try to fetch any\r\n
\t// data from the HTML5 data-* attribute\r\n
\tif ( data === undefined && elem.nodeType === 1 ) {\r\n
\r\n
\t\tvar name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();\r\n
\r\n
\t\tdata = elem.getAttribute( name );\r\n
\r\n
\t\tif ( typeof data === "string" ) {\r\n
\t\t\ttry {\r\n
\t\t\t\tdata = data === "true" ? true :\r\n
\t\t\t\tdata === "false" ? false :\r\n
\t\t\t\tdata === "null" ? null :\r\n
\t\t\t\tjQuery.isNumeric( data ) ? parseFloat( data ) :\r\n
\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\r\n
\t\t\t\t\tdata;\r\n
\t\t\t} catch( e ) {}\r\n
\r\n
\t\t\t// Make sure we set the data so it isn\'t changed later\r\n
\t\t\tjQuery.data( elem, key, data );\r\n
\r\n
\t\t} else {\r\n
\t\t\tdata = undefined;\r\n
\t\t}\r\n
\t}\r\n
\r\n
\treturn data;\r\n
}\r\n
\r\n
// checks a cache object for emptiness\r\n
function isEmptyDataObject( obj ) {\r\n
\tfor ( var name in obj ) {\r\n
\r\n
\t\t// if the public data object is empty, the private is still empty\r\n
\t\tif ( name === "data" && jQuery.isEmptyObject( obj[name] ) ) {\r\n
\t\t\tcontinue;\r\n
\t\t}\r\n
\t\tif ( name !== "toJSON" ) {\r\n
\t\t\treturn false;\r\n
\t\t}\r\n
\t}\r\n
\r\n
\treturn true;\r\n
}\r\n
\r\n
\r\n
\r\n
\r\n
function handleQueueMarkDefer( elem, type, src ) {\r\n
\tvar deferDataKey = type + "defer",\r\n
\t\tqueueDataKey = type + "queue",\r\n
\t\tmarkDataKey = type + "mark",\r\n
\t\tdefer = jQuery._data( elem, deferDataKey );\r\n
\tif ( defer &&\r\n
\t\t( src === "queue" || !jQuery._data(elem, queueDataKey) ) &&\r\n
\t\t( src === "mark" || !jQuery._data(elem, markDataKey) ) ) {\r\n
\t\t// Give room for hard-coded callbacks to fire first\r\n
\t\t// and eventually mark/queue something else on the element\r\n
\t\tsetTimeout( function() {\r\n
\t\t\tif ( !jQuery._data( elem, queueDataKey ) &&\r\n
\t\t\t\t!jQuery._data( elem, markDataKey ) ) {\r\n
\t\t\t\tjQuery.removeData( elem, deferDataKey, true );\r\n
\t\t\t\tdefer.fire();\r\n
\t\t\t}\r\n
\t\t}, 0 );\r\n
\t}\r\n
}\r\n
\r\n
jQuery.extend({\r\n
\r\n
\t_mark: function( elem, type ) {\r\n
\t\tif ( elem ) {\r\n
\t\t\ttype = ( type || "fx" ) + "mark";\r\n
\t\t\tjQuery._data( elem, type, (jQuery._data( elem, type ) || 0) + 1 );\r\n
\t\t}\r\n
\t},\r\n
\r\n
\t_unmark: function( force, elem, type ) {\r\n
\t\tif ( force !== true ) {\r\n
\t\t\ttype = elem;\r\n
\t\t\telem = force;\r\n
\t\t\tforce = false;\r\n
\t\t}\r\n
\t\tif ( elem ) {\r\n
\t\t\ttype = type || "fx";\r\n
\t\t\tvar key = type + "mark",\r\n
\t\t\t\tcount = force ? 0 : ( (jQuery._data( elem, key ) || 1) - 1 );\r\n
\t\t\tif ( count ) {\r\n
\t\t\t\tjQuery._data( elem, key, count );\r\n
\t\t\t} else {\r\n
\t\t\t\tjQuery.removeData( elem, key, true );\r\n
\t\t\t\thandleQueueMarkDefer( elem, type, "mark" );\r\n
\t\t\t}\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tqueue: function( elem, type, data ) {\r\n
\t\tvar q;\r\n
\t\tif ( elem ) {\r\n
\t\t\ttype = ( type || "fx" ) + "queue";\r\n
\t\t\tq = jQuery._data( elem, type );\r\n
\r\n
\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\r\n
\t\t\tif ( data ) {\r\n
\t\t\t\tif ( !q || jQuery.isArray(data) ) {\r\n
\t\t\t\t\tq = jQuery._data( elem, type, jQuery.makeArray(data) );\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\tq.push( data );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t\treturn q || [];\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tdequeue: function( elem, type ) {\r\n
\t\ttype = type || "fx";\r\n
\r\n
\t\tvar queue = jQuery.queue( elem, type ),\r\n
\t\t\tfn = queue.shift(),\r\n
\t\t\thooks = {};\r\n
\r\n
\t\t// If the fx queue is dequeued, always remove the progress sentinel\r\n
\t\tif ( fn === "inprogress" ) {\r\n
\t\t\tfn = queue.shift();\r\n
\t\t}\r\n
\r\n
\t\tif ( fn ) {\r\n
\t\t\t// Add a progress sentinel to prevent the fx queue from being\r\n
\t\t\t// automatically dequeued\r\n
\t\t\tif ( type === "fx" ) {\r\n
\t\t\t\tqueue.unshift( "inprogress" );\r\n
\t\t\t}\r\n
\r\n
\t\t\tjQuery._data( elem, type + ".run", hooks );\r\n
\t\t\tfn.call( elem, function() {\r\n
\t\t\t\tjQuery.dequeue( elem, type );\r\n
\t\t\t}, hooks );\r\n
\t\t}\r\n
\r\n
\t\tif ( !queue.length ) {\r\n
\t\t\tjQuery.removeData( elem, type + "queue " + type + ".run", true );\r\n
\t\t\thandleQueueMarkDefer( elem, type, "queue" );\r\n
\t\t}\r\n
\t}\r\n
});\r\n
\r\n
jQuery.fn.extend({\r\n
\tqueue: function( type, data ) {\r\n
\t\tif ( typeof type !== "string" ) {\r\n
\t\t\tdata = type;\r\n
\t\t\ttype = "fx";\r\n
\t\t}\r\n
\r\n
\t\tif ( data === undefined ) {\r\n
\t\t\treturn jQuery.queue( this[0], type );\r\n
\t\t}\r\n
\t\treturn this.each(function() {\r\n
\t\t\tvar queue = jQuery.queue( this, type, data );\r\n
\r\n
\t\t\tif ( type === "fx" && queue[0] !== "inprogress" ) {\r\n
\t\t\t\tjQuery.dequeue( this, type );\r\n
\t\t\t}\r\n
\t\t});\r\n
\t},\r\n
\tdequeue: function( type ) {\r\n
\t\treturn this.each(function() {\r\n
\t\t\tjQuery.dequeue( this, type );\r\n
\t\t});\r\n
\t},\r\n
\t// Based off of the plugin by Clint Helfers, with permission.\r\n
\t// http://blindsignals.com/index.php/2009/07/jquery-delay/\r\n
\tdelay: function( time, type ) {\r\n
\t\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\r\n
\t\ttype = type || "fx";\r\n
\r\n
\t\treturn this.queue( type, function( next, hooks ) {\r\n
\t\t\tvar timeout = setTimeout( next, time );\r\n
\t\t\thooks.stop = function() {\r\n
\t\t\t\tclearTimeout( timeout );\r\n
\t\t\t};\r\n
\t\t});\r\n
\t},\r\n
\tclearQueue: function( type ) {\r\n
\t\treturn this.queue( type || "fx", [] );\r\n
\t},\r\n
\t// Get a promise resolved when queues of a certain type\r\n
\t// are emptied (fx is the type by default)\r\n
\tpromise: function( type, object ) {\r\n
\t\tif ( typeof type !== "string" ) {\r\n
\t\t\tobject = type;\r\n
\t\t\ttype = undefined;\r\n
\t\t}\r\n
\t\ttype = type || "fx";\r\n
\t\tvar defer = jQuery.Deferred(),\r\n
\t\t\telements = this,\r\n
\t\t\ti = elements.length,\r\n
\t\t\tcount = 1,\r\n
\t\t\tdeferDataKey = type + "defer",\r\n
\t\t\tqueueDataKey = type + "queue",\r\n
\t\t\tmarkDataKey = type + "mark",\r\n
\t\t\ttmp;\r\n
\t\tfunction resolve() {\r\n
\t\t\tif ( !( --count ) ) {\r\n
\t\t\t\tdefer.resolveWith( elements, [ elements ] );\r\n
\t\t\t}\r\n
\t\t}\r\n
\t\twhile( i-- ) {\r\n
\t\t\tif (( tmp = jQuery.data( elements[ i ], deferDataKey, undefined, true ) ||\r\n
\t\t\t\t\t( jQuery.data( elements[ i ], queueDataKey, undefined, true ) ||\r\n
\t\t\t\t\t\tjQuery.data( elements[ i ], markDataKey, undefined, true ) ) &&\r\n
\t\t\t\t\tjQuery.data( elements[ i ], deferDataKey, jQuery.Callbacks( "once memory" ), true ) )) {\r\n
\t\t\t\tcount++;\r\n
\t\t\t\ttmp.add( resolve );\r\n
\t\t\t}\r\n
\t\t}\r\n
\t\tresolve();\r\n
\t\treturn defer.promise();\r\n
\t}\r\n
});\r\n
\r\n
\r\n
\r\n
\r\n
var rclass = /[\\n\\t\\r]/g,\r\n
\trspace = /\\s+/,\r\n
\trreturn = /\\r/g,\r\n
\trtype = /^(?:button|input)$/i,\r\n
\trfocusable = /^(?:button|input|object|select|textarea)$/i,\r\n
\trclickable = /^a(?:rea)?$/i,\r\n
\trboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,\r\n
\tgetSetAttribute = jQuery.support.getSetAttribute,\r\n
\tnodeHook, boolHook, fixSpecified;\r\n
\r\n
jQuery.fn.extend({\r\n
\tattr: function( name, value ) {\r\n
\t\treturn jQuery.access( this, name, value, true, jQuery.attr );\r\n
\t},\r\n
\r\n
\tremoveAttr: function( name ) {\r\n
\t\treturn this.each(function() {\r\n
\t\t\tjQuery.removeAttr( this, name );\r\n
\t\t});\r\n
\t},\r\n
\r\n
\tprop: function( name, value ) {\r\n
\t\treturn jQuery.access( this, name, value, true, jQuery.prop );\r\n
\t},\r\n
\r\n
\tremoveProp: function( name ) {\r\n
\t\tname = jQuery.propFix[ name ] || name;\r\n
\t\treturn this.each(function() {\r\n
\t\t\t// try/catch handles cases where IE balks (such as removing a property on window)\r\n
\t\t\ttry {\r\n
\t\t\t\tthis[ name ] = undefined;\r\n
\t\t\t\tdelete this[ name ];\r\n
\t\t\t} catch( e ) {}\r\n
\t\t});\r\n
\t},\r\n
\r\n
\taddClass: function( value ) {\r\n
\t\tvar classNames, i, l, elem,\r\n
\t\t\tsetClass, c, cl;\r\n
\r\n
\t\tif ( jQuery.isFunction( value ) ) {\r\n
\t\t\treturn this.each(function( j ) {\r\n
\t\t\t\tjQuery( this ).addClass( value.call(this, j, this.className) );\r\n
\t\t\t});\r\n
\t\t}\r\n
\r\n
\t\tif ( value && typeof value === "string" ) {\r\n
\t\t\tclassNames = value.split( rspace );\r\n
\r\n
\t\t\tfor ( i = 0, l = this.length; i < l; i++ ) {\r\n
\t\t\t\telem = this[ i ];\r\n
\r\n
\t\t\t\tif ( elem.nodeType === 1 ) {\r\n
\t\t\t\t\tif ( !elem.className && classNames.length === 1 ) {\r\n
\t\t\t\t\t\telem.className = value;\r\n
\r\n
\t\t\t\t\t} else {\r\n
\t\t\t\t\t\tsetClass = " " + elem.className + " ";\r\n
\r\n
\t\t\t\t\t\tfor ( c = 0, cl = classNames.length; c < cl; c++ ) {\r\n
\t\t\t\t\t\t\tif ( !~setClass.indexOf( " " + classNames[ c ] + " " ) ) {\r\n
\t\t\t\t\t\t\t\tsetClass += classNames[ c ] + " ";\r\n
\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t\telem.className = jQuery.trim( setClass );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn this;\r\n
\t},\r\n
\r\n
\tremoveClass: function( value ) {\r\n
\t\tvar classNames, i, l, elem, className, c, cl;\r\n
\r\n
\t\tif ( jQuery.isFunction( value ) ) {\r\n
\t\t\treturn this.each(function( j ) {\r\n
\t\t\t\tjQuery( this ).removeClass( value.call(this, j, this.className) );\r\n
\t\t\t});\r\n
\t\t}\r\n
\r\n
\t\tif ( (value && typeof value === "string") || value === undefined ) {\r\n
\t\t\tclassNames = ( value || "" ).split( rspace );\r\n
\r\n
\t\t\tfor ( i = 0, l = this.length; i < l; i++ ) {\r\n
\t\t\t\telem = this[ i ];\r\n
\r\n
\t\t\t\tif ( elem.nodeType === 1 && elem.className ) {\r\n
\t\t\t\t\tif ( value ) {\r\n
\t\t\t\t\t\tclassName = (" " + elem.className + " ").replace( rclass, " " );\r\n
\t\t\t\t\t\tfor ( c = 0, cl = classNames.length; c < cl; c++ ) {\r\n
\t\t\t\t\t\t\tclassName = className.replace(" " + classNames[ c ] + " ", " ");\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t\telem.className = jQuery.trim( className );\r\n
\r\n
\t\t\t\t\t} else {\r\n
\t\t\t\t\t\telem.className = "";\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn this;\r\n
\t},\r\n
\r\n
\ttoggleClass: function( value, stateVal ) {\r\n
\t\tvar type = typeof value,\r\n
\t\t\tisBool = typeof stateVal === "boolean";\r\n
\r\n
\t\tif ( jQuery.isFunction( value ) ) {\r\n
\t\t\treturn this.each(function( i ) {\r\n
\t\t\t\tjQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );\r\n
\t\t\t});\r\n
\t\t}\r\n
\r\n
\t\treturn this.each(function() {\r\n
\t\t\tif ( type === "string" ) {\r\n
\t\t\t\t// toggle individual class names\r\n
\t\t\t\tvar className,\r\n
\t\t\t\t\ti = 0,\r\n
\t\t\t\t\tself = jQuery( this ),\r\n
\t\t\t\t\tstate = stateVal,\r\n
\t\t\t\t\tclassNames = value.split( rspace );\r\n
\r\n
\t\t\t\twhile ( (className = classNames[ i++ ]) ) {\r\n
\t\t\t\t\t// check each className given, space seperated list\r\n
\t\t\t\t\tstate = isBool ? state : !self.hasClass( className );\r\n
\t\t\t\t\tself[ state ? "addClass" : "removeClass" ]( className );\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t} else if ( type === "undefined" || type === "boolean" ) {\r\n
\t\t\t\tif ( this.className ) {\r\n
\t\t\t\t\t// store className if set\r\n
\t\t\t\t\tjQuery._data( this, "__className__", this.className );\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\t// toggle whole className\r\n
\t\t\t\tthis.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";\r\n
\t\t\t}\r\n
\t\t});\r\n
\t},\r\n
\r\n
\thasClass: function( selector ) {\r\n
\t\tvar className = " " + selector + " ",\r\n
\t\t\ti = 0,\r\n
\t\t\tl = this.length;\r\n
\t\tfor ( ; i < l; i++ ) {\r\n
\t\t\tif ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) > -1 ) {\r\n
\t\t\t\treturn true;\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn false;\r\n
\t},\r\n
\r\n
\tval: function( value ) {\r\n
\t\tvar hooks, ret, isFunction,\r\n
\t\t\telem = this[0];\r\n
\r\n
\t\tif ( !arguments.length ) {\r\n
\t\t\tif ( elem ) {\r\n
\t\t\t\thooks = jQuery.valHooks[ elem.nodeName.toLowerCase() ] || jQuery.valHooks[ elem.type ];\r\n
\r\n
\t\t\t\tif ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {\r\n
\t\t\t\t\treturn ret;\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tret = elem.value;\r\n
\r\n
\t\t\t\treturn typeof ret === "string" ?\r\n
\t\t\t\t\t// handle most common string cases\r\n
\t\t\t\t\tret.replace(rreturn, "") :\r\n
\t\t\t\t\t// handle cases where value is null/undef or number\r\n
\t\t\t\t\tret == null ? "" : ret;\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\tisFunction = jQuery.isFunction( value );\r\n
\r\n
\t\treturn this.each(function( i ) {\r\n
\t\t\tvar self = jQuery(this), val;\r\n
\r\n
\t\t\tif ( this.nodeType !== 1 ) {\r\n
\t\t\t\treturn;\r\n
\t\t\t}\r\n
\r\n
\t\t\tif ( isFunction ) {\r\n
\t\t\t\tval = value.call( this, i, self.val() );\r\n
\t\t\t} else {\r\n
\t\t\t\tval = value;\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Treat null/undefined as ""; convert numbers to string\r\n
\t\t\tif ( val == null ) {\r\n
\t\t\t\tval = "";\r\n
\t\t\t} else if ( typeof val === "number" ) {\r\n
\t\t\t\tval += "";\r\n
\t\t\t} else if ( jQuery.isArray( val ) ) {\r\n
\t\t\t\tval = jQuery.map(val, function ( value ) {\r\n
\t\t\t\t\treturn value == null ? "" : value + "";\r\n
\t\t\t\t});\r\n
\t\t\t}\r\n
\r\n
\t\t\thooks = jQuery.valHooks[ this.nodeName.toLowerCase() ] || jQuery.valHooks[ this.type ];\r\n
\r\n
\t\t\t// If set returns undefined, fall back to normal setting\r\n
\t\t\tif ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {\r\n
\t\t\t\tthis.value = val;\r\n
\t\t\t}\r\n
\t\t});\r\n
\t}\r\n
});\r\n
\r\n
jQuery.extend({\r\n
\tvalHooks: {\r\n
\t\toption: {\r\n
\t\t\tget: function( elem ) {\r\n
\t\t\t\t// attributes.value is undefined in Blackberry 4.7 but\r\n
\t\t\t\t// uses .value. See #6932\r\n
\t\t\t\tvar val = elem.attributes.value;\r\n
\t\t\t\treturn !val || val.specified ? elem.value : elem.text;\r\n
\t\t\t}\r\n
\t\t},\r\n
\t\tselect: {\r\n
\t\t\tget: function( elem ) {\r\n
\t\t\t\tvar value, i, max, option,\r\n
\t\t\t\t\tindex = elem.selectedIndex,\r\n
\t\t\t\t\tvalues = [],\r\n
\t\t\t\t\toptions = elem.options,\r\n
\t\t\t\t\tone = elem.type === "select-one";\r\n
\r\n
\t\t\t\t// Nothing was selected\r\n
\t\t\t\tif ( index < 0 ) {\r\n
\t\t\t\t\treturn null;\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\t// Loop through all the selected options\r\n
\t\t\t\ti = one ? index : 0;\r\n
\t\t\t\tmax = one ? index + 1 : options.length;\r\n
\t\t\t\tfor ( ; i < max; i++ ) {\r\n
\t\t\t\t\toption = options[ i ];\r\n
\r\n
\t\t\t\t\t// Don\'t return options that are disabled or in a disabled optgroup\r\n
\t\t\t\t\tif ( option.selected && (jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) &&\r\n
\t\t\t\t\t\t\t(!option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" )) ) {\r\n
\r\n
\t\t\t\t\t\t// Get the specific value for the option\r\n
\t\t\t\t\t\tvalue = jQuery( option ).val();\r\n
\r\n
\t\t\t\t\t\t// We don\'t need an array for one selects\r\n
\t\t\t\t\t\tif ( one ) {\r\n
\t\t\t\t\t\t\treturn value;\r\n
\t\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t\t// Multi-Selects return an array\r\n
\t\t\t\t\t\tvalues.push( value );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\t// Fixes Bug #2551 -- select.val() broken in IE after form.reset()\r\n
\t\t\t\tif ( one && !values.length && options.length ) {\r\n
\t\t\t\t\treturn jQuery( options[ index ] ).val();\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\treturn values;\r\n
\t\t\t},\r\n
\r\n
\t\t\tset: function( elem, value ) {\r\n
\t\t\t\tvar values = jQuery.makeArray( value );\r\n
\r\n
\t\t\t\tjQuery(elem).find("option").each(function() {\r\n
\t\t\t\t\tthis.selected = jQuery.inArray( jQuery(this).val(), values ) >= 0;\r\n
\t\t\t\t});\r\n
\r\n
\t\t\t\tif ( !values.length ) {\r\n
\t\t\t\t\telem.selectedIndex = -1;\r\n
\t\t\t\t}\r\n
\t\t\t\treturn values;\r\n
\t\t\t}\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tattrFn: {\r\n
\t\tval: true,\r\n
\t\tcss: true,\r\n
\t\thtml: true,\r\n
\t\ttext: true,\r\n
\t\tdata: true,\r\n
\t\twidth: true,\r\n
\t\theight: true,\r\n
\t\toffset: true\r\n
\t},\r\n
\r\n
\tattr: function( elem, name, value, pass ) {\r\n
\t\tvar ret, hooks, notxml,\r\n
\t\t\tnType = elem.nodeType;\r\n
\r\n
\t\t// don\'t get/set attributes on text, comment and attribute nodes\r\n
\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\tif ( pass && name in jQuery.attrFn ) {\r\n
\t\t\treturn jQuery( elem )[ name ]( value );\r\n
\t\t}\r\n
\r\n
\t\t// Fallback to prop when attributes are not supported\r\n
\t\tif ( typeof elem.getAttribute === "undefined" ) {\r\n
\t\t\treturn jQuery.prop( elem, name, value );\r\n
\t\t}\r\n
\r\n
\t\tnotxml = nType !== 1 || !jQuery.isXMLDoc( elem );\r\n
\r\n
\t\t// All attributes are lowercase\r\n
\t\t// Grab necessary hook if one is defined\r\n
\t\tif ( notxml ) {\r\n
\t\t\tname = name.toLowerCase();\r\n
\t\t\thooks = jQuery.attrHooks[ name ] || ( rboolean.test( name ) ? boolHook : nodeHook );\r\n
\t\t}\r\n
\r\n
\t\tif ( value !== undefined ) {\r\n
\r\n
\t\t\tif ( value === null ) {\r\n
\t\t\t\tjQuery.removeAttr( elem, name );\r\n
\t\t\t\treturn;\r\n
\r\n
\t\t\t} else if ( hooks && "set" in hooks && notxml && (ret = hooks.set( elem, value, name )) !== undefined ) {\r\n
\t\t\t\treturn ret;\r\n
\r\n
\t\t\t} else {\r\n
\t\t\t\telem.setAttribute( name, "" + value );\r\n
\t\t\t\treturn value;\r\n
\t\t\t}\r\n
\r\n
\t\t} else if ( hooks && "get" in hooks && notxml && (ret = hooks.get( elem, name )) !== null ) {\r\n
\t\t\treturn ret;\r\n
\r\n
\t\t} else {\r\n
\r\n
\t\t\tret = elem.getAttribute( name );\r\n
\r\n
\t\t\t// Non-existent attributes return null, we normalize to undefined\r\n
\t\t\treturn ret === null ?\r\n
\t\t\t\tundefined :\r\n
\t\t\t\tret;\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tremoveAttr: function( elem, value ) {\r\n
\t\tvar propName, attrNames, name, l,\r\n
\t\t\ti = 0;\r\n
\r\n
\t\tif ( value && elem.nodeType === 1 ) {\r\n
\t\t\tattrNames = value.toLowerCase().split( rspace );\r\n
\t\t\tl = attrNames.length;\r\n
\r\n
\t\t\tfor ( ; i < l; i++ ) {\r\n
\t\t\t\tname = attrNames[ i ];\r\n
\r\n
\t\t\t\tif ( name ) {\r\n
\t\t\t\t\tpropName = jQuery.propFix[ name ] || name;\r\n
\r\n
\t\t\t\t\t// See #9699 for explanation of this approach (setting first, then removal)\r\n
\t\t\t\t\tjQuery.attr( elem, name, "" );\r\n
\t\t\t\t\telem.removeAttribute( getSetAttribute ? name : propName );\r\n
\r\n
\t\t\t\t\t// Set corresponding property to false for boolean attributes\r\n
\t\t\t\t\tif ( rboolean.test( name ) && propName in elem ) {\r\n
\t\t\t\t\t\telem[ propName ] = false;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tattrHooks: {\r\n
\t\ttype: {\r\n
\t\t\tset: function( elem, value ) {\r\n
\t\t\t\t// We can\'t allow the type property to be changed (since it causes problems in IE)\r\n
\t\t\t\tif ( rtype.test( elem.nodeName ) && elem.parentNode ) {\r\n
\t\t\t\t\tjQuery.error( "type property can\'t be changed" );\r\n
\t\t\t\t} else if ( !jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {\r\n
\t\t\t\t\t// Setting the type on a radio button after the value resets the value in IE6-9\r\n
\t\t\t\t\t// Reset value to it\'s default in case type is set after value\r\n
\t\t\t\t\t// This is for element creation\r\n
\t\t\t\t\tvar val = elem.value;\r\n
\t\t\t\t\telem.setAttribute( "type", value );\r\n
\t\t\t\t\tif ( val ) {\r\n
\t\t\t\t\t\telem.value = val;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\treturn value;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t},\r\n
\t\t// Use the value property for back compat\r\n
\t\t// Use the nodeHook for button elements in IE6/7 (#1954)\r\n
\t\tvalue: {\r\n
\t\t\tget: function( elem, name ) {\r\n
\t\t\t\tif ( nodeHook && jQuery.nodeName( elem, "button" ) ) {\r\n
\t\t\t\t\treturn nodeHook.get( elem, name );\r\n
\t\t\t\t}\r\n
\t\t\t\treturn name in elem ?\r\n
\t\t\t\t\telem.value :\r\n
\t\t\t\t\tnull;\r\n
\t\t\t},\r\n
\t\t\tset: function( elem, value, name ) {\r\n
\t\t\t\tif ( nodeHook && jQuery.nodeName( elem, "button" ) ) {\r\n
\t\t\t\t\treturn nodeHook.set( elem, value, name );\r\n
\t\t\t\t}\r\n
\t\t\t\t// Does not return so that setAttribute is also used\r\n
\t\t\t\telem.value = value;\r\n
\t\t\t}\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tpropFix: {\r\n
\t\ttabindex: "tabIndex",\r\n
\t\treadonly: "readOnly",\r\n
\t\t"for": "htmlFor",\r\n
\t\t"class": "className",\r\n
\t\tmaxlength: "maxLength",\r\n
\t\tcellspacing: "cellSpacing",\r\n
\t\tcellpadding: "cellPadding",\r\n
\t\trowspan: "rowSpan",\r\n
\t\tcolspan: "colSpan",\r\n
\t\tusemap: "useMap",\r\n
\t\tframeborder: "frameBorder",\r\n
\t\tcontenteditable: "contentEditable"\r\n
\t},\r\n
\r\n
\tprop: function( elem, name, value ) {\r\n
\t\tvar ret, hooks, notxml,\r\n
\t\t\tnType = elem.nodeType;\r\n
\r\n
\t\t// don\'t get/set properties on text, comment and attribute nodes\r\n
\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\tnotxml = nType !== 1 || !jQuery.isXMLDoc( elem );\r\n
\r\n
\t\tif ( notxml ) {\r\n
\t\t\t// Fix name and attach hooks\r\n
\t\t\tname = jQuery.propFix[ name ] || name;\r\n
\t\t\thooks = jQuery.propHooks[ name ];\r\n
\t\t}\r\n
\r\n
\t\tif ( value !== undefined ) {\r\n
\t\t\tif ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {\r\n
\t\t\t\treturn ret;\r\n
\r\n
\t\t\t} else {\r\n
\t\t\t\treturn ( elem[ name ] = value );\r\n
\t\t\t}\r\n
\r\n
\t\t} else {\r\n
\t\t\tif ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {\r\n
\t\t\t\treturn ret;\r\n
\r\n
\t\t\t} else {\r\n
\t\t\t\treturn elem[ name ];\r\n
\t\t\t}\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tpropHooks: {\r\n
\t\ttabIndex: {\r\n
\t\t\tget: function( elem ) {\r\n
\t\t\t\t// elem.tabIndex doesn\'t always return the correct value when it hasn\'t been explicitly set\r\n
\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\r\n
\t\t\t\tvar attributeNode = elem.getAttributeNode("tabindex");\r\n
\r\n
\t\t\t\treturn attributeNode && attributeNode.specified ?\r\n
\t\t\t\t\tparseInt( attributeNode.value, 10 ) :\r\n
\t\t\t\t\trfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?\r\n
\t\t\t\t\t\t0 :\r\n
\t\t\t\t\t\tundefined;\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
});\r\n
\r\n
// Add the tabIndex propHook to attrHooks for back-compat (different case is intentional)\r\n
jQuery.attrHooks.tabindex = jQuery.propHooks.tabIndex;\r\n
\r\n
// Hook for boolean attributes\r\n
boolHook = {\r\n
\tget: function( elem, name ) {\r\n
\t\t// Align boolean attributes with corresponding properties\r\n
\t\t// Fall back to attribute presence where some booleans are not supported\r\n
\t\tvar attrNode,\r\n
\t\t\tproperty = jQuery.prop( elem, name );\r\n
\t\treturn property === true || typeof property !== "boolean" && ( attrNode = elem.getAttributeNode(name) ) && attrNode.nodeValue !== false ?\r\n
\t\t\tname.toLowerCase() :\r\n
\t\t\tundefined;\r\n
\t},\r\n
\tset: function( elem, value, name ) {\r\n
\t\tvar propName;\r\n
\t\tif ( value === false ) {\r\n
\t\t\t// Remove boolean attributes when set to false\r\n
\t\t\tjQuery.removeAttr( elem, name );\r\n
\t\t} else {\r\n
\t\t\t// value is true since we know at this point it\'s type boolean and not false\r\n
\t\t\t// Set boolean attributes to the same name and set the DOM property\r\n
\t\t\tpropName = jQuery.propFix[ name ] || name;\r\n
\t\t\tif ( propName in elem ) {\r\n
\t\t\t\t// Only set the IDL specifically if it already exists on the element\r\n
\t\t\t\telem[ propName ] = true;\r\n
\t\t\t}\r\n
\r\n
\t\t\telem.setAttribute( name, name.toLowerCase() );\r\n
\t\t}\r\n
\t\treturn name;\r\n
\t}\r\n
};\r\n
\r\n
// IE6/7 do not support getting/setting some attributes with get/setAttribute\r\n
if ( !getSetAttribute ) {\r\n
\r\n
\tfixSpecified = {\r\n
\t\tname: true,\r\n
\t\tid: true\r\n
\t};\r\n
\r\n
\t// Use this for any attribute in IE6/7\r\n
\t// This fixes almost every IE6/7 issue\r\n
\tnodeHook = jQuery.valHooks.button = {\r\n
\t\tget: function( elem, name ) {\r\n
\t\t\tvar ret;\r\n
\t\t\tret = elem.getAttributeNode( name );\r\n
\t\t\treturn ret && ( fixSpecified[ name ] ? ret.nodeValue !== "" : ret.specified ) ?\r\n
\t\t\t\tret.nodeValue :\r\n
\t\t\t\tundefined;\r\n
\t\t},\r\n
\t\tset: function( elem, value, name ) {\r\n
\t\t\t// Set the existing or create a new attribute node\r\n
\t\t\tvar ret = elem.getAttributeNode( name );\r\n
\t\t\tif ( !ret ) {\r\n
\t\t\t\tret = document.createAttribute( name );\r\n
\t\t\t\telem.setAttributeNode( ret );\r\n
\t\t\t}\r\n
\t\t\treturn ( ret.nodeValue = value + "" );\r\n
\t\t}\r\n
\t};\r\n
\r\n
\t// Apply the nodeHook to tabindex\r\n
\tjQuery.attrHooks.tabindex.set = nodeHook.set;\r\n
\r\n
\t// Set width and height to auto instead of 0 on empty string( Bug #8150 )\r\n
\t// This is for removals\r\n
\tjQuery.each([ "width", "height" ], function( i, name ) {\r\n
\t\tjQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {\r\n
\t\t\tset: function( elem, value ) {\r\n
\t\t\t\tif ( value === "" ) {\r\n
\t\t\t\t\telem.setAttribute( name, "auto" );\r\n
\t\t\t\t\treturn value;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t});\r\n
\t});\r\n
\r\n
\t// Set contenteditable to false on removals(#10429)\r\n
\t// Setting to empty string throws an error as an invalid value\r\n
\tjQuery.attrHooks.contenteditable = {\r\n
\t\tget: nodeHook.get,\r\n
\t\tset: function( elem, value, name ) {\r\n
\t\t\tif ( value === "" ) {\r\n
\t\t\t\tvalue = "false";\r\n
\t\t\t}\r\n
\t\t\tnodeHook.set( elem, value, name );\r\n
\t\t}\r\n
\t};\r\n
}\r\n
\r\n
\r\n
// Some attributes require a special call on IE\r\n
if ( !jQuery.support.hrefNormalized ) {\r\n
\tjQuery.each([ "href", "src", "width", "height" ], function( i, name ) {\r\n
\t\tjQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {\r\n
\t\t\tget: function( elem ) {\r\n
\t\t\t\tvar ret = elem.getAttribute( name, 2 );\r\n
\t\t\t\treturn ret === null ? undefined : ret;\r\n
\t\t\t}\r\n
\t\t});\r\n
\t});\r\n
}\r\n
\r\n
if ( !jQuery.support.style ) {\r\n
\tjQuery.attrHooks.style = {\r\n
\t\tget: function( elem ) {\r\n
\t\t\t// Return undefined in the case of empty string\r\n
\t\t\t// Normalize to lowercase since IE uppercases css property names\r\n
\t\t\treturn elem.style.cssText.toLowerCase() || undefined;\r\n
\t\t},\r\n
\t\tset: function( elem, value ) {\r\n
\t\t\treturn ( elem.style.cssText = "" + value );\r\n
\t\t}\r\n
\t};\r\n
}\r\n
\r\n
// Safari mis-reports the default selected property of an option\r\n
// Accessing the parent\'s selectedIndex property fixes it\r\n
if ( !jQuery.support.optSelected ) {\r\n
\tjQuery.propHooks.selected = jQuery.extend( jQuery.propHooks.selected, {\r\n
\t\tget: function( elem ) {\r\n
\t\t\tvar parent = elem.parentNode;\r\n
\r\n
\t\t\tif ( parent ) {\r\n
\t\t\t\tparent.selectedIndex;\r\n
\r\n
\t\t\t\t// Make sure that it also works with optgroups, see #5701\r\n
\t\t\t\tif ( parent.parentNode ) {\r\n
\t\t\t\t\tparent.parentNode.selectedIndex;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t\treturn null;\r\n
\t\t}\r\n
\t});\r\n
}\r\n
\r\n
// IE6/7 call enctype encoding\r\n
if ( !jQuery.support.enctype ) {\r\n
\tjQuery.propFix.enctype = "encoding";\r\n
}\r\n
\r\n
// Radios and checkboxes getter/setter\r\n
if ( !jQuery.support.checkOn ) {\r\n
\tjQuery.each([ "radio", "checkbox" ], function() {\r\n
\t\tjQuery.valHooks[ this ] = {\r\n
\t\t\tget: function( elem ) {\r\n
\t\t\t\t// Handle the case where in Webkit "" is returned instead of "on" if a value isn\'t specified\r\n
\t\t\t\treturn elem.getAttribute("value") === null ? "on" : elem.value;\r\n
\t\t\t}\r\n
\t\t};\r\n
\t});\r\n
}\r\n
jQuery.each([ "radio", "checkbox" ], function() {\r\n
\tjQuery.valHooks[ this ] = jQuery.extend( jQuery.valHooks[ this ], {\r\n
\t\tset: function( elem, value ) {\r\n
\t\t\tif ( jQuery.isArray( value ) ) {\r\n
\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );\r\n
\t\t\t}\r\n
\t\t}\r\n
\t});\r\n
});\r\n
\r\n
\r\n
\r\n
\r\n
var rformElems = /^(?:textarea|input|select)$/i,\r\n
\trtypenamespace = /^([^\\.]*)?(?:\\.(.+))?$/,\r\n
\trhoverHack = /\\bhover(\\.\\S+)?\\b/,\r\n
\trkeyEvent = /^key/,\r\n
\trmouseEvent = /^(?:mouse|contextmenu)|click/,\r\n
\trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\r\n
\trquickIs = /^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$/,\r\n
\tquickParse = function( selector ) {\r\n
\t\tvar quick = rquickIs.exec( selector );\r\n
\t\tif ( quick ) {\r\n
\t\t\t//   0  1    2   3\r\n
\t\t\t// [ _, tag, id, class ]\r\n
\t\t\tquick[1] = ( quick[1] || "" ).toLowerCase();\r\n
\t\t\tquick[3] = quick[3] && new RegExp( "(?:^|\\\\s)" + quick[3] + "(?:\\\\s|$)" );\r\n
\t\t}\r\n
\t\treturn quick;\r\n
\t},\r\n
\tquickIs = function( elem, m ) {\r\n
\t\tvar attrs = elem.attributes || {};\r\n
\t\treturn (\r\n
\t\t\t(!m[1] || elem.nodeName.toLowerCase() === m[1]) &&\r\n
\t\t\t(!m[2] || (attrs.id || {}).value === m[2]) &&\r\n
\t\t\t(!m[3] || m[3].test( (attrs[ "class" ] || {}).value ))\r\n
\t\t);\r\n
\t},\r\n
\thoverHack = function( events ) {\r\n
\t\treturn jQuery.event.special.hover ? events : events.replace( rhoverHack, "mouseenter$1 mouseleave$1" );\r\n
\t};\r\n
\r\n
/*\r\n
 * Helper functions for managing events -- not part of the public interface.\r\n
 * Props to Dean Edwards\' addEvent library for many of the ideas.\r\n
 */\r\n
jQuery.event = {\r\n
\r\n
\tadd: function( elem, types, handler, data, selector ) {\r\n
\r\n
\t\tvar elemData, eventHandle, events,\r\n
\t\t\tt, tns, type, namespaces, handleObj,\r\n
\t\t\thandleObjIn, quick, handlers, special;\r\n
\r\n
\t\t// Don\'t attach events to noData or text/comment nodes (allow plain objects tho)\r\n
\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 || !types || !handler || !(elemData = jQuery._data( elem )) ) {\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\t// Caller can pass in an object of custom data in lieu of the handler\r\n
\t\tif ( handler.handler ) {\r\n
\t\t\thandleObjIn = handler;\r\n
\t\t\thandler = handleObjIn.handler;\r\n
\t\t}\r\n
\r\n
\t\t// Make sure that the handler has a unique ID, used to find/remove it later\r\n
\t\tif ( !handler.guid ) {\r\n
\t\t\thandler.guid = jQuery.guid++;\r\n
\t\t}\r\n
\r\n
\t\t// Init the element\'s event structure and main handler, if this is the first\r\n
\t\tevents = elemData.events;\r\n
\t\tif ( !events ) {\r\n
\t\t\telemData.events = events = {};\r\n
\t\t}\r\n
\t\teventHandle = elemData.handle;\r\n
\t\tif ( !eventHandle ) {\r\n
\t\t\telemData.handle = eventHandle = function( e ) {\r\n
\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\r\n
\t\t\t\t// when an event is called after a page has unloaded\r\n
\t\t\t\treturn typeof jQuery !== "undefined" && (!e || jQuery.event.triggered !== e.type) ?\r\n
\t\t\t\t\tjQuery.event.dispatch.apply( eventHandle.elem, arguments ) :\r\n
\t\t\t\t\tundefined;\r\n
\t\t\t};\r\n
\t\t\t// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events\r\n
\t\t\teventHandle.elem = elem;\r\n
\t\t}\r\n
\r\n
\t\t// Handle multiple events separated by a space\r\n
\t\t// jQuery(...).bind("mouseover mouseout", fn);\r\n
\t\ttypes = jQuery.trim( hoverHack(types) ).split( " " );\r\n
\t\tfor ( t = 0; t < types.length; t++ ) {\r\n
\r\n
\t\t\ttns = rtypenamespace.exec( types[t] ) || [];\r\n
\t\t\ttype = tns[1];\r\n
\t\t\tnamespaces = ( tns[2] || "" ).split( "." ).sort();\r\n
\r\n
\t\t\t// If event changes its type, use the special event handlers for the changed type\r\n
\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n
\r\n
\t\t\t// If selector defined, determine special event api type, otherwise given type\r\n
\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\r\n
\r\n
\t\t\t// Update special based on newly reset type\r\n
\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n
\r\n
\t\t\t// handleObj is passed to all event handlers\r\n
\t\t\thandleObj = jQuery.extend({\r\n
\t\t\t\ttype: type,\r\n
\t\t\t\torigType: tns[1],\r\n
\t\t\t\tdata: data,\r\n
\t\t\t\thandler: handler,\r\n
\t\t\t\tguid: handler.guid,\r\n
\t\t\t\tselector: selector,\r\n
\t\t\t\tquick: quickParse( selector ),\r\n
\t\t\t\tnamespace: namespaces.join(".")\r\n
\t\t\t}, handleObjIn );\r\n
\r\n
\t\t\t// Init the event handler queue if we\'re the first\r\n
\t\t\thandlers = events[ type ];\r\n
\t\t\tif ( !handlers ) {\r\n
\t\t\t\thandlers = events[ type ] = [];\r\n
\t\t\t\thandlers.delegateCount = 0;\r\n
\r\n
\t\t\t\t// Only use addEventListener/attachEvent if the special events handler returns false\r\n
\t\t\t\tif ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\r\n
\t\t\t\t\t// Bind the global event handler to the element\r\n
\t\t\t\t\tif ( elem.addEventListener ) {\r\n
\t\t\t\t\t\telem.addEventListener( type, eventHandle, false );\r\n
\r\n
\t\t\t\t\t} else if ( elem.attachEvent ) {\r\n
\t\t\t\t\t\telem.attachEvent( "on" + type, eventHandle );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\tif ( special.add ) {\r\n
\t\t\t\tspecial.add.call( elem, handleObj );\r\n
\r\n
\t\t\t\tif ( !handleObj.handler.guid ) {\r\n
\t\t\t\t\thandleObj.handler.guid = handler.guid;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Add to the element\'s handler list, delegates in front\r\n
\t\t\tif ( selector ) {\r\n
\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\r\n
\t\t\t} else {\r\n
\t\t\t\thandlers.push( handleObj );\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Keep track of which events have ever been used, for event optimization\r\n
\t\t\tjQuery.event.global[ type ] = true;\r\n
\t\t}\r\n
\r\n
\t\t// Nullify elem to prevent memory leaks in IE\r\n
\t\telem = null;\r\n
\t},\r\n
\r\n
\tglobal: {},\r\n
\r\n
\t// Detach an event or set of events from an element\r\n
\tremove: function( elem, types, handler, selector, mappedTypes ) {\r\n
\r\n
\t\tvar elemData = jQuery.hasData( elem ) && jQuery._data( elem ),\r\n
\t\t\tt, tns, type, origType, namespaces, origCount,\r\n
\t\t\tj, events, special, handle, eventType, handleObj;\r\n
\r\n
\t\tif ( !elemData || !(events = elemData.events) ) {\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\t// Once for each type.namespace in types; type may be omitted\r\n
\t\ttypes = jQuery.trim( hoverHack( types || "" ) ).split(" ");\r\n
\t\tfor ( t = 0; t < types.length; t++ ) {\r\n
\t\t\ttns = rtypenamespace.exec( types[t] ) || [];\r\n
\t\t\ttype = origType = tns[1];\r\n
\t\t\tnamespaces = tns[2];\r\n
\r\n
\t\t\t// Unbind all events (on this namespace, if provided) for the element\r\n
\t\t\tif ( !type ) {\r\n
\t\t\t\tfor ( type in events ) {\r\n
\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\r\n
\t\t\t\t}\r\n
\t\t\t\tcontinue;\r\n
\t\t\t}\r\n
\r\n
\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n
\t\t\ttype = ( selector? special.delegateType : special.bindType ) || type;\r\n
\t\t\teventType = events[ type ] || [];\r\n
\t\t\torigCount = eventType.length;\r\n
\t\t\tnamespaces = namespaces ? new RegExp("(^|\\\\.)" + namespaces.split(".").sort().join("\\\\.(?:.*\\\\.)?") + "(\\\\.|$)") : null;\r\n
\r\n
\t\t\t// Remove matching events\r\n
\t\t\tfor ( j = 0; j < eventType.length; j++ ) {\r\n
\t\t\t\thandleObj = eventType[ j ];\r\n
\r\n
\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\r\n
\t\t\t\t\t ( !handler || handler.guid === handleObj.guid ) &&\r\n
\t\t\t\t\t ( !namespaces || namespaces.test( handleObj.namespace ) ) &&\r\n
\t\t\t\t\t ( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {\r\n
\t\t\t\t\teventType.splice( j--, 1 );\r\n
\r\n
\t\t\t\t\tif ( handleObj.selector ) {\r\n
\t\t\t\t\t\teventType.delegateCount--;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\tif ( special.remove ) {\r\n
\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Remove generic event handler if we removed something and no more handlers exist\r\n
\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\r\n
\t\t\tif ( eventType.length === 0 && origCount !== eventType.length ) {\r\n
\t\t\t\tif ( !special.teardown || special.teardown.call( elem, namespaces ) === false ) {\r\n
\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tdelete events[ type ];\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\t// Remove the expando if it\'s no longer used\r\n
\t\tif ( jQuery.isEmptyObject( events ) ) {\r\n
\t\t\thandle = elemData.handle;\r\n
\t\t\tif ( handle ) {\r\n
\t\t\t\thandle.elem = null;\r\n
\t\t\t}\r\n
\r\n
\t\t\t// removeData also checks for emptiness and clears the expando if empty\r\n
\t\t\t// so use it instead of delete\r\n
\t\t\tjQuery.removeData( elem, [ "events", "handle" ], true );\r\n
\t\t}\r\n
\t},\r\n
\r\n
\t// Events that are safe to short-circuit if no handlers are attached.\r\n
\t// Native DOM events should not be added, they may have inline handlers.\r\n
\tcustomEvent: {\r\n
\t\t"getData": true,\r\n
\t\t"setData": true,\r\n
\t\t"changeData": true\r\n
\t},\r\n
\r\n
\ttrigger: function( event, data, elem, onlyHandlers ) {\r\n
\t\t// Don\'t do events on text and comment nodes\r\n
\t\tif ( elem && (elem.nodeType === 3 || elem.nodeType === 8) ) {\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\t// Event object or event type\r\n
\t\tvar type = event.type || event,\r\n
\t\t\tnamespaces = [],\r\n
\t\t\tcache, exclusive, i, cur, old, ontype, special, handle, eventPath, bubbleType;\r\n
\r\n
\t\t// focus/blur morphs to focusin/out; ensure we\'re not firing them right now\r\n
\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\tif ( type.indexOf( "!" ) >= 0 ) {\r\n
\t\t\t// Exclusive events trigger only for the exact event (no namespaces)\r\n
\t\t\ttype = type.slice(0, -1);\r\n
\t\t\texclusive = true;\r\n
\t\t}\r\n
\r\n
\t\tif ( type.indexOf( "." ) >= 0 ) {\r\n
\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\r\n
\t\t\tnamespaces = type.split(".");\r\n
\t\t\ttype = namespaces.shift();\r\n
\t\t\tnamespaces.sort();\r\n
\t\t}\r\n
\r\n
\t\tif ( (!elem || jQuery.event.customEvent[ type ]) && !jQuery.event.global[ type ] ) {\r\n
\t\t\t// No jQuery handlers for this event type, and it can\'t have inline handlers\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\t// Caller can pass in an Event, Object, or just an event type string\r\n
\t\tevent = typeof event === "object" ?\r\n
\t\t\t// jQuery.Event object\r\n
\t\t\tevent[ jQuery.expando ] ? event :\r\n
\t\t\t// Object literal\r\n
\t\t\tnew jQuery.Event( type, event ) :\r\n
\t\t\t// Just the event type (string)\r\n
\t\t\tnew jQuery.Event( type );\r\n
\r\n
\t\tevent.type = type;\r\n
\t\tevent.isTrigger = true;\r\n
\t\tevent.exclusive = exclusive;\r\n
\t\tevent.namespace = namespaces.join( "." );\r\n
\t\tevent.namespace_re = event.namespace? new RegExp("(^|\\\\.)" + namespaces.join("\\\\.(?:.*\\\\.)?") + "(\\\\.|$)") : null;\r\n
\t\tontype = type.indexOf( ":" ) < 0 ? "on" + type : "";\r\n
\r\n
\t\t// Handle a global trigger\r\n
\t\tif ( !elem ) {\r\n
\r\n
\t\t\t// TODO: Stop taunting the data cache; remove global events and always attach to document\r\n
\t\t\tcache = jQuery.cache;\r\n
\t\t\tfor ( i in cache ) {\r\n
\t\t\t\tif ( cache[ i ].events && cache[ i ].events[ type ] ) {\r\n
\t\t\t\t\tjQuery.event.trigger( event, data, cache[ i ].handle.elem, true );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\t// Clean up the event in case it is being reused\r\n
\t\tevent.result = undefined;\r\n
\t\tif ( !event.target ) {\r\n
\t\t\tevent.target = elem;\r\n
\t\t}\r\n
\r\n
\t\t// Clone any incoming data and prepend the event, creating the handler arg list\r\n
\t\tdata = data != null ? jQuery.makeArray( data ) : [];\r\n
\t\tdata.unshift( event );\r\n
\r\n
\t\t// Allow special events to draw outside the lines\r\n
\t\tspecial = jQuery.event.special[ type ] || {};\r\n
\t\tif ( special.trigger && special.trigger.apply( elem, data ) === false ) {\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\r\n
\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\r\n
\t\teventPath = [[ elem, special.bindType || type ]];\r\n
\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\r\n
\r\n
\t\t\tbubbleType = special.delegateType || type;\r\n
\t\t\tcur = rfocusMorph.test( bubbleType + type ) ? elem : elem.parentNode;\r\n
\t\t\told = null;\r\n
\t\t\tfor ( ; cur; cur = cur.parentNode ) {\r\n
\t\t\t\teventPath.push([ cur, bubbleType ]);\r\n
\t\t\t\told = cur;\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\r\n
\t\t\tif ( old && old === elem.ownerDocument ) {\r\n
\t\t\t\teventPath.push([ old.defaultView || old.parentWindow || window, bubbleType ]);\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\t// Fire handlers on the event path\r\n
\t\tfor ( i = 0; i < eventPath.length && !event.isPropagationStopped(); i++ ) {\r\n
\r\n
\t\t\tcur = eventPath[i][0];\r\n
\t\t\tevent.type = eventPath[i][1];\r\n
\r\n
\t\t\thandle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] && jQuery._data( cur, "handle" );\r\n
\t\t\tif ( handle ) {\r\n
\t\t\t\thandle.apply( cur, data );\r\n
\t\t\t}\r\n
\t\t\t// Note that this is a bare JS function and not a jQuery handler\r\n
\t\t\thandle = ontype && cur[ ontype ];\r\n
\t\t\tif ( handle && jQuery.acceptData( cur ) && handle.apply( cur, data ) === false ) {\r\n
\t\t\t\tevent.preventDefault();\r\n
\t\t\t}\r\n
\t\t}\r\n
\t\tevent.type = type;\r\n
\r\n
\t\t// If nobody prevented the default action, do it now\r\n
\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\r\n
\r\n
\t\t\tif ( (!special._default || special._default.apply( elem.ownerDocument, data ) === false) &&\r\n
\t\t\t\t!(type === "click" && jQuery.nodeName( elem, "a" )) && jQuery.acceptData( elem ) ) {\r\n
\r\n
\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\r\n
\t\t\t\t// Can\'t use an .isFunction() check here because IE6/7 fails that test.\r\n
\t\t\t\t// Don\'t do default actions on window, that\'s where global variables be (#6170)\r\n
\t\t\t\t// IE<9 dies on focus/blur to hidden element (#1486)\r\n
\t\t\t\tif ( ontype && elem[ type ] && ((type !== "focus" && type !== "blur") || event.target.offsetWidth !== 0) && !jQuery.isWindow( elem ) ) {\r\n
\r\n
\t\t\t\t\t// Don\'t re-trigger an onFOO event when we call its FOO() method\r\n
\t\t\t\t\told = elem[ ontype ];\r\n
\r\n
\t\t\t\t\tif ( old ) {\r\n
\t\t\t\t\t\telem[ ontype ] = null;\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\r\n
\t\t\t\t\tjQuery.event.triggered = type;\r\n
\t\t\t\t\telem[ type ]();\r\n
\t\t\t\t\tjQuery.event.triggered = undefined;\r\n
\r\n
\t\t\t\t\tif ( old ) {\r\n
\t\t\t\t\t\telem[ ontype ] = old;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn event.result;\r\n
\t},\r\n
\r\n
\tdispatch: function( event ) {\r\n
\r\n
\t\t// Make a writable jQuery.Event from the native event object\r\n
\t\tevent = jQuery.event.fix( event || window.event );\r\n
\r\n
\t\tvar handlers = ( (jQuery._data( this, "events" ) || {} )[ event.type ] || []),\r\n
\t\t\tdelegateCount = handlers.delegateCount,\r\n
\t\t\targs = [].slice.call( arguments, 0 ),\r\n
\t\t\trun_all = !event.exclusive && !event.namespace,\r\n
\t\t\thandlerQueue = [],\r\n
\t\t\ti, j, cur, jqcur, ret, selMatch, matched, matches, handleObj, sel, related;\r\n
\r\n
\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\r\n
\t\targs[0] = event;\r\n
\t\tevent.delegateTarget = this;\r\n
\r\n
\t\t// Determine handlers that should run if there are delegated events\r\n
\t\t// Avoid disabled elements in IE (#6911) and non-left-click bubbling in Firefox (#3861)\r\n
\t\tif ( delegateCount && !event.target.disabled && !(event.button && event.type === "click") ) {\r\n
\r\n
\t\t\t// Pregenerate a single jQuery object for reuse with .is()\r\n
\t\t\tjqcur = jQuery(this);\r\n
\t\t\tjqcur.context = this.ownerDocument || this;\r\n
\r\n
\t\t\tfor ( cur = event.target; cur != this; cur = cur.parentNode || this ) {\r\n
\t\t\t\tselMatch = {};\r\n
\t\t\t\tmatches = [];\r\n
\t\t\t\tjqcur[0] = cur;\r\n
\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\r\n
\t\t\t\t\thandleObj = handlers[ i ];\r\n
\t\t\t\t\tsel = handleObj.selector;\r\n
\r\n
\t\t\t\t\tif ( selMatch[ sel ] === undefined ) {\r\n
\t\t\t\t\t\tselMatch[ sel ] = (\r\n
\t\t\t\t\t\t\thandleObj.quick ? quickIs( cur, handleObj.quick ) : jqcur.is( sel )\r\n
\t\t\t\t\t\t);\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\tif ( selMatch[ sel ] ) {\r\n
\t\t\t\t\t\tmatches.push( handleObj );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t\tif ( matches.length ) {\r\n
\t\t\t\t\thandlerQueue.push({ elem: cur, matches: matches });\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\t// Add the remaining (directly-bound) handlers\r\n
\t\tif ( handlers.length > delegateCount ) {\r\n
\t\t\thandlerQueue.push({ elem: this, matches: handlers.slice( delegateCount ) });\r\n
\t\t}\r\n
\r\n
\t\t// Run delegates first; they may want to stop propagation beneath us\r\n
\t\tfor ( i = 0; i < handlerQueue.length && !event.isPropagationStopped(); i++ ) {\r\n
\t\t\tmatched = handlerQueue[ i ];\r\n
\t\t\tevent.currentTarget = matched.elem;\r\n
\r\n
\t\t\tfor ( j = 0; j < matched.matches.length && !event.isImmediatePropagationStopped(); j++ ) {\r\n
\t\t\t\thandleObj = matched.matches[ j ];\r\n
\r\n
\t\t\t\t// Triggered event must either 1) be non-exclusive and have no namespace, or\r\n
\t\t\t\t// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).\r\n
\t\t\t\tif ( run_all || (!event.namespace && !handleObj.namespace) || event.namespace_re && event.namespace_re.test( handleObj.namespace ) ) {\r\n
\r\n
\t\t\t\t\tevent.data = handleObj.data;\r\n
\t\t\t\t\tevent.handleObj = handleObj;\r\n
\r\n
\t\t\t\t\tret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\r\n
\t\t\t\t\t\t\t.apply( matched.elem, args );\r\n
\r\n
\t\t\t\t\tif ( ret !== undefined ) {\r\n
\t\t\t\t\t\tevent.result = ret;\r\n
\t\t\t\t\t\tif ( ret === false ) {\r\n
\t\t\t\t\t\t\tevent.preventDefault();\r\n
\t\t\t\t\t\t\tevent.stopPropagation();\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn event.result;\r\n
\t},\r\n
\r\n
\t// Includes some event props shared by KeyEvent and MouseEvent\r\n
\t// *** attrChange attrName relatedNode srcElement  are not normalized, non-W3C, deprecated, will be removed in 1.8 ***\r\n
\tprops: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),\r\n
\r\n
\tfixHooks: {},\r\n
\r\n
\tkeyHooks: {\r\n
\t\tprops: "char charCode key keyCode".split(" "),\r\n
\t\tfilter: function( event, original ) {\r\n
\r\n
\t\t\t// Add which for key events\r\n
\t\t\tif ( event.which == null ) {\r\n
\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn event;\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tmouseHooks: {\r\n
\t\tprops: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),\r\n
\t\tfilter: function( event, original ) {\r\n
\t\t\tvar eventDoc, doc, body,\r\n
\t\t\t\tbutton = original.button,\r\n
\t\t\t\tfromElement = original.fromElement;\r\n
\r\n
\t\t\t// Calculate pageX/Y if missing and clientX/Y available\r\n
\t\t\tif ( event.pageX == null && original.clientX != null ) {\r\n
\t\t\t\teventDoc = event.target.ownerDocument || document;\r\n
\t\t\t\tdoc = eventDoc.documentElement;\r\n
\t\t\t\tbody = eventDoc.body;\r\n
\r\n
\t\t\t\tevent.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\r\n
\t\t\t\tevent.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Add relatedTarget, if necessary\r\n
\t\t\tif ( !event.relatedTarget && fromElement ) {\r\n
\t\t\t\tevent.relatedTarget = fromElement === event.target ? original.toElement : fromElement;\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\r\n
\t\t\t// Note: button is not normalized, so don\'t use it\r\n
\t\t\tif ( !event.which && button !== undefined ) {\r\n
\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn event;\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tfix: function( event ) {\r\n
\t\tif ( event[ jQuery.expando ] ) {\r\n
\t\t\treturn event;\r\n
\t\t}\r\n
\r\n
\t\t// Create a writable copy of the event object and normalize some properties\r\n
\t\tvar i, prop,\r\n
\t\t\toriginalEvent = event,\r\n
\t\t\tfixHook = jQuery.event.fixHooks[ event.type ] || {},\r\n
\t\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\r\n
\r\n
\t\tevent = jQuery.Event( originalEvent );\r\n
\r\n
\t\tfor ( i = copy.length; i; ) {\r\n
\t\t\tprop = copy[ --i ];\r\n
\t\t\tevent[ prop ] = originalEvent[ prop ];\r\n
\t\t}\r\n
\r\n
\t\t// Fix target property, if necessary (#1925, IE 6/7/8 & Safari2)\r\n
\t\tif ( !event.target ) {\r\n
\t\t\tevent.target = originalEvent.srcElement || document;\r\n
\t\t}\r\n
\r\n
\t\t// Target should not be a text node (#504, Safari)\r\n
\t\tif ( event.target.nodeType === 3 ) {\r\n
\t\t\tevent.target = event.target.parentNode;\r\n
\t\t}\r\n
\r\n
\t\t// For mouse/key events; add metaKey if it\'s not there (#3368, IE6/7/8)\r\n
\t\tif ( event.metaKey === undefined ) {\r\n
\t\t\tevent.metaKey = event.ctrlKey;\r\n
\t\t}\r\n
\r\n
\t\treturn fixHook.filter? fixHook.filter( event, originalEvent ) : event;\r\n
\t},\r\n
\r\n
\tspecial: {\r\n
\t\tready: {\r\n
\t\t\t// Make sure the ready event is setup\r\n
\t\t\tsetup: jQuery.bindReady\r\n
\t\t},\r\n
\r\n
\t\tload: {\r\n
\t\t\t// Prevent triggered image.load events from bubbling to window.load\r\n
\t\t\tnoBubble: true\r\n
\t\t},\r\n
\r\n
\t\tfocus: {\r\n
\t\t\tdelegateType: "focusin"\r\n
\t\t},\r\n
\t\tblur: {\r\n
\t\t\tdelegateType: "focusout"\r\n
\t\t},\r\n
\r\n
\t\tbeforeunload: {\r\n
\t\t\tsetup: function( data, namespaces, eventHandle ) {\r\n
\t\t\t\t// We only want to do this special case on windows\r\n
\t\t\t\tif ( jQuery.isWindow( this ) ) {\r\n
\t\t\t\t\tthis.onbeforeunload = eventHandle;\r\n
\t\t\t\t}\r\n
\t\t\t},\r\n
\r\n
\t\t\tteardown: function( namespaces, eventHandle ) {\r\n
\t\t\t\tif ( this.onbeforeunload === eventHandle ) {\r\n
\t\t\t\t\tthis.onbeforeunload = null;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tsimulate: function( type, elem, event, bubble ) {\r\n
\t\t// Piggyback on a donor event to simulate a different one.\r\n
\t\t// Fake originalEvent to avoid donor\'s stopPropagation, but if the\r\n
\t\t// simulated event prevents default then we do the same on the donor.\r\n
\t\tvar e = jQuery.extend(\r\n
\t\t\tnew jQuery.Event(),\r\n
\t\t\tevent,\r\n
\t\t\t{ type: type,\r\n
\t\t\t\tisSimulated: true,\r\n
\t\t\t\toriginalEvent: {}\r\n
\t\t\t}\r\n
\t\t);\r\n
\t\tif ( bubble ) {\r\n
\t\t\tjQuery.event.trigger( e, null, elem );\r\n
\t\t} else {\r\n
\t\t\tjQuery.event.dispatch.call( elem, e );\r\n
\t\t}\r\n
\t\tif ( e.isDefaultPrevented() ) {\r\n
\t\t\tevent.preventDefault();\r\n
\t\t}\r\n
\t}\r\n
};\r\n
\r\n
// Some plugins are using, but it\'s undocumented/deprecated and will be removed.\r\n
// The 1.7 special event interface should provide all the hooks needed now.\r\n
jQuery.event.handle = jQuery.event.dispatch;\r\n
\r\n
jQuery.removeEvent = document.removeEventListener ?\r\n
\tfunction( elem, type, handle ) {\r\n
\t\tif ( elem.removeEventListener ) {\r\n
\t\t\telem.removeEventListener( type, handle, false );\r\n
\t\t}\r\n
\t} :\r\n
\tfunction( elem, type, handle ) {\r\n
\t\tif ( elem.detachEvent ) {\r\n
\t\t\telem.detachEvent( "on" + type, handle );\r\n
\t\t}\r\n
\t};\r\n
\r\n
jQuery.Event = function( src, props ) {\r\n
\t// Allow instantiation without the \'new\' keyword\r\n
\tif ( !(this instanceof jQuery.Event) ) {\r\n
\t\treturn new jQuery.Event( src, props );\r\n
\t}\r\n
\r\n
\t// Event object\r\n
\tif ( src && src.type ) {\r\n
\t\tthis.originalEvent = src;\r\n
\t\tthis.type = src.type;\r\n
\r\n
\t\t// Events bubbling up the document may have been marked as prevented\r\n
\t\t// by a handler lower down the tree; reflect the correct value.\r\n
\t\tthis.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||\r\n
\t\t\tsrc.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;\r\n
\r\n
\t// Event type\r\n
\t} else {\r\n
\t\tthis.type = src;\r\n
\t}\r\n
\r\n
\t// Put explicitly provided properties onto the event object\r\n
\tif ( props ) {\r\n
\t\tjQuery.extend( this, props );\r\n
\t}\r\n
\r\n
\t// Create a timestamp if incoming event doesn\'t have one\r\n
\tthis.timeStamp = src && src.timeStamp || jQuery.now();\r\n
\r\n
\t// Mark it as fixed\r\n
\tthis[ jQuery.expando ] = true;\r\n
};\r\n
\r\n
function returnFalse() {\r\n
\treturn false;\r\n
}\r\n
function returnTrue() {\r\n
\treturn true;\r\n
}\r\n
\r\n
// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\r\n
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\r\n
jQuery.Event.prototype = {\r\n
\tpreventDefault: function() {\r\n
\t\tthis.isDefaultPrevented = returnTrue;\r\n
\r\n
\t\tvar e = this.originalEvent;\r\n
\t\tif ( !e ) {\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\t// if preventDefault exists run it on the original event\r\n
\t\tif ( e.preventDefault ) {\r\n
\t\t\te.preventDefault();\r\n
\r\n
\t\t// otherwise set the returnValue property of the original event to false (IE)\r\n
\t\t} else {\r\n
\t\t\te.returnValue = false;\r\n
\t\t}\r\n
\t},\r\n
\tstopPropagation: function() {\r\n
\t\tthis.isPropagationStopped = returnTrue;\r\n
\r\n
\t\tvar e = this.originalEvent;\r\n
\t\tif ( !e ) {\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\t\t// if stopPropagation exists run it on the original event\r\n
\t\tif ( e.stopPropagation ) {\r\n
\t\t\te.stopPropagation();\r\n
\t\t}\r\n
\t\t// otherwise set the cancelBubble property of the original event to true (IE)\r\n
\t\te.cancelBubble = true;\r\n
\t},\r\n
\tstopImmediatePropagation: function() {\r\n
\t\tthis.isImmediatePropagationStopped = returnTrue;\r\n
\t\tthis.stopPropagation();\r\n
\t},\r\n
\tisDefaultPrevented: returnFalse,\r\n
\tisPropagationStopped: returnFalse,\r\n
\tisImmediatePropagationStopped: returnFalse\r\n
};\r\n
\r\n
// Create mouseenter/leave events using mouseover/out and event-time checks\r\n
jQuery.each({\r\n
\tmouseenter: "mouseover",\r\n
\tmouseleave: "mouseout"\r\n
}, function( orig, fix ) {\r\n
\tjQuery.event.special[ orig ] = {\r\n
\t\tdelegateType: fix,\r\n
\t\tbindType: fix,\r\n
\r\n
\t\thandle: function( event ) {\r\n
\t\t\tvar target = this,\r\n
\t\t\t\trelated = event.relatedTarget,\r\n
\t\t\t\thandleObj = event.handleObj,\r\n
\t\t\t\tselector = handleObj.selector,\r\n
\t\t\t\tret;\r\n
\r\n
\t\t\t// For mousenter/leave call the handler if related is outside the target.\r\n
\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\r\n
\t\t\tif ( !related || (related !== target && !jQuery.contains( target, related )) ) {\r\n
\t\t\t\tevent.type = handleObj.origType;\r\n
\t\t\t\tret = handleObj.handler.apply( this, arguments );\r\n
\t\t\t\tevent.type = fix;\r\n
\t\t\t}\r\n
\t\t\treturn ret;\r\n
\t\t}\r\n
\t};\r\n
});\r\n
\r\n
// IE submit delegation\r\n
if ( !jQuery.support.submitBubbles ) {\r\n
\r\n
\tjQuery.event.special.submit = {\r\n
\t\tsetup: function() {\r\n
\t\t\t// Only need this for delegated form submit events\r\n
\t\t\tif ( jQuery.nodeName( this, "form" ) ) {\r\n
\t\t\t\treturn false;\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Lazy-add a submit handler when a descendant form may potentially be submitted\r\n
\t\t\tjQuery.event.add( this, "click._submit keypress._submit", function( e ) {\r\n
\t\t\t\t// Node name check avoids a VML-related crash in IE (#9807)\r\n
\t\t\t\tvar elem = e.target,\r\n
\t\t\t\t\tform = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? elem.form : undefined;\r\n
\t\t\t\tif ( form && !form._submit_attached ) {\r\n
\t\t\t\t\tjQuery.event.add( form, "submit._submit", function( event ) {\r\n
\t\t\t\t\t\t// If form was submitted by the user, bubble the event up the tree\r\n
\t\t\t\t\t\tif ( this.parentNode && !event.isTrigger ) {\r\n
\t\t\t\t\t\t\tjQuery.event.simulate( "submit", this.parentNode, event, true );\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t});\r\n
\t\t\t\t\tform._submit_attached = true;\r\n
\t\t\t\t}\r\n
\t\t\t});\r\n
\t\t\t// return undefined since we don\'t need an event listener\r\n
\t\t},\r\n
\r\n
\t\tteardown: function() {\r\n
\t\t\t// Only need this for delegated form submit events\r\n
\t\t\tif ( jQuery.nodeName( this, "form" ) ) {\r\n
\t\t\t\treturn false;\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Remove delegated handlers; cleanData eventually reaps submit handlers attached above\r\n
\t\t\tjQuery.event.remove( this, "._submit" );\r\n
\t\t}\r\n
\t};\r\n
}\r\n
\r\n
// IE change delegation and checkbox/radio fix\r\n
if ( !jQuery.support.changeBubbles ) {\r\n
\r\n
\tjQuery.event.special.change = {\r\n
\r\n
\t\tsetup: function() {\r\n
\r\n
\t\t\tif ( rformElems.test( this.nodeName ) ) {\r\n
\t\t\t\t// IE doesn\'t fire change on a check/radio until blur; trigger it on click\r\n
\t\t\t\t// after a propertychange. Eat the blur-change in special.change.handle.\r\n
\t\t\t\t// This still fires onchange a second time for check/radio after blur.\r\n
\t\t\t\tif ( this.type === "checkbox" || this.type === "radio" ) {\r\n
\t\t\t\t\tjQuery.event.add( this, "propertychange._change", function( event ) {\r\n
\t\t\t\t\t\tif ( event.originalEvent.propertyName === "checked" ) {\r\n
\t\t\t\t\t\t\tthis._just_changed = true;\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t});\r\n
\t\t\t\t\tjQuery.event.add( this, "click._change", function( event ) {\r\n
\t\t\t\t\t\tif ( this._just_changed && !event.isTrigger ) {\r\n
\t\t\t\t\t\t\tthis._just_changed = false;\r\n
\t\t\t\t\t\t\tjQuery.event.simulate( "change", this, event, true );\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t});\r\n
\t\t\t\t}\r\n
\t\t\t\treturn false;\r\n
\t\t\t}\r\n
\t\t\t// Delegated event; lazy-add a change handler on descendant inputs\r\n
\t\t\tjQuery.event.add( this, "beforeactivate._change", function( e ) {\r\n
\t\t\t\tvar elem = e.target;\r\n
\r\n
\t\t\t\tif ( rformElems.test( elem.nodeName ) && !elem._change_attached ) {\r\n
\t\t\t\t\tjQuery.event.add( elem, "change._change", function( event ) {\r\n
\t\t\t\t\t\tif ( this.parentNode && !event.isSimulated && !event.isTrigger ) {\r\n
\t\t\t\t\t\t\tjQuery.event.simulate( "change", this.parentNode, event, true );\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t});\r\n
\t\t\t\t\telem._change_attached = true;\r\n
\t\t\t\t}\r\n
\t\t\t});\r\n
\t\t},\r\n
\r\n
\t\thandle: function( event ) {\r\n
\t\t\tvar elem = event.target;\r\n
\r\n
\t\t\t// Swallow native change events from checkbox/radio, we already triggered them above\r\n
\t\t\tif ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" && elem.type !== "checkbox") ) {\r\n
\t\t\t\treturn event.handleObj.handler.apply( this, arguments );\r\n
\t\t\t}\r\n
\t\t},\r\n
\r\n
\t\tteardown: function() {\r\n
\t\t\tjQuery.event.remove( this, "._change" );\r\n
\r\n
\t\t\treturn rformElems.test( this.nodeName );\r\n
\t\t}\r\n
\t};\r\n
}\r\n
\r\n
// Create "bubbling" focus and blur events\r\n
if ( !jQuery.support.focusinBubbles ) {\r\n
\tjQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {\r\n
\r\n
\t\t// Attach a single capturing handler while someone wants focusin/focusout\r\n
\t\tvar attaches = 0,\r\n
\t\t\thandler = function( event ) {\r\n
\t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\r\n
\t\t\t};\r\n
\r\n
\t\tjQuery.event.special[ fix ] = {\r\n
\t\t\tsetup: function() {\r\n
\t\t\t\tif ( attaches++ === 0 ) {\r\n
\t\t\t\t\tdocument.addEventListener( orig, handler, true );\r\n
\t\t\t\t}\r\n
\t\t\t},\r\n
\t\t\tteardown: function() {\r\n
\t\t\t\tif ( --attaches === 0 ) {\r\n
\t\t\t\t\tdocument.removeEventListener( orig, handler, true );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t};\r\n
\t});\r\n
}\r\n
\r\n
jQuery.fn.extend({\r\n
\r\n
\ton: function( types, selector, data, fn, /*INTERNAL*/ one ) {\r\n
\t\tvar origFn, type;\r\n
\r\n
\t\t// Types can be a map of types/handlers\r\n
\t\tif ( typeof types === "object" ) {\r\n
\t\t\t// ( types-Object, selector, data )\r\n
\t\t\tif ( typeof selector !== "string" ) {\r\n
\t\t\t\t// ( types-Object, data )\r\n
\t\t\t\tdata = selector;\r\n
\t\t\t\tselector = undefined;\r\n
\t\t\t}\r\n
\t\t\tfor ( type in types ) {\r\n
\t\t\t\tthis.on( type, selector, data, types[ type ], one );\r\n
\t\t\t}\r\n
\t\t\treturn this;\r\n
\t\t}\r\n
\r\n
\t\tif ( data == null && fn == null ) {\r\n
\t\t\t// ( types, fn )\r\n
\t\t\tfn = selector;\r\n
\t\t\tdata = selector = undefined;\r\n
\t\t} else if ( fn == null ) {\r\n
\t\t\tif ( typeof selector === "string" ) {\r\n
\t\t\t\t// ( types, selector, fn )\r\n
\t\t\t\tfn = data;\r\n
\t\t\t\tdata = undefined;\r\n
\t\t\t} else {\r\n
\t\t\t\t// ( types, data, fn )\r\n
\t\t\t\tfn = data;\r\n
\t\t\t\tdata = selector;\r\n
\t\t\t\tselector = undefined;\r\n
\t\t\t}\r\n
\t\t}\r\n
\t\tif ( fn === false ) {\r\n
\t\t\tfn = returnFalse;\r\n
\t\t} else if ( !fn ) {\r\n
\t\t\treturn this;\r\n
\t\t}\r\n
\r\n
\t\tif ( one === 1 ) {\r\n
\t\t\torigFn = fn;\r\n
\t\t\tfn = function( event ) {\r\n
\t\t\t\t// Can use an empty set, since event contains the info\r\n
\t\t\t\tjQuery().off( event );\r\n
\t\t\t\treturn origFn.apply( this, arguments );\r\n
\t\t\t};\r\n
\t\t\t// Use same guid so caller can remove using origFn\r\n
\t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\r\n
\t\t}\r\n
\t\treturn this.each( function() {\r\n
\t\t\tjQuery.event.add( this, types, fn, data, selector );\r\n
\t\t});\r\n
\t},\r\n
\tone: function( types, selector, data, fn ) {\r\n
\t\treturn this.on.call( this, types, selector, data, fn, 1 );\r\n
\t},\r\n
\toff: function( types, selector, fn ) {\r\n
\t\tif ( types && types.preventDefault && types.handleObj ) {\r\n
\t\t\t// ( event )  dispatched jQuery.Event\r\n
\t\t\tvar handleObj = types.handleObj;\r\n
\t\t\tjQuery( types.delegateTarget ).off(\r\n
\t\t\t\thandleObj.namespace? handleObj.type + "." + handleObj.namespace : handleObj.type,\r\n
\t\t\t\thandleObj.selector,\r\n
\t\t\t\thandleObj.handler\r\n
\t\t\t);\r\n
\t\t\treturn this;\r\n
\t\t}\r\n
\t\tif ( typeof types === "object" ) {\r\n
\t\t\t// ( types-object [, selector] )\r\n
\t\t\tfor ( var type in types ) {\r\n
\t\t\t\tthis.off( type, selector, types[ type ] );\r\n
\t\t\t}\r\n
\t\t\treturn this;\r\n
\t\t}\r\n
\t\tif ( selector === false || typeof selector === "function" ) {\r\n
\t\t\t// ( types [, fn] )\r\n
\t\t\tfn = selector;\r\n
\t\t\tselector = undefined;\r\n
\t\t}\r\n
\t\tif ( fn === false ) {\r\n
\t\t\tfn = returnFalse;\r\n
\t\t}\r\n
\t\treturn this.each(function() {\r\n
\t\t\tjQuery.event.remove( this, types, fn, selector );\r\n
\t\t});\r\n
\t},\r\n
\r\n
\tbind: function( types, data, fn ) {\r\n
\t\treturn this.on( types, null, data, fn );\r\n
\t},\r\n
\tunbind: function( types, fn ) {\r\n
\t\treturn this.off( types, null, fn );\r\n
\t},\r\n
\r\n
\tlive: function( types, data, fn ) {\r\n
\t\tjQuery( this.context ).on( types, this.selector, data, fn );\r\n
\t\treturn this;\r\n
\t},\r\n
\tdie: function( types, fn ) {\r\n
\t\tjQuery( this.context ).off( types, this.selector || "**", fn );\r\n
\t\treturn this;\r\n
\t},\r\n
\r\n
\tdelegate: function( selector, types, data, fn ) {\r\n
\t\treturn this.on( types, selector, data, fn );\r\n
\t},\r\n
\tundelegate: function( selector, types, fn ) {\r\n
\t\t// ( namespace ) or ( selector, types [, fn] )\r\n
\t\treturn arguments.length == 1? this.off( selector, "**" ) : this.off( types, selector, fn );\r\n
\t},\r\n
\r\n
\ttrigger: function( type, data ) {\r\n
\t\treturn this.each(function() {\r\n
\t\t\tjQuery.event.trigger( type, data, this );\r\n
\t\t});\r\n
\t},\r\n
\ttriggerHandler: function( type, data ) {\r\n
\t\tif ( this[0] ) {\r\n
\t\t\treturn jQuery.event.trigger( type, data, this[0], true );\r\n
\t\t}\r\n
\t},\r\n
\r\n
\ttoggle: function( fn ) {\r\n
\t\t// Save reference to arguments for access in closure\r\n
\t\tvar args = arguments,\r\n
\t\t\tguid = fn.guid || jQuery.guid++,\r\n
\t\t\ti = 0,\r\n
\t\t\ttoggler = function( event ) {\r\n
\t\t\t\t// Figure out which function to execute\r\n
\t\t\t\tvar lastToggle = ( jQuery._data( this, "lastToggle" + fn.guid ) || 0 ) % i;\r\n
\t\t\t\tjQuery._data( this, "lastToggle" + fn.guid, lastToggle + 1 );\r\n
\r\n
\t\t\t\t// Make sure that clicks stop\r\n
\t\t\t\tevent.preventDefault();\r\n
\r\n
\t\t\t\t// and execute the function\r\n
\t\t\t\treturn args[ lastToggle ].apply( this, arguments ) || false;\r\n
\t\t\t};\r\n
\r\n
\t\t// link all the functions, so any of them can unbind this click handler\r\n
\t\ttoggler.guid = guid;\r\n
\t\twhile ( i < args.length ) {\r\n
\t\t\targs[ i++ ].guid = guid;\r\n
\t\t}\r\n
\r\n
\t\treturn this.click( toggler );\r\n
\t},\r\n
\r\n
\thover: function( fnOver, fnOut ) {\r\n
\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\r\n
\t}\r\n
});\r\n
\r\n
jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +\r\n
\t"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +\r\n
\t"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {\r\n
\r\n
\t// Handle event binding\r\n
\tjQuery.fn[ name ] = function( data, fn ) {\r\n
\t\tif ( fn == null ) {\r\n
\t\t\tfn = data;\r\n
\t\t\tdata = null;\r\n
\t\t}\r\n
\r\n
\t\treturn arguments.length > 0 ?\r\n
\t\t\tthis.on( name, null, data, fn ) :\r\n
\t\t\tthis.trigger( name );\r\n
\t};\r\n
\r\n
\tif ( jQuery.attrFn ) {\r\n
\t\tjQuery.attrFn[ name ] = true;\r\n
\t}\r\n
\r\n
\tif ( rkeyEvent.test( name ) ) {\r\n
\t\tjQuery.event.fixHooks[ name ] = jQuery.event.keyHooks;\r\n
\t}\r\n
\r\n
\tif ( rmouseEvent.test( name ) ) {\r\n
\t\tjQuery.event.fixHooks[ name ] = jQuery.event.mouseHooks;\r\n
\t}\r\n
});\r\n
\r\n
\r\n
\r\n
/*!\r\n
 * Sizzle CSS Selector Engine\r\n
 *  Copyright 2011, The Dojo Foundation\r\n
 *  Released under the MIT, BSD, and GPL Licenses.\r\n
 *  More information: http://sizzlejs.com/\r\n
 */\r\n
(function(){\r\n
\r\n
var chunker = /((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^\\[\\]]*\\]|[\'"][^\'"]*[\'"]|[^\\[\\]\'"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)/g,\r\n
\texpando = "sizcache" + (Math.random() + \'\').replace(\'.\', \'\'),\r\n
\tdone = 0,\r\n
\ttoString = Object.prototype.toString,\r\n
\thasDuplicate = false,\r\n
\tbaseHasDuplicate = true,\r\n
\trBackslash = /\\\\/g,\r\n
\trReturn = /\\r\\n/g,\r\n
\trNonWord = /\\W/;\r\n
\r\n
// Here we check if the JavaScript engine is using some sort of\r\n
// optimization where it does not always call our comparision\r\n
// function. If that is the case, discard the hasDuplicate value.\r\n
//   Thus far that includes Google Chrome.\r\n
[0, 0].sort(function() {\r\n
\tbaseHasDuplicate = false;\r\n
\treturn 0;\r\n
});\r\n
\r\n
var Sizzle = function( selector, context, results, seed ) {\r\n
\tresults = results || [];\r\n
\tcontext = context || document;\r\n
\r\n
\tvar origContext = context;\r\n
\r\n
\tif ( context.nodeType !== 1 && context.nodeType !== 9 ) {\r\n
\t\treturn [];\r\n
\t}\r\n
\t\r\n
\tif ( !selector || typeof selector !== "string" ) {\r\n
\t\treturn results;\r\n
\t}\r\n
\r\n
\tvar m, set, checkSet, extra, ret, cur, pop, i,\r\n
\t\tprune = true,\r\n
\t\tcontextXML = Sizzle.isXML( context ),\r\n
\t\tparts = [],\r\n
\t\tsoFar = selector;\r\n
\t\r\n
\t// Reset the position of the chunker regexp (start from head)\r\n
\tdo {\r\n
\t\tchunker.exec( "" );\r\n
\t\tm = chunker.exec( soFar );\r\n
\r\n
\t\tif ( m ) {\r\n
\t\t\tsoFar = m[3];\r\n
\t\t\r\n
\t\t\tparts.push( m[1] );\r\n
\t\t\r\n
\t\t\tif ( m[2] ) {\r\n
\t\t\t\textra = m[3];\r\n
\t\t\t\tbreak;\r\n
\t\t\t}\r\n
\t\t}\r\n
\t} while ( m );\r\n
\r\n
\tif ( parts.length > 1 && origPOS.exec( selector ) ) {\r\n
\r\n
\t\tif ( parts.length === 2 && Expr.relative[ parts[0] ] ) {\r\n
\t\t\tset = posProcess( parts[0] + parts[1], context, seed );\r\n
\r\n
\t\t} else {\r\n
\t\t\tset = Expr.relative[ parts[0] ] ?\r\n
\t\t\t\t[ context ] :\r\n
\t\t\t\tSizzle( parts.shift(), context );\r\n
\r\n
\t\t\twhile ( parts.length ) {\r\n
\t\t\t\tselector = parts.shift();\r\n
\r\n
\t\t\t\tif ( Expr.relative[ selector ] ) {\r\n
\t\t\t\t\tselector += parts.shift();\r\n
\t\t\t\t}\r\n
\t\t\t\t\r\n
\t\t\t\tset = posProcess( selector, set, seed );\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t} else {\r\n
\t\t// Take a shortcut and set the context if the root selector is an ID\r\n
\t\t// (but not if it\'ll be faster if the inner selector is an ID)\r\n
\t\tif ( !seed && parts.length > 1 && context.nodeType === 9 && !contextXML &&\r\n
\t\t\t\tExpr.match.ID.test(parts[0]) && !Expr.match.ID.test(parts[parts.length - 1]) ) {\r\n
\r\n
\t\t\tret = Sizzle.find( parts.shift(), context, contextXML );\r\n
\t\t\tcontext = ret.expr ?\r\n
\t\t\t\tSizzle.filter( ret.expr, ret.set )[0] :\r\n
\t\t\t\tret.set[0];\r\n
\t\t}\r\n
\r\n
\t\tif ( context ) {\r\n
\t\t\tret = seed ?\r\n
\t\t\t\t{ expr: parts.pop(), set: makeArray(seed) } :\r\n
\t\t\t\tSizzle.find( parts.pop(), parts.length === 1 && (parts[0] === "~" || parts[0] === "+") && context.parentNode ? context.parentNode : context, contextXML );\r\n
\r\n
\t\t\tset = ret.expr ?\r\n
\t\t\t\tSizzle.filter( ret.expr, ret.set ) :\r\n
\t\t\t\tret.set;\r\n
\r\n
\t\t\tif ( parts.length > 0 ) {\r\n
\t\t\t\tcheckSet = makeArray( set );\r\n
\r\n
\t\t\t} else {\r\n
\t\t\t\tprune = false;\r\n
\t\t\t}\r\n
\r\n
\t\t\twhile ( parts.length ) {\r\n
\t\t\t\tcur = parts.pop();\r\n
\t\t\t\tpop = cur;\r\n
\r\n
\t\t\t\tif ( !Expr.relative[ cur ] ) {\r\n
\t\t\t\t\tcur = "";\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\tpop = parts.pop();\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tif ( pop == null ) {\r\n
\t\t\t\t\tpop = context;\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tExpr.relative[ cur ]( checkSet, pop, contextXML );\r\n
\t\t\t}\r\n
\r\n
\t\t} else {\r\n
\t\t\tcheckSet = parts = [];\r\n
\t\t}\r\n
\t}\r\n
\r\n
\tif ( !checkSet ) {\r\n
\t\tcheckSet = set;\r\n
\t}\r\n
\r\n
\tif ( !checkSet ) {\r\n
\t\tSizzle.error( cur || selector );\r\n
\t}\r\n
\r\n
\tif ( toString.call(checkSet) === "[object Array]" ) {\r\n
\t\tif ( !prune ) {\r\n
\t\t\tresults.push.apply( results, checkSet );\r\n
\r\n
\t\t} else if ( context && context.nodeType === 1 ) {\r\n
\t\t\tfor ( i = 0; checkSet[i] != null; i++ ) {\r\n
\t\t\t\tif ( checkSet[i] && (checkSet[i] === true || checkSet[i].nodeType === 1 && Sizzle.contains(context, checkSet[i])) ) {\r\n
\t\t\t\t\tresults.push( set[i] );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t} else {\r\n
\t\t\tfor ( i = 0; checkSet[i] != null; i++ ) {\r\n
\t\t\t\tif ( checkSet[i] && checkSet[i].nodeType === 1 ) {\r\n
\t\t\t\t\tresults.push( set[i] );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t} else {\r\n
\t\tmakeArray( checkSet, results );\r\n
\t}\r\n
\r\n
\tif ( extra ) {\r\n
\t\tSizzle( extra, origContext, results, seed );\r\n
\t\tSizzle.uniqueSort( results );\r\n
\t}\r\n
\r\n
\treturn results;\r\n
};\r\n
\r\n
Sizzle.uniqueSort = function( results ) {\r\n
\tif ( sortOrder ) {\r\n
\t\thasDuplicate = baseHasDuplicate;\r\n
\t\tresults.sort( sortOrder );\r\n
\r\n
\t\tif ( hasDuplicate ) {\r\n
\t\t\tfor ( var i = 1; i < results.length; i++ ) {\r\n
\t\t\t\tif ( results[i] === results[ i - 1 ] ) {\r\n
\t\t\t\t\tresults.splice( i--, 1 );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
\r\n
\treturn results;\r\n
};\r\n
\r\n
Sizzle.matches = function( expr, set ) {\r\n
\treturn Sizzle( expr, null, null, set );\r\n
};\r\n
\r\n
Sizzle.matchesSelector = function( node, expr ) {\r\n
\treturn Sizzle( expr, null, null, [node] ).length > 0;\r\n
};\r\n
\r\n
Sizzle.find = function( expr, context, isXML ) {\r\n
\tvar set, i, len, match, type, left;\r\n
\r\n
\tif ( !expr ) {\r\n
\t\treturn [];\r\n
\t}\r\n
\r\n
\tfor ( i = 0, len = Expr.order.length; i < len; i++ ) {\r\n
\t\ttype = Expr.order[i];\r\n
\t\t\r\n
\t\tif ( (match = Expr.leftMatch[ type ].exec( expr )) ) {\r\n
\t\t\tleft = match[1];\r\n
\t\t\tmatch.splice( 1, 1 );\r\n
\r\n
\t\t\tif ( left.substr( left.length - 1 ) !== "\\\\" ) {\r\n
\t\t\t\tmatch[1] = (match[1] || "").replace( rBackslash, "" );\r\n
\t\t\t\tset = Expr.find[ type ]( match, context, isXML );\r\n
\r\n
\t\t\t\tif ( set != null ) {\r\n
\t\t\t\t\texpr = expr.replace( Expr.match[ type ], "" );\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
\r\n
\tif ( !set ) {\r\n
\t\tset = typeof context.getElementsByTagName !== "undefined" ?\r\n
\t\t\tcontext.getElementsByTagName( "*" ) :\r\n
\t\t\t[];\r\n
\t}\r\n
\r\n
\treturn { set: set, expr: expr };\r\n
};\r\n
\r\n
Sizzle.filter = function( expr, set, inplace, not ) {\r\n
\tvar match, anyFound,\r\n
\t\ttype, found, item, filter, left,\r\n
\t\ti, pass,\r\n
\t\told = expr,\r\n
\t\tresult = [],\r\n
\t\tcurLoop = set,\r\n
\t\tisXMLFilter = set && set[0] && Sizzle.isXML( set[0] );\r\n
\r\n
\twhile ( expr && set.length ) {\r\n
\t\tfor ( type in Expr.filter ) {\r\n
\t\t\tif ( (match = Expr.leftMatch[ type ].exec( expr )) != null && match[2] ) {\r\n
\t\t\t\tfilter = Expr.filter[ type ];\r\n
\t\t\t\tleft = match[1];\r\n
\r\n
\t\t\t\tanyFound = false;\r\n
\r\n
\t\t\t\tmatch.splice(1,1);\r\n
\r\n
\t\t\t\tif ( left.substr( left.length - 1 ) === "\\\\" ) {\r\n
\t\t\t\t\tcontinue;\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tif ( curLoop === result ) {\r\n
\t\t\t\t\tresult = [];\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tif ( Expr.preFilter[ type ] ) {\r\n
\t\t\t\t\tmatch = Expr.preFilter[ type ]( match, curLoop, inplace, result, not, isXMLFilter );\r\n
\r\n
\t\t\t\t\tif ( !match ) {\r\n
\t\t\t\t\t\tanyFound = found = true;\r\n
\r\n
\t\t\t\t\t} else if ( match === true ) {\r\n
\t\t\t\t\t\tcontinue;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tif ( match ) {\r\n
\t\t\t\t\tfor ( i = 0; (item = curLoop[i]) != null; i++ ) {\r\n
\t\t\t\t\t\tif ( item ) {\r\n
\t\t\t\t\t\t\tfound = filter( item, match, i, curLoop );\r\n
\t\t\t\t\t\t\tpass = not ^ found;\r\n
\r\n
\t\t\t\t\t\t\tif ( inplace && found != null ) {\r\n
\t\t\t\t\t\t\t\tif ( pass ) {\r\n
\t\t\t\t\t\t\t\t\tanyFound = true;\r\n
\r\n
\t\t\t\t\t\t\t\t} else {\r\n
\t\t\t\t\t\t\t\t\tcurLoop[i] = false;\r\n
\t\t\t\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t\t\t} else if ( pass ) {\r\n
\t\t\t\t\t\t\t\tresult.push( item );\r\n
\t\t\t\t\t\t\t\tanyFound = true;\r\n
\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tif ( found !== undefined ) {\r\n
\t\t\t\t\tif ( !inplace ) {\r\n
\t\t\t\t\t\tcurLoop = result;\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\texpr = expr.replace( Expr.match[ type ], "" );\r\n
\r\n
\t\t\t\t\tif ( !anyFound ) {\r\n
\t\t\t\t\t\treturn [];\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\t// Improper expression\r\n
\t\tif ( expr === old ) {\r\n
\t\t\tif ( anyFound == null ) {\r\n
\t\t\t\tSizzle.error( expr );\r\n
\r\n
\t\t\t} else {\r\n
\t\t\t\tbreak;\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\told = expr;\r\n
\t}\r\n
\r\n
\treturn curLoop;\r\n
};\r\n
\r\n
Sizzle.error = function( msg ) {\r\n
\tthrow new Error( "Syntax error, unrecognized expression: " + msg );\r\n
};\r\n
\r\n
/**\r\n
 * Utility function for retreiving the text value of an array of DOM nodes\r\n
 * @param {Array|Element} elem\r\n
 */\r\n
var getText = Sizzle.getText = function( elem ) {\r\n
    var i, node,\r\n
\t\tnodeType = elem.nodeType,\r\n
\t\tret = "";\r\n
\r\n
\tif ( nodeType ) {\r\n
\t\tif ( nodeType === 1 || nodeType === 9 ) {\r\n
\t\t\t// Use textContent || innerText for elements\r\n
\t\t\tif ( typeof elem.textContent === \'string\' ) {\r\n
\t\t\t\treturn elem.textContent;\r\n
\t\t\t} else if ( typeof elem.innerText === \'string\' ) {\r\n
\t\t\t\t// Replace IE\'s carriage returns\r\n
\t\t\t\treturn elem.innerText.replace( rReturn, \'\' );\r\n
\t\t\t} else {\r\n
\t\t\t\t// Traverse it\'s children\r\n
\t\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling) {\r\n
\t\t\t\t\tret += getText( elem );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t} else if ( nodeType === 3 || nodeType === 4 ) {\r\n
\t\t\treturn elem.nodeValue;\r\n
\t\t}\r\n
\t} else {\r\n
\r\n
\t\t// If no nodeType, this is expected to be an array\r\n
\t\tfor ( i = 0; (node = elem[i]); i++ ) {\r\n
\t\t\t// Do not traverse comment nodes\r\n
\t\t\tif ( node.nodeType !== 8 ) {\r\n
\t\t\t\tret += getText( node );\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
\treturn ret;\r\n
};\r\n
\r\n
var Expr = Sizzle.selectors = {\r\n
\torder: [ "ID", "NAME", "TAG" ],\r\n
\r\n
\tmatch: {\r\n
\t\tID: /#((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/,\r\n
\t\tCLASS: /\\.((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/,\r\n
\t\tNAME: /\\[name=[\'"]*((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)[\'"]*\\]/,\r\n
\t\tATTR: /\\[\\s*((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)\\s*(?:(\\S?=)\\s*(?:([\'"])(.*?)\\3|(#?(?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)*)|)|)\\s*\\]/,\r\n
\t\tTAG: /^((?:[\\w\\u00c0-\\uFFFF\\*\\-]|\\\\.)+)/,\r\n
\t\tCHILD: /:(only|nth|last|first)-child(?:\\(\\s*(even|odd|(?:[+\\-]?\\d+|(?:[+\\-]?\\d*)?n\\s*(?:[+\\-]\\s*\\d+)?))\\s*\\))?/,\r\n
\t\tPOS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\\((\\d*)\\))?(?=[^\\-]|$)/,\r\n
\t\tPSEUDO: /:((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)(?:\\(([\'"]?)((?:\\([^\\)]+\\)|[^\\(\\)]*)+)\\2\\))?/\r\n
\t},\r\n
\r\n
\tleftMatch: {},\r\n
\r\n
\tattrMap: {\r\n
\t\t"class": "className",\r\n
\t\t"for": "htmlFor"\r\n
\t},\r\n
\r\n
\tattrHandle: {\r\n
\t\thref: function( elem ) {\r\n
\t\t\treturn elem.getAttribute( "href" );\r\n
\t\t},\r\n
\t\ttype: function( elem ) {\r\n
\t\t\treturn elem.getAttribute( "type" );\r\n
\t\t}\r\n
\t},\r\n
\r\n
\trelative: {\r\n
\t\t"+": function(checkSet, part){\r\n
\t\t\tvar isPartStr = typeof part === "string",\r\n
\t\t\t\tisTag = isPartStr && !rNonWord.test( part ),\r\n
\t\t\t\tisPartStrNotTag = isPartStr && !isTag;\r\n
\r\n
\t\t\tif ( isTag ) {\r\n
\t\t\t\tpart = part.toLowerCase();\r\n
\t\t\t}\r\n
\r\n
\t\t\tfor ( var i = 0, l = checkSet.length, elem; i < l; i++ ) {\r\n
\t\t\t\tif ( (elem = checkSet[i]) ) {\r\n
\t\t\t\t\twhile ( (elem = elem.previousSibling) && elem.nodeType !== 1 ) {}\r\n
\r\n
\t\t\t\t\tcheckSet[i] = isPartStrNotTag || elem && elem.nodeName.toLowerCase() === part ?\r\n
\t\t\t\t\t\telem || false :\r\n
\t\t\t\t\t\telem === part;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\tif ( isPartStrNotTag ) {\r\n
\t\t\t\tSizzle.filter( part, checkSet, true );\r\n
\t\t\t}\r\n
\t\t},\r\n
\r\n
\t\t">": function( checkSet, part ) {\r\n
\t\t\tvar elem,\r\n
\t\t\t\tisPartStr = typeof part === "string",\r\n
\t\t\t\ti = 0,\r\n
\t\t\t\tl = checkSet.length;\r\n
\r\n
\t\t\tif ( isPartStr && !rNonWord.test( part ) ) {\r\n
\t\t\t\tpart = part.toLowerCase();\r\n
\r\n
\t\t\t\tfor ( ; i < l; i++ ) {\r\n
\t\t\t\t\telem = checkSet[i];\r\n
\r\n
\t\t\t\t\tif ( elem ) {\r\n
\t\t\t\t\t\tvar parent = elem.parentNode;\r\n
\t\t\t\t\t\tcheckSet[i] = parent.nodeName.toLowerCase() === part ? parent : false;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t} else {\r\n
\t\t\t\tfor ( ; i < l; i++ ) {\r\n
\t\t\t\t\telem = checkSet[i]

]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAM=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="3" aka="AAAAAAAAAAM=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

;\r\n
\r\n
\t\t\t\t\tif ( elem ) {\r\n
\t\t\t\t\t\tcheckSet[i] = isPartStr ?\r\n
\t\t\t\t\t\t\telem.parentNode :\r\n
\t\t\t\t\t\t\telem.parentNode === part;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tif ( isPartStr ) {\r\n
\t\t\t\t\tSizzle.filter( part, checkSet, true );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t},\r\n
\r\n
\t\t"": function(checkSet, part, isXML){\r\n
\t\t\tvar nodeCheck,\r\n
\t\t\t\tdoneName = done++,\r\n
\t\t\t\tcheckFn = dirCheck;\r\n
\r\n
\t\t\tif ( typeof part === "string" && !rNonWord.test( part ) ) {\r\n
\t\t\t\tpart = part.toLowerCase();\r\n
\t\t\t\tnodeCheck = part;\r\n
\t\t\t\tcheckFn = dirNodeCheck;\r\n
\t\t\t}\r\n
\r\n
\t\t\tcheckFn( "parentNode", part, doneName, checkSet, nodeCheck, isXML );\r\n
\t\t},\r\n
\r\n
\t\t"~": function( checkSet, part, isXML ) {\r\n
\t\t\tvar nodeCheck,\r\n
\t\t\t\tdoneName = done++,\r\n
\t\t\t\tcheckFn = dirCheck;\r\n
\r\n
\t\t\tif ( typeof part === "string" && !rNonWord.test( part ) ) {\r\n
\t\t\t\tpart = part.toLowerCase();\r\n
\t\t\t\tnodeCheck = part;\r\n
\t\t\t\tcheckFn = dirNodeCheck;\r\n
\t\t\t}\r\n
\r\n
\t\t\tcheckFn( "previousSibling", part, doneName, checkSet, nodeCheck, isXML );\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tfind: {\r\n
\t\tID: function( match, context, isXML ) {\r\n
\t\t\tif ( typeof context.getElementById !== "undefined" && !isXML ) {\r\n
\t\t\t\tvar m = context.getElementById(match[1]);\r\n
\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\r\n
\t\t\t\t// nodes that are no longer in the document #6963\r\n
\t\t\t\treturn m && m.parentNode ? [m] : [];\r\n
\t\t\t}\r\n
\t\t},\r\n
\r\n
\t\tNAME: function( match, context ) {\r\n
\t\t\tif ( typeof context.getElementsByName !== "undefined" ) {\r\n
\t\t\t\tvar ret = [],\r\n
\t\t\t\t\tresults = context.getElementsByName( match[1] );\r\n
\r\n
\t\t\t\tfor ( var i = 0, l = results.length; i < l; i++ ) {\r\n
\t\t\t\t\tif ( results[i].getAttribute("name") === match[1] ) {\r\n
\t\t\t\t\t\tret.push( results[i] );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\treturn ret.length === 0 ? null : ret;\r\n
\t\t\t}\r\n
\t\t},\r\n
\r\n
\t\tTAG: function( match, context ) {\r\n
\t\t\tif ( typeof context.getElementsByTagName !== "undefined" ) {\r\n
\t\t\t\treturn context.getElementsByTagName( match[1] );\r\n
\t\t\t}\r\n
\t\t}\r\n
\t},\r\n
\tpreFilter: {\r\n
\t\tCLASS: function( match, curLoop, inplace, result, not, isXML ) {\r\n
\t\t\tmatch = " " + match[1].replace( rBackslash, "" ) + " ";\r\n
\r\n
\t\t\tif ( isXML ) {\r\n
\t\t\t\treturn match;\r\n
\t\t\t}\r\n
\r\n
\t\t\tfor ( var i = 0, elem; (elem = curLoop[i]) != null; i++ ) {\r\n
\t\t\t\tif ( elem ) {\r\n
\t\t\t\t\tif ( not ^ (elem.className && (" " + elem.className + " ").replace(/[\\t\\n\\r]/g, " ").indexOf(match) >= 0) ) {\r\n
\t\t\t\t\t\tif ( !inplace ) {\r\n
\t\t\t\t\t\t\tresult.push( elem );\r\n
\t\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t} else if ( inplace ) {\r\n
\t\t\t\t\t\tcurLoop[i] = false;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn false;\r\n
\t\t},\r\n
\r\n
\t\tID: function( match ) {\r\n
\t\t\treturn match[1].replace( rBackslash, "" );\r\n
\t\t},\r\n
\r\n
\t\tTAG: function( match, curLoop ) {\r\n
\t\t\treturn match[1].replace( rBackslash, "" ).toLowerCase();\r\n
\t\t},\r\n
\r\n
\t\tCHILD: function( match ) {\r\n
\t\t\tif ( match[1] === "nth" ) {\r\n
\t\t\t\tif ( !match[2] ) {\r\n
\t\t\t\t\tSizzle.error( match[0] );\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tmatch[2] = match[2].replace(/^\\+|\\s*/g, \'\');\r\n
\r\n
\t\t\t\t// parse equations like \'even\', \'odd\', \'5\', \'2n\', \'3n+2\', \'4n-1\', \'-n+6\'\r\n
\t\t\t\tvar test = /(-?)(\\d*)(?:n([+\\-]?\\d*))?/.exec(\r\n
\t\t\t\t\tmatch[2] === "even" && "2n" || match[2] === "odd" && "2n+1" ||\r\n
\t\t\t\t\t!/\\D/.test( match[2] ) && "0n+" + match[2] || match[2]);\r\n
\r\n
\t\t\t\t// calculate the numbers (first)n+(last) including if they are negative\r\n
\t\t\t\tmatch[2] = (test[1] + (test[2] || 1)) - 0;\r\n
\t\t\t\tmatch[3] = test[3] - 0;\r\n
\t\t\t}\r\n
\t\t\telse if ( match[2] ) {\r\n
\t\t\t\tSizzle.error( match[0] );\r\n
\t\t\t}\r\n
\r\n
\t\t\t// TODO: Move to normal caching system\r\n
\t\t\tmatch[0] = done++;\r\n
\r\n
\t\t\treturn match;\r\n
\t\t},\r\n
\r\n
\t\tATTR: function( match, curLoop, inplace, result, not, isXML ) {\r\n
\t\t\tvar name = match[1] = match[1].replace( rBackslash, "" );\r\n
\t\t\t\r\n
\t\t\tif ( !isXML && Expr.attrMap[name] ) {\r\n
\t\t\t\tmatch[1] = Expr.attrMap[name];\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Handle if an un-quoted value was used\r\n
\t\t\tmatch[4] = ( match[4] || match[5] || "" ).replace( rBackslash, "" );\r\n
\r\n
\t\t\tif ( match[2] === "~=" ) {\r\n
\t\t\t\tmatch[4] = " " + match[4] + " ";\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn match;\r\n
\t\t},\r\n
\r\n
\t\tPSEUDO: function( match, curLoop, inplace, result, not ) {\r\n
\t\t\tif ( match[1] === "not" ) {\r\n
\t\t\t\t// If we\'re dealing with a complex expression, or a simple one\r\n
\t\t\t\tif ( ( chunker.exec(match[3]) || "" ).length > 1 || /^\\w/.test(match[3]) ) {\r\n
\t\t\t\t\tmatch[3] = Sizzle(match[3], null, null, curLoop);\r\n
\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\tvar ret = Sizzle.filter(match[3], curLoop, inplace, true ^ not);\r\n
\r\n
\t\t\t\t\tif ( !inplace ) {\r\n
\t\t\t\t\t\tresult.push.apply( result, ret );\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\treturn false;\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t} else if ( Expr.match.POS.test( match[0] ) || Expr.match.CHILD.test( match[0] ) ) {\r\n
\t\t\t\treturn true;\r\n
\t\t\t}\r\n
\t\t\t\r\n
\t\t\treturn match;\r\n
\t\t},\r\n
\r\n
\t\tPOS: function( match ) {\r\n
\t\t\tmatch.unshift( true );\r\n
\r\n
\t\t\treturn match;\r\n
\t\t}\r\n
\t},\r\n
\t\r\n
\tfilters: {\r\n
\t\tenabled: function( elem ) {\r\n
\t\t\treturn elem.disabled === false && elem.type !== "hidden";\r\n
\t\t},\r\n
\r\n
\t\tdisabled: function( elem ) {\r\n
\t\t\treturn elem.disabled === true;\r\n
\t\t},\r\n
\r\n
\t\tchecked: function( elem ) {\r\n
\t\t\treturn elem.checked === true;\r\n
\t\t},\r\n
\t\t\r\n
\t\tselected: function( elem ) {\r\n
\t\t\t// Accessing this property makes selected-by-default\r\n
\t\t\t// options in Safari work properly\r\n
\t\t\tif ( elem.parentNode ) {\r\n
\t\t\t\telem.parentNode.selectedIndex;\r\n
\t\t\t}\r\n
\t\t\t\r\n
\t\t\treturn elem.selected === true;\r\n
\t\t},\r\n
\r\n
\t\tparent: function( elem ) {\r\n
\t\t\treturn !!elem.firstChild;\r\n
\t\t},\r\n
\r\n
\t\tempty: function( elem ) {\r\n
\t\t\treturn !elem.firstChild;\r\n
\t\t},\r\n
\r\n
\t\thas: function( elem, i, match ) {\r\n
\t\t\treturn !!Sizzle( match[3], elem ).length;\r\n
\t\t},\r\n
\r\n
\t\theader: function( elem ) {\r\n
\t\t\treturn (/h\\d/i).test( elem.nodeName );\r\n
\t\t},\r\n
\r\n
\t\ttext: function( elem ) {\r\n
\t\t\tvar attr = elem.getAttribute( "type" ), type = elem.type;\r\n
\t\t\t// IE6 and 7 will map elem.type to \'text\' for new HTML5 types (search, etc) \r\n
\t\t\t// use getAttribute instead to test this case\r\n
\t\t\treturn elem.nodeName.toLowerCase() === "input" && "text" === type && ( attr === type || attr === null );\r\n
\t\t},\r\n
\r\n
\t\tradio: function( elem ) {\r\n
\t\t\treturn elem.nodeName.toLowerCase() === "input" && "radio" === elem.type;\r\n
\t\t},\r\n
\r\n
\t\tcheckbox: function( elem ) {\r\n
\t\t\treturn elem.nodeName.toLowerCase() === "input" && "checkbox" === elem.type;\r\n
\t\t},\r\n
\r\n
\t\tfile: function( elem ) {\r\n
\t\t\treturn elem.nodeName.toLowerCase() === "input" && "file" === elem.type;\r\n
\t\t},\r\n
\r\n
\t\tpassword: function( elem ) {\r\n
\t\t\treturn elem.nodeName.toLowerCase() === "input" && "password" === elem.type;\r\n
\t\t},\r\n
\r\n
\t\tsubmit: function( elem ) {\r\n
\t\t\tvar name = elem.nodeName.toLowerCase();\r\n
\t\t\treturn (name === "input" || name === "button") && "submit" === elem.type;\r\n
\t\t},\r\n
\r\n
\t\timage: function( elem ) {\r\n
\t\t\treturn elem.nodeName.toLowerCase() === "input" && "image" === elem.type;\r\n
\t\t},\r\n
\r\n
\t\treset: function( elem ) {\r\n
\t\t\tvar name = elem.nodeName.toLowerCase();\r\n
\t\t\treturn (name === "input" || name === "button") && "reset" === elem.type;\r\n
\t\t},\r\n
\r\n
\t\tbutton: function( elem ) {\r\n
\t\t\tvar name = elem.nodeName.toLowerCase();\r\n
\t\t\treturn name === "input" && "button" === elem.type || name === "button";\r\n
\t\t},\r\n
\r\n
\t\tinput: function( elem ) {\r\n
\t\t\treturn (/input|select|textarea|button/i).test( elem.nodeName );\r\n
\t\t},\r\n
\r\n
\t\tfocus: function( elem ) {\r\n
\t\t\treturn elem === elem.ownerDocument.activeElement;\r\n
\t\t}\r\n
\t},\r\n
\tsetFilters: {\r\n
\t\tfirst: function( elem, i ) {\r\n
\t\t\treturn i === 0;\r\n
\t\t},\r\n
\r\n
\t\tlast: function( elem, i, match, array ) {\r\n
\t\t\treturn i === array.length - 1;\r\n
\t\t},\r\n
\r\n
\t\teven: function( elem, i ) {\r\n
\t\t\treturn i % 2 === 0;\r\n
\t\t},\r\n
\r\n
\t\todd: function( elem, i ) {\r\n
\t\t\treturn i % 2 === 1;\r\n
\t\t},\r\n
\r\n
\t\tlt: function( elem, i, match ) {\r\n
\t\t\treturn i < match[3] - 0;\r\n
\t\t},\r\n
\r\n
\t\tgt: function( elem, i, match ) {\r\n
\t\t\treturn i > match[3] - 0;\r\n
\t\t},\r\n
\r\n
\t\tnth: function( elem, i, match ) {\r\n
\t\t\treturn match[3] - 0 === i;\r\n
\t\t},\r\n
\r\n
\t\teq: function( elem, i, match ) {\r\n
\t\t\treturn match[3] - 0 === i;\r\n
\t\t}\r\n
\t},\r\n
\tfilter: {\r\n
\t\tPSEUDO: function( elem, match, i, array ) {\r\n
\t\t\tvar name = match[1],\r\n
\t\t\t\tfilter = Expr.filters[ name ];\r\n
\r\n
\t\t\tif ( filter ) {\r\n
\t\t\t\treturn filter( elem, i, match, array );\r\n
\r\n
\t\t\t} else if ( name === "contains" ) {\r\n
\t\t\t\treturn (elem.textContent || elem.innerText || getText([ elem ]) || "").indexOf(match[3]) >= 0;\r\n
\r\n
\t\t\t} else if ( name === "not" ) {\r\n
\t\t\t\tvar not = match[3];\r\n
\r\n
\t\t\t\tfor ( var j = 0, l = not.length; j < l; j++ ) {\r\n
\t\t\t\t\tif ( not[j] === elem ) {\r\n
\t\t\t\t\t\treturn false;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\treturn true;\r\n
\r\n
\t\t\t} else {\r\n
\t\t\t\tSizzle.error( name );\r\n
\t\t\t}\r\n
\t\t},\r\n
\r\n
\t\tCHILD: function( elem, match ) {\r\n
\t\t\tvar first, last,\r\n
\t\t\t\tdoneName, parent, cache,\r\n
\t\t\t\tcount, diff,\r\n
\t\t\t\ttype = match[1],\r\n
\t\t\t\tnode = elem;\r\n
\r\n
\t\t\tswitch ( type ) {\r\n
\t\t\t\tcase "only":\r\n
\t\t\t\tcase "first":\r\n
\t\t\t\t\twhile ( (node = node.previousSibling) )\t {\r\n
\t\t\t\t\t\tif ( node.nodeType === 1 ) { \r\n
\t\t\t\t\t\t\treturn false; \r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\tif ( type === "first" ) { \r\n
\t\t\t\t\t\treturn true; \r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\tnode = elem;\r\n
\r\n
\t\t\t\tcase "last":\r\n
\t\t\t\t\twhile ( (node = node.nextSibling) )\t {\r\n
\t\t\t\t\t\tif ( node.nodeType === 1 ) { \r\n
\t\t\t\t\t\t\treturn false; \r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\treturn true;\r\n
\r\n
\t\t\t\tcase "nth":\r\n
\t\t\t\t\tfirst = match[2];\r\n
\t\t\t\t\tlast = match[3];\r\n
\r\n
\t\t\t\t\tif ( first === 1 && last === 0 ) {\r\n
\t\t\t\t\t\treturn true;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\t\r\n
\t\t\t\t\tdoneName = match[0];\r\n
\t\t\t\t\tparent = elem.parentNode;\r\n
\t\r\n
\t\t\t\t\tif ( parent && (parent[ expando ] !== doneName || !elem.nodeIndex) ) {\r\n
\t\t\t\t\t\tcount = 0;\r\n
\t\t\t\t\t\t\r\n
\t\t\t\t\t\tfor ( node = parent.firstChild; node; node = node.nextSibling ) {\r\n
\t\t\t\t\t\t\tif ( node.nodeType === 1 ) {\r\n
\t\t\t\t\t\t\t\tnode.nodeIndex = ++count;\r\n
\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t} \r\n
\r\n
\t\t\t\t\t\tparent[ expando ] = doneName;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\t\r\n
\t\t\t\t\tdiff = elem.nodeIndex - last;\r\n
\r\n
\t\t\t\t\tif ( first === 0 ) {\r\n
\t\t\t\t\t\treturn diff === 0;\r\n
\r\n
\t\t\t\t\t} else {\r\n
\t\t\t\t\t\treturn ( diff % first === 0 && diff / first >= 0 );\r\n
\t\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t},\r\n
\r\n
\t\tID: function( elem, match ) {\r\n
\t\t\treturn elem.nodeType === 1 && elem.getAttribute("id") === match;\r\n
\t\t},\r\n
\r\n
\t\tTAG: function( elem, match ) {\r\n
\t\t\treturn (match === "*" && elem.nodeType === 1) || !!elem.nodeName && elem.nodeName.toLowerCase() === match;\r\n
\t\t},\r\n
\t\t\r\n
\t\tCLASS: function( elem, match ) {\r\n
\t\t\treturn (" " + (elem.className || elem.getAttribute("class")) + " ")\r\n
\t\t\t\t.indexOf( match ) > -1;\r\n
\t\t},\r\n
\r\n
\t\tATTR: function( elem, match ) {\r\n
\t\t\tvar name = match[1],\r\n
\t\t\t\tresult = Sizzle.attr ?\r\n
\t\t\t\t\tSizzle.attr( elem, name ) :\r\n
\t\t\t\t\tExpr.attrHandle[ name ] ?\r\n
\t\t\t\t\tExpr.attrHandle[ name ]( elem ) :\r\n
\t\t\t\t\telem[ name ] != null ?\r\n
\t\t\t\t\t\telem[ name ] :\r\n
\t\t\t\t\t\telem.getAttribute( name ),\r\n
\t\t\t\tvalue = result + "",\r\n
\t\t\t\ttype = match[2],\r\n
\t\t\t\tcheck = match[4];\r\n
\r\n
\t\t\treturn result == null ?\r\n
\t\t\t\ttype === "!=" :\r\n
\t\t\t\t!type && Sizzle.attr ?\r\n
\t\t\t\tresult != null :\r\n
\t\t\t\ttype === "=" ?\r\n
\t\t\t\tvalue === check :\r\n
\t\t\t\ttype === "*=" ?\r\n
\t\t\t\tvalue.indexOf(check) >= 0 :\r\n
\t\t\t\ttype === "~=" ?\r\n
\t\t\t\t(" " + value + " ").indexOf(check) >= 0 :\r\n
\t\t\t\t!check ?\r\n
\t\t\t\tvalue && result !== false :\r\n
\t\t\t\ttype === "!=" ?\r\n
\t\t\t\tvalue !== check :\r\n
\t\t\t\ttype === "^=" ?\r\n
\t\t\t\tvalue.indexOf(check) === 0 :\r\n
\t\t\t\ttype === "$=" ?\r\n
\t\t\t\tvalue.substr(value.length - check.length) === check :\r\n
\t\t\t\ttype === "|=" ?\r\n
\t\t\t\tvalue === check || value.substr(0, check.length + 1) === check + "-" :\r\n
\t\t\t\tfalse;\r\n
\t\t},\r\n
\r\n
\t\tPOS: function( elem, match, i, array ) {\r\n
\t\t\tvar name = match[2],\r\n
\t\t\t\tfilter = Expr.setFilters[ name ];\r\n
\r\n
\t\t\tif ( filter ) {\r\n
\t\t\t\treturn filter( elem, i, match, array );\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
};\r\n
\r\n
var origPOS = Expr.match.POS,\r\n
\tfescape = function(all, num){\r\n
\t\treturn "\\\\" + (num - 0 + 1);\r\n
\t};\r\n
\r\n
for ( var type in Expr.match ) {\r\n
\tExpr.match[ type ] = new RegExp( Expr.match[ type ].source + (/(?![^\\[]*\\])(?![^\\(]*\\))/.source) );\r\n
\tExpr.leftMatch[ type ] = new RegExp( /(^(?:.|\\r|\\n)*?)/.source + Expr.match[ type ].source.replace(/\\\\(\\d+)/g, fescape) );\r\n
}\r\n
\r\n
var makeArray = function( array, results ) {\r\n
\tarray = Array.prototype.slice.call( array, 0 );\r\n
\r\n
\tif ( results ) {\r\n
\t\tresults.push.apply( results, array );\r\n
\t\treturn results;\r\n
\t}\r\n
\t\r\n
\treturn array;\r\n
};\r\n
\r\n
// Perform a simple check to determine if the browser is capable of\r\n
// converting a NodeList to an array using builtin methods.\r\n
// Also verifies that the returned array holds DOM nodes\r\n
// (which is not the case in the Blackberry browser)\r\n
try {\r\n
\tArray.prototype.slice.call( document.documentElement.childNodes, 0 )[0].nodeType;\r\n
\r\n
// Provide a fallback method if it does not work\r\n
} catch( e ) {\r\n
\tmakeArray = function( array, results ) {\r\n
\t\tvar i = 0,\r\n
\t\t\tret = results || [];\r\n
\r\n
\t\tif ( toString.call(array) === "[object Array]" ) {\r\n
\t\t\tArray.prototype.push.apply( ret, array );\r\n
\r\n
\t\t} else {\r\n
\t\t\tif ( typeof array.length === "number" ) {\r\n
\t\t\t\tfor ( var l = array.length; i < l; i++ ) {\r\n
\t\t\t\t\tret.push( array[i] );\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t} else {\r\n
\t\t\t\tfor ( ; array[i]; i++ ) {\r\n
\t\t\t\t\tret.push( array[i] );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn ret;\r\n
\t};\r\n
}\r\n
\r\n
var sortOrder, siblingCheck;\r\n
\r\n
if ( document.documentElement.compareDocumentPosition ) {\r\n
\tsortOrder = function( a, b ) {\r\n
\t\tif ( a === b ) {\r\n
\t\t\thasDuplicate = true;\r\n
\t\t\treturn 0;\r\n
\t\t}\r\n
\r\n
\t\tif ( !a.compareDocumentPosition || !b.compareDocumentPosition ) {\r\n
\t\t\treturn a.compareDocumentPosition ? -1 : 1;\r\n
\t\t}\r\n
\r\n
\t\treturn a.compareDocumentPosition(b) & 4 ? -1 : 1;\r\n
\t};\r\n
\r\n
} else {\r\n
\tsortOrder = function( a, b ) {\r\n
\t\t// The nodes are identical, we can exit early\r\n
\t\tif ( a === b ) {\r\n
\t\t\thasDuplicate = true;\r\n
\t\t\treturn 0;\r\n
\r\n
\t\t// Fallback to using sourceIndex (in IE) if it\'s available on both nodes\r\n
\t\t} else if ( a.sourceIndex && b.sourceIndex ) {\r\n
\t\t\treturn a.sourceIndex - b.sourceIndex;\r\n
\t\t}\r\n
\r\n
\t\tvar al, bl,\r\n
\t\t\tap = [],\r\n
\t\t\tbp = [],\r\n
\t\t\taup = a.parentNode,\r\n
\t\t\tbup = b.parentNode,\r\n
\t\t\tcur = aup;\r\n
\r\n
\t\t// If the nodes are siblings (or identical) we can do a quick check\r\n
\t\tif ( aup === bup ) {\r\n
\t\t\treturn siblingCheck( a, b );\r\n
\r\n
\t\t// If no parents were found then the nodes are disconnected\r\n
\t\t} else if ( !aup ) {\r\n
\t\t\treturn -1;\r\n
\r\n
\t\t} else if ( !bup ) {\r\n
\t\t\treturn 1;\r\n
\t\t}\r\n
\r\n
\t\t// Otherwise they\'re somewhere else in the tree so we need\r\n
\t\t// to build up a full list of the parentNodes for comparison\r\n
\t\twhile ( cur ) {\r\n
\t\t\tap.unshift( cur );\r\n
\t\t\tcur = cur.parentNode;\r\n
\t\t}\r\n
\r\n
\t\tcur = bup;\r\n
\r\n
\t\twhile ( cur ) {\r\n
\t\t\tbp.unshift( cur );\r\n
\t\t\tcur = cur.parentNode;\r\n
\t\t}\r\n
\r\n
\t\tal = ap.length;\r\n
\t\tbl = bp.length;\r\n
\r\n
\t\t// Start walking down the tree looking for a discrepancy\r\n
\t\tfor ( var i = 0; i < al && i < bl; i++ ) {\r\n
\t\t\tif ( ap[i] !== bp[i] ) {\r\n
\t\t\t\treturn siblingCheck( ap[i], bp[i] );\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\t// We ended someplace up the tree so do a sibling check\r\n
\t\treturn i === al ?\r\n
\t\t\tsiblingCheck( a, bp[i], -1 ) :\r\n
\t\t\tsiblingCheck( ap[i], b, 1 );\r\n
\t};\r\n
\r\n
\tsiblingCheck = function( a, b, ret ) {\r\n
\t\tif ( a === b ) {\r\n
\t\t\treturn ret;\r\n
\t\t}\r\n
\r\n
\t\tvar cur = a.nextSibling;\r\n
\r\n
\t\twhile ( cur ) {\r\n
\t\t\tif ( cur === b ) {\r\n
\t\t\t\treturn -1;\r\n
\t\t\t}\r\n
\r\n
\t\t\tcur = cur.nextSibling;\r\n
\t\t}\r\n
\r\n
\t\treturn 1;\r\n
\t};\r\n
}\r\n
\r\n
// Check to see if the browser returns elements by name when\r\n
// querying by getElementById (and provide a workaround)\r\n
(function(){\r\n
\t// We\'re going to inject a fake input element with a specified name\r\n
\tvar form = document.createElement("div"),\r\n
\t\tid = "script" + (new Date()).getTime(),\r\n
\t\troot = document.documentElement;\r\n
\r\n
\tform.innerHTML = "<a name=\'" + id + "\'/>";\r\n
\r\n
\t// Inject it into the root element, check its status, and remove it quickly\r\n
\troot.insertBefore( form, root.firstChild );\r\n
\r\n
\t// The workaround has to do additional checks after a getElementById\r\n
\t// Which slows things down for other browsers (hence the branching)\r\n
\tif ( document.getElementById( id ) ) {\r\n
\t\tExpr.find.ID = function( match, context, isXML ) {\r\n
\t\t\tif ( typeof context.getElementById !== "undefined" && !isXML ) {\r\n
\t\t\t\tvar m = context.getElementById(match[1]);\r\n
\r\n
\t\t\t\treturn m ?\r\n
\t\t\t\t\tm.id === match[1] || typeof m.getAttributeNode !== "undefined" && m.getAttributeNode("id").nodeValue === match[1] ?\r\n
\t\t\t\t\t\t[m] :\r\n
\t\t\t\t\t\tundefined :\r\n
\t\t\t\t\t[];\r\n
\t\t\t}\r\n
\t\t};\r\n
\r\n
\t\tExpr.filter.ID = function( elem, match ) {\r\n
\t\t\tvar node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");\r\n
\r\n
\t\t\treturn elem.nodeType === 1 && node && node.nodeValue === match;\r\n
\t\t};\r\n
\t}\r\n
\r\n
\troot.removeChild( form );\r\n
\r\n
\t// release memory in IE\r\n
\troot = form = null;\r\n
})();\r\n
\r\n
(function(){\r\n
\t// Check to see if the browser returns only elements\r\n
\t// when doing getElementsByTagName("*")\r\n
\r\n
\t// Create a fake element\r\n
\tvar div = document.createElement("div");\r\n
\tdiv.appendChild( document.createComment("") );\r\n
\r\n
\t// Make sure no comments are found\r\n
\tif ( div.getElementsByTagName("*").length > 0 ) {\r\n
\t\tExpr.find.TAG = function( match, context ) {\r\n
\t\t\tvar results = context.getElementsByTagName( match[1] );\r\n
\r\n
\t\t\t// Filter out possible comments\r\n
\t\t\tif ( match[1] === "*" ) {\r\n
\t\t\t\tvar tmp = [];\r\n
\r\n
\t\t\t\tfor ( var i = 0; results[i]; i++ ) {\r\n
\t\t\t\t\tif ( results[i].nodeType === 1 ) {\r\n
\t\t\t\t\t\ttmp.push( results[i] );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tresults = tmp;\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn results;\r\n
\t\t};\r\n
\t}\r\n
\r\n
\t// Check to see if an attribute returns normalized href attributes\r\n
\tdiv.innerHTML = "<a href=\'#\'></a>";\r\n
\r\n
\tif ( div.firstChild && typeof div.firstChild.getAttribute !== "undefined" &&\r\n
\t\t\tdiv.firstChild.getAttribute("href") !== "#" ) {\r\n
\r\n
\t\tExpr.attrHandle.href = function( elem ) {\r\n
\t\t\treturn elem.getAttribute( "href", 2 );\r\n
\t\t};\r\n
\t}\r\n
\r\n
\t// release memory in IE\r\n
\tdiv = null;\r\n
})();\r\n
\r\n
if ( document.querySelectorAll ) {\r\n
\t(function(){\r\n
\t\tvar oldSizzle = Sizzle,\r\n
\t\t\tdiv = document.createElement("div"),\r\n
\t\t\tid = "__sizzle__";\r\n
\r\n
\t\tdiv.innerHTML = "<p class=\'TEST\'></p>";\r\n
\r\n
\t\t// Safari can\'t handle uppercase or unicode characters when\r\n
\t\t// in quirks mode.\r\n
\t\tif ( div.querySelectorAll && div.querySelectorAll(".TEST").length === 0 ) {\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\t\r\n
\t\tSizzle = function( query, context, extra, seed ) {\r\n
\t\t\tcontext = context || document;\r\n
\r\n
\t\t\t// Only use querySelectorAll on non-XML documents\r\n
\t\t\t// (ID selectors don\'t work in non-HTML documents)\r\n
\t\t\tif ( !seed && !Sizzle.isXML(context) ) {\r\n
\t\t\t\t// See if we find a selector to speed up\r\n
\t\t\t\tvar match = /^(\\w+$)|^\\.([\\w\\-]+$)|^#([\\w\\-]+$)/.exec( query );\r\n
\t\t\t\t\r\n
\t\t\t\tif ( match && (context.nodeType === 1 || context.nodeType === 9) ) {\r\n
\t\t\t\t\t// Speed-up: Sizzle("TAG")\r\n
\t\t\t\t\tif ( match[1] ) {\r\n
\t\t\t\t\t\treturn makeArray( context.getElementsByTagName( query ), extra );\r\n
\t\t\t\t\t\r\n
\t\t\t\t\t// Speed-up: Sizzle(".CLASS")\r\n
\t\t\t\t\t} else if ( match[2] && Expr.find.CLASS && context.getElementsByClassName ) {\r\n
\t\t\t\t\t\treturn makeArray( context.getElementsByClassName( match[2] ), extra );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t\t\r\n
\t\t\t\tif ( context.nodeType === 9 ) {\r\n
\t\t\t\t\t// Speed-up: Sizzle("body")\r\n
\t\t\t\t\t// The body element only exists once, optimize finding it\r\n
\t\t\t\t\tif ( query === "body" && context.body ) {\r\n
\t\t\t\t\t\treturn makeArray( [ context.body ], extra );\r\n
\t\t\t\t\t\t\r\n
\t\t\t\t\t// Speed-up: Sizzle("#ID")\r\n
\t\t\t\t\t} else if ( match && match[3] ) {\r\n
\t\t\t\t\t\tvar elem = context.getElementById( match[3] );\r\n
\r\n
\t\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\r\n
\t\t\t\t\t\t// nodes that are no longer in the document #6963\r\n
\t\t\t\t\t\tif ( elem && elem.parentNode ) {\r\n
\t\t\t\t\t\t\t// Handle the case where IE and Opera return items\r\n
\t\t\t\t\t\t\t// by name instead of ID\r\n
\t\t\t\t\t\t\tif ( elem.id === match[3] ) {\r\n
\t\t\t\t\t\t\t\treturn makeArray( [ elem ], extra );\r\n
\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t\t\r\n
\t\t\t\t\t\t} else {\r\n
\t\t\t\t\t\t\treturn makeArray( [], extra );\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\t\r\n
\t\t\t\t\ttry {\r\n
\t\t\t\t\t\treturn makeArray( context.querySelectorAll(query), extra );\r\n
\t\t\t\t\t} catch(qsaError) {}\r\n
\r\n
\t\t\t\t// qSA works strangely on Element-rooted queries\r\n
\t\t\t\t// We can work around this by specifying an extra ID on the root\r\n
\t\t\t\t// and working up from there (Thanks to Andrew Dupont for the technique)\r\n
\t\t\t\t// IE 8 doesn\'t work on object elements\r\n
\t\t\t\t} else if ( context.nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {\r\n
\t\t\t\t\tvar oldContext = context,\r\n
\t\t\t\t\t\told = context.getAttribute( "id" ),\r\n
\t\t\t\t\t\tnid = old || id,\r\n
\t\t\t\t\t\thasParent = context.parentNode,\r\n
\t\t\t\t\t\trelativeHierarchySelector = /^\\s*[+~]/.test( query );\r\n
\r\n
\t\t\t\t\tif ( !old ) {\r\n
\t\t\t\t\t\tcontext.setAttribute( "id", nid );\r\n
\t\t\t\t\t} else {\r\n
\t\t\t\t\t\tnid = nid.replace( /\'/g, "\\\\$&" );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\tif ( relativeHierarchySelector && hasParent ) {\r\n
\t\t\t\t\t\tcontext = context.parentNode;\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\ttry {\r\n
\t\t\t\t\t\tif ( !relativeHierarchySelector || hasParent ) {\r\n
\t\t\t\t\t\t\treturn makeArray( context.querySelectorAll( "[id=\'" + nid + "\'] " + query ), extra );\r\n
\t\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t} catch(pseudoError) {\r\n
\t\t\t\t\t} finally {\r\n
\t\t\t\t\t\tif ( !old ) {\r\n
\t\t\t\t\t\t\toldContext.removeAttribute( "id" );\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t\r\n
\t\t\treturn oldSizzle(query, context, extra, seed);\r\n
\t\t};\r\n
\r\n
\t\tfor ( var prop in oldSizzle ) {\r\n
\t\t\tSizzle[ prop ] = oldSizzle[ prop ];\r\n
\t\t}\r\n
\r\n
\t\t// release memory in IE\r\n
\t\tdiv = null;\r\n
\t})();\r\n
}\r\n
\r\n
(function(){\r\n
\tvar html = document.documentElement,\r\n
\t\tmatches = html.matchesSelector || html.mozMatchesSelector || html.webkitMatchesSelector || html.msMatchesSelector;\r\n
\r\n
\tif ( matches ) {\r\n
\t\t// Check to see if it\'s possible to do matchesSelector\r\n
\t\t// on a disconnected node (IE 9 fails this)\r\n
\t\tvar disconnectedMatch = !matches.call( document.createElement( "div" ), "div" ),\r\n
\t\t\tpseudoWorks = false;\r\n
\r\n
\t\ttry {\r\n
\t\t\t// This should fail with an exception\r\n
\t\t\t// Gecko does not error, returns false instead\r\n
\t\t\tmatches.call( document.documentElement, "[test!=\'\']:sizzle" );\r\n
\t\r\n
\t\t} catch( pseudoError ) {\r\n
\t\t\tpseudoWorks = true;\r\n
\t\t}\r\n
\r\n
\t\tSizzle.matchesSelector = function( node, expr ) {\r\n
\t\t\t// Make sure that attribute selectors are quoted\r\n
\t\t\texpr = expr.replace(/\\=\\s*([^\'"\\]]*)\\s*\\]/g, "=\'$1\']");\r\n
\r\n
\t\t\tif ( !Sizzle.isXML( node ) ) {\r\n
\t\t\t\ttry { \r\n
\t\t\t\t\tif ( pseudoWorks || !Expr.match.PSEUDO.test( expr ) && !/!=/.test( expr ) ) {\r\n
\t\t\t\t\t\tvar ret = matches.call( node, expr );\r\n
\r\n
\t\t\t\t\t\t// IE 9\'s matchesSelector returns false on disconnected nodes\r\n
\t\t\t\t\t\tif ( ret || !disconnectedMatch ||\r\n
\t\t\t\t\t\t\t\t// As well, disconnected nodes are said to be in a document\r\n
\t\t\t\t\t\t\t\t// fragment in IE 9, so check for that\r\n
\t\t\t\t\t\t\t\tnode.document && node.document.nodeType !== 11 ) {\r\n
\t\t\t\t\t\t\treturn ret;\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\t\t\t\t} catch(e) {}\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn Sizzle(expr, null, null, [node]).length > 0;\r\n
\t\t};\r\n
\t}\r\n
})();\r\n
\r\n
(function(){\r\n
\tvar div = document.createElement("div");\r\n
\r\n
\tdiv.innerHTML = "<div class=\'test e\'></div><div class=\'test\'></div>";\r\n
\r\n
\t// Opera can\'t find a second classname (in 9.6)\r\n
\t// Also, make sure that getElementsByClassName actually exists\r\n
\tif ( !div.getElementsByClassName || div.getElementsByClassName("e").length === 0 ) {\r\n
\t\treturn;\r\n
\t}\r\n
\r\n
\t// Safari caches class attributes, doesn\'t catch changes (in 3.2)\r\n
\tdiv.lastChild.className = "e";\r\n
\r\n
\tif ( div.getElementsByClassName("e").length === 1 ) {\r\n
\t\treturn;\r\n
\t}\r\n
\t\r\n
\tExpr.order.splice(1, 0, "CLASS");\r\n
\tExpr.find.CLASS = function( match, context, isXML ) {\r\n
\t\tif ( typeof context.getElementsByClassName !== "undefined" && !isXML ) {\r\n
\t\t\treturn context.getElementsByClassName(match[1]);\r\n
\t\t}\r\n
\t};\r\n
\r\n
\t// release memory in IE\r\n
\tdiv = null;\r\n
})();\r\n
\r\n
function dirNodeCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {\r\n
\tfor ( var i = 0, l = checkSet.length; i < l; i++ ) {\r\n
\t\tvar elem = checkSet[i];\r\n
\r\n
\t\tif ( elem ) {\r\n
\t\t\tvar match = false;\r\n
\r\n
\t\t\telem = elem[dir];\r\n
\r\n
\t\t\twhile ( elem ) {\r\n
\t\t\t\tif ( elem[ expando ] === doneName ) {\r\n
\t\t\t\t\tmatch = checkSet[elem.sizset];\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tif ( elem.nodeType === 1 && !isXML ){\r\n
\t\t\t\t\telem[ expando ] = doneName;\r\n
\t\t\t\t\telem.sizset = i;\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tif ( elem.nodeName.toLowerCase() === cur ) {\r\n
\t\t\t\t\tmatch = elem;\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\telem = elem[dir];\r\n
\t\t\t}\r\n
\r\n
\t\t\tcheckSet[i] = match;\r\n
\t\t}\r\n
\t}\r\n
}\r\n
\r\n
function dirCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {\r\n
\tfor ( var i = 0, l = checkSet.length; i < l; i++ ) {\r\n
\t\tvar elem = checkSet[i];\r\n
\r\n
\t\tif ( elem ) {\r\n
\t\t\tvar match = false;\r\n
\t\t\t\r\n
\t\t\telem = elem[dir];\r\n
\r\n
\t\t\twhile ( elem ) {\r\n
\t\t\t\tif ( elem[ expando ] === doneName ) {\r\n
\t\t\t\t\tmatch = checkSet[elem.sizset];\r\n
\t\t\t\t\tbreak;\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tif ( elem.nodeType === 1 ) {\r\n
\t\t\t\t\tif ( !isXML ) {\r\n
\t\t\t\t\t\telem[ expando ] = doneName;\r\n
\t\t\t\t\t\telem.sizset = i;\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\tif ( typeof cur !== "string" ) {\r\n
\t\t\t\t\t\tif ( elem === cur ) {\r\n
\t\t\t\t\t\t\tmatch = true;\r\n
\t\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t} else if ( Sizzle.filter( cur, [elem] ).length > 0 ) {\r\n
\t\t\t\t\t\tmatch = elem;\r\n
\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\telem = elem[dir];\r\n
\t\t\t}\r\n
\r\n
\t\t\tcheckSet[i] = match;\r\n
\t\t}\r\n
\t}\r\n
}\r\n
\r\n
if ( document.documentElement.contains ) {\r\n
\tSizzle.contains = function( a, b ) {\r\n
\t\treturn a !== b && (a.contains ? a.contains(b) : true);\r\n
\t};\r\n
\r\n
} else if ( document.documentElement.compareDocumentPosition ) {\r\n
\tSizzle.contains = function( a, b ) {\r\n
\t\treturn !!(a.compareDocumentPosition(b) & 16);\r\n
\t};\r\n
\r\n
} else {\r\n
\tSizzle.contains = function() {\r\n
\t\treturn false;\r\n
\t};\r\n
}\r\n
\r\n
Sizzle.isXML = function( elem ) {\r\n
\t// documentElement is verified for cases where it doesn\'t yet exist\r\n
\t// (such as loading iframes in IE - #4833) \r\n
\tvar documentElement = (elem ? elem.ownerDocument || elem : 0).documentElement;\r\n
\r\n
\treturn documentElement ? documentElement.nodeName !== "HTML" : false;\r\n
};\r\n
\r\n
var posProcess = function( selector, context, seed ) {\r\n
\tvar match,\r\n
\t\ttmpSet = [],\r\n
\t\tlater = "",\r\n
\t\troot = context.nodeType ? [context] : context;\r\n
\r\n
\t// Position selectors must be done after the filter\r\n
\t// And so must :not(positional) so we move all PSEUDOs to the end\r\n
\twhile ( (match = Expr.match.PSEUDO.exec( selector )) ) {\r\n
\t\tlater += match[0];\r\n
\t\tselector = selector.replace( Expr.match.PSEUDO, "" );\r\n
\t}\r\n
\r\n
\tselector = Expr.relative[selector] ? selector + "*" : selector;\r\n
\r\n
\tfor ( var i = 0, l = root.length; i < l; i++ ) {\r\n
\t\tSizzle( selector, root[i], tmpSet, seed );\r\n
\t}\r\n
\r\n
\treturn Sizzle.filter( later, tmpSet );\r\n
};\r\n
\r\n
// EXPOSE\r\n
// Override sizzle attribute retrieval\r\n
Sizzle.attr = jQuery.attr;\r\n
Sizzle.selectors.attrMap = {};\r\n
jQuery.find = Sizzle;\r\n
jQuery.expr = Sizzle.selectors;\r\n
jQuery.expr[":"] = jQuery.expr.filters;\r\n
jQuery.unique = Sizzle.uniqueSort;\r\n
jQuery.text = Sizzle.getText;\r\n
jQuery.isXMLDoc = Sizzle.isXML;\r\n
jQuery.contains = Sizzle.contains;\r\n
\r\n
\r\n
})();\r\n
\r\n
\r\n
var runtil = /Until$/,\r\n
\trparentsprev = /^(?:parents|prevUntil|prevAll)/,\r\n
\t// Note: This RegExp should be improved, or likely pulled from Sizzle\r\n
\trmultiselector = /,/,\r\n
\tisSimple = /^.[^:#\\[\\.,]*$/,\r\n
\tslice = Array.prototype.slice,\r\n
\tPOS = jQuery.expr.match.POS,\r\n
\t// methods guaranteed to produce a unique set when starting from a unique set\r\n
\tguaranteedUnique = {\r\n
\t\tchildren: true,\r\n
\t\tcontents: true,\r\n
\t\tnext: true,\r\n
\t\tprev: true\r\n
\t};\r\n
\r\n
jQuery.fn.extend({\r\n
\tfind: function( selector ) {\r\n
\t\tvar self = this,\r\n
\t\t\ti, l;\r\n
\r\n
\t\tif ( typeof selector !== "string" ) {\r\n
\t\t\treturn jQuery( selector ).filter(function() {\r\n
\t\t\t\tfor ( i = 0, l = self.length; i < l; i++ ) {\r\n
\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\r\n
\t\t\t\t\t\treturn true;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t});\r\n
\t\t}\r\n
\r\n
\t\tvar ret = this.pushStack( "", "find", selector ),\r\n
\t\t\tlength, n, r;\r\n
\r\n
\t\tfor ( i = 0, l = this.length; i < l; i++ ) {\r\n
\t\t\tlength = ret.length;\r\n
\t\t\tjQuery.find( selector, this[i], ret );\r\n
\r\n
\t\t\tif ( i > 0 ) {\r\n
\t\t\t\t// Make sure that the results are unique\r\n
\t\t\t\tfor ( n = length; n < ret.length; n++ ) {\r\n
\t\t\t\t\tfor ( r = 0; r < length; r++ ) {\r\n
\t\t\t\t\t\tif ( ret[r] === ret[n] ) {\r\n
\t\t\t\t\t\t\tret.splice(n--, 1);\r\n
\t\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn ret;\r\n
\t},\r\n
\r\n
\thas: function( target ) {\r\n
\t\tvar targets = jQuery( target );\r\n
\t\treturn this.filter(function() {\r\n
\t\t\tfor ( var i = 0, l = targets.length; i < l; i++ ) {\r\n
\t\t\t\tif ( jQuery.contains( this, targets[i] ) ) {\r\n
\t\t\t\t\treturn true;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t});\r\n
\t},\r\n
\r\n
\tnot: function( selector ) {\r\n
\t\treturn this.pushStack( winnow(this, selector, false), "not", selector);\r\n
\t},\r\n
\r\n
\tfilter: function( selector ) {\r\n
\t\treturn this.pushStack( winnow(this, selector, true), "filter", selector );\r\n
\t},\r\n
\r\n
\tis: function( selector ) {\r\n
\t\treturn !!selector && ( \r\n
\t\t\ttypeof selector === "string" ?\r\n
\t\t\t\t// If this is a positional selector, check membership in the returned set\r\n
\t\t\t\t// so $("p:first").is("p:last") won\'t return true for a doc with two "p".\r\n
\t\t\t\tPOS.test( selector ) ? \r\n
\t\t\t\t\tjQuery( selector, this.context ).index( this[0] ) >= 0 :\r\n
\t\t\t\t\tjQuery.filter( selector, this ).length > 0 :\r\n
\t\t\t\tthis.filter( selector ).length > 0 );\r\n
\t},\r\n
\r\n
\tclosest: function( selectors, context ) {\r\n
\t\tvar ret = [], i, l, cur = this[0];\r\n
\t\t\r\n
\t\t// Array (deprecated as of jQuery 1.7)\r\n
\t\tif ( jQuery.isArray( selectors ) ) {\r\n
\t\t\tvar level = 1;\r\n
\r\n
\t\t\twhile ( cur && cur.ownerDocument && cur !== context ) {\r\n
\t\t\t\tfor ( i = 0; i < selectors.length; i++ ) {\r\n
\r\n
\t\t\t\t\tif ( jQuery( cur ).is( selectors[ i ] ) ) {\r\n
\t\t\t\t\t\tret.push({ selector: selectors[ i ], elem: cur, level: level });\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tcur = cur.parentNode;\r\n
\t\t\t\tlevel++;\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn ret;\r\n
\t\t}\r\n
\r\n
\t\t// String\r\n
\t\tvar pos = POS.test( selectors ) || typeof selectors !== "string" ?\r\n
\t\t\t\tjQuery( selectors, context || this.context ) :\r\n
\t\t\t\t0;\r\n
\r\n
\t\tfor ( i = 0, l = this.length; i < l; i++ ) {\r\n
\t\t\tcur = this[i];\r\n
\r\n
\t\t\twhile ( cur ) {\r\n
\t\t\t\tif ( pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors) ) {\r\n
\t\t\t\t\tret.push( cur );\r\n
\t\t\t\t\tbreak;\r\n
\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\tcur = cur.parentNode;\r\n
\t\t\t\t\tif ( !cur || !cur.ownerDocument || cur === context || cur.nodeType === 11 ) {\r\n
\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\tret = ret.length > 1 ? jQuery.unique( ret ) : ret;\r\n
\r\n
\t\treturn this.pushStack( ret, "closest", selectors );\r\n
\t},\r\n
\r\n
\t// Determine the position of an element within\r\n
\t// the matched set of elements\r\n
\tindex: function( elem ) {\r\n
\r\n
\t\t// No argument, return index in parent\r\n
\t\tif ( !elem ) {\r\n
\t\t\treturn ( this[0] && this[0].parentNode ) ? this.prevAll().length : -1;\r\n
\t\t}\r\n
\r\n
\t\t// index in selector\r\n
\t\tif ( typeof elem === "string" ) {\r\n
\t\t\treturn jQuery.inArray( this[0], jQuery( elem ) );\r\n
\t\t}\r\n
\r\n
\t\t// Locate the position of the desired element\r\n
\t\treturn jQuery.inArray(\r\n
\t\t\t// If it receives a jQuery object, the first element is used\r\n
\t\t\telem.jquery ? elem[0] : elem, this );\r\n
\t},\r\n
\r\n
\tadd: function( selector, context ) {\r\n
\t\tvar set = typeof selector === "string" ?\r\n
\t\t\t\tjQuery( selector, context ) :\r\n
\t\t\t\tjQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),\r\n
\t\t\tall = jQuery.merge( this.get(), set );\r\n
\r\n
\t\treturn this.pushStack( isDisconnected( set[0] ) || isDisconnected( all[0] ) ?\r\n
\t\t\tall :\r\n
\t\t\tjQuery.unique( all ) );\r\n
\t},\r\n
\r\n
\tandSelf: function() {\r\n
\t\treturn this.add( this.prevObject );\r\n
\t}\r\n
});\r\n
\r\n
// A painfully simple check to see if an element is disconnected\r\n
// from a document (should be improved, where feasible).\r\n
function isDisconnected( node ) {\r\n
\treturn !node || !node.parentNode || node.parentNode.nodeType === 11;\r\n
}\r\n
\r\n
jQuery.each({\r\n
\tparent: function( elem ) {\r\n
\t\tvar parent = elem.parentNode;\r\n
\t\treturn parent && parent.nodeType !== 11 ? parent : null;\r\n
\t},\r\n
\tparents: function( elem ) {\r\n
\t\treturn jQuery.dir( elem, "parentNode" );\r\n
\t},\r\n
\tparentsUntil: function( elem, i, until ) {\r\n
\t\treturn jQuery.dir( elem, "parentNode", until );\r\n
\t},\r\n
\tnext: function( elem ) {\r\n
\t\treturn jQuery.nth( elem, 2, "nextSibling" );\r\n
\t},\r\n
\tprev: function( elem ) {\r\n
\t\treturn jQuery.nth( elem, 2, "previousSibling" );\r\n
\t},\r\n
\tnextAll: function( elem ) {\r\n
\t\treturn jQuery.dir( elem, "nextSibling" );\r\n
\t},\r\n
\tprevAll: function( elem ) {\r\n
\t\treturn jQuery.dir( elem, "previousSibling" );\r\n
\t},\r\n
\tnextUntil: function( elem, i, until ) {\r\n
\t\treturn jQuery.dir( elem, "nextSibling", until );\r\n
\t},\r\n
\tprevUntil: function( elem, i, until ) {\r\n
\t\treturn jQuery.dir( elem, "previousSibling", until );\r\n
\t},\r\n
\tsiblings: function( elem ) {\r\n
\t\treturn jQuery.sibling( elem.parentNode.firstChild, elem );\r\n
\t},\r\n
\tchildren: function( elem ) {\r\n
\t\treturn jQuery.sibling( elem.firstChild );\r\n
\t},\r\n
\tcontents: function( elem ) {\r\n
\t\treturn jQuery.nodeName( elem, "iframe" ) ?\r\n
\t\t\telem.contentDocument || elem.contentWindow.document :\r\n
\t\t\tjQuery.makeArray( elem.childNodes );\r\n
\t}\r\n
}, function( name, fn ) {\r\n
\tjQuery.fn[ name ] = function( until, selector ) {\r\n
\t\tvar ret = jQuery.map( this, fn, until );\r\n
\r\n
\t\tif ( !runtil.test( name ) ) {\r\n
\t\t\tselector = until;\r\n
\t\t}\r\n
\r\n
\t\tif ( selector && typeof selector === "string" ) {\r\n
\t\t\tret = jQuery.filter( selector, ret );\r\n
\t\t}\r\n
\r\n
\t\tret = this.length > 1 && !guaranteedUnique[ name ] ? jQuery.unique( ret ) : ret;\r\n
\r\n
\t\tif ( (this.length > 1 || rmultiselector.test( selector )) && rparentsprev.test( name ) ) {\r\n
\t\t\tret = ret.reverse();\r\n
\t\t}\r\n
\r\n
\t\treturn this.pushStack( ret, name, slice.call( arguments ).join(",") );\r\n
\t};\r\n
});\r\n
\r\n
jQuery.extend({\r\n
\tfilter: function( expr, elems, not ) {\r\n
\t\tif ( not ) {\r\n
\t\t\texpr = ":not(" + expr + ")";\r\n
\t\t}\r\n
\r\n
\t\treturn elems.length === 1 ?\r\n
\t\t\tjQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] :\r\n
\t\t\tjQuery.find.matches(expr, elems);\r\n
\t},\r\n
\r\n
\tdir: function( elem, dir, until ) {\r\n
\t\tvar matched = [],\r\n
\t\t\tcur = elem[ dir ];\r\n
\r\n
\t\twhile ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {\r\n
\t\t\tif ( cur.nodeType === 1 ) {\r\n
\t\t\t\tmatched.push( cur );\r\n
\t\t\t}\r\n
\t\t\tcur = cur[dir];\r\n
\t\t}\r\n
\t\treturn matched;\r\n
\t},\r\n
\r\n
\tnth: function( cur, result, dir, elem ) {\r\n
\t\tresult = result || 1;\r\n
\t\tvar num = 0;\r\n
\r\n
\t\tfor ( ; cur; cur = cur[dir] ) {\r\n
\t\t\tif ( cur.nodeType === 1 && ++num === result ) {\r\n
\t\t\t\tbreak;\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn cur;\r\n
\t},\r\n
\r\n
\tsibling: function( n, elem ) {\r\n
\t\tvar r = [];\r\n
\r\n
\t\tfor ( ; n; n = n.nextSibling ) {\r\n
\t\t\tif ( n.nodeType === 1 && n !== elem ) {\r\n
\t\t\t\tr.push( n );\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn r;\r\n
\t}\r\n
});\r\n
\r\n
// Implement the identical functionality for filter and not\r\n
function winnow( elements, qualifier, keep ) {\r\n
\r\n
\t// Can\'t pass null or undefined to indexOf in Firefox 4\r\n
\t// Set to 0 to skip string check\r\n
\tqualifier = qualifier || 0;\r\n
\r\n
\tif ( jQuery.isFunction( qualifier ) ) {\r\n
\t\treturn jQuery.grep(elements, function( elem, i ) {\r\n
\t\t\tvar retVal = !!qualifier.call( elem, i, elem );\r\n
\t\t\treturn retVal === keep;\r\n
\t\t});\r\n
\r\n
\t} else if ( qualifier.nodeType ) {\r\n
\t\treturn jQuery.grep(elements, function( elem, i ) {\r\n
\t\t\treturn ( elem === qualifier ) === keep;\r\n
\t\t});\r\n
\r\n
\t} else if ( typeof qualifier === "string" ) {\r\n
\t\tvar filtered = jQuery.grep(elements, function( elem ) {\r\n
\t\t\treturn elem.nodeType === 1;\r\n
\t\t});\r\n
\r\n
\t\tif ( isSimple.test( qualifier ) ) {\r\n
\t\t\treturn jQuery.filter(qualifier, filtered, !keep);\r\n
\t\t} else {\r\n
\t\t\tqualifier = jQuery.filter( qualifier, filtered );\r\n
\t\t}\r\n
\t}\r\n
\r\n
\treturn jQuery.grep(elements, function( elem, i ) {\r\n
\t\treturn ( jQuery.inArray( elem, qualifier ) >= 0 ) === keep;\r\n
\t});\r\n
}\r\n
\r\n
\r\n
\r\n
\r\n
function createSafeFragment( document ) {\r\n
\tvar list = nodeNames.split( "|" ),\r\n
\tsafeFrag = document.createDocumentFragment();\r\n
\r\n
\tif ( safeFrag.createElement ) {\r\n
\t\twhile ( list.length ) {\r\n
\t\t\tsafeFrag.createElement(\r\n
\t\t\t\tlist.pop()\r\n
\t\t\t);\r\n
\t\t}\r\n
\t}\r\n
\treturn safeFrag;\r\n
}\r\n
\r\n
var nodeNames = "abbr|article|aside|audio|canvas|datalist|details|figcaption|figure|footer|" +\r\n
\t\t"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",\r\n
\trinlinejQuery = / jQuery\\d+="(?:\\d+|null)"/g,\r\n
\trleadingWhitespace = /^\\s+/,\r\n
\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig,\r\n
\trtagName = /<([\\w:]+)/,\r\n
\trtbody = /<tbody/i,\r\n
\trhtml = /<|&#?\\w+;/,\r\n
\trnoInnerhtml = /<(?:script|style)/i,\r\n
\trnocache = /<(?:script|object|embed|option|style)/i,\r\n
\trnoshimcache = new RegExp("<(?:" + nodeNames + ")", "i"),\r\n
\t// checked="checked" or checked\r\n
\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\r\n
\trscriptType = /\\/(java|ecma)script/i,\r\n
\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|\\-\\-)/,\r\n
\twrapMap = {\r\n
\t\toption: [ 1, "<select multiple=\'multiple\'>", "</select>" ],\r\n
\t\tlegend: [ 1, "<fieldset>", "</fieldset>" ],\r\n
\t\tthead: [ 1, "<table>", "</table>" ],\r\n
\t\ttr: [ 2, "<table><tbody>", "</tbody></table>" ],\r\n
\t\ttd: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],\r\n
\t\tcol: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],\r\n
\t\tarea: [ 1, "<map>", "</map>" ],\r\n
\t\t_default: [ 0, "", "" ]\r\n
\t},\r\n
\tsafeFragment = createSafeFragment( document );\r\n
\r\n
wrapMap.optgroup = wrapMap.option;\r\n
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\r\n
wrapMap.th = wrapMap.td;\r\n
\r\n
// IE can\'t serialize <link> and <script> tags normally\r\n
if ( !jQuery.support.htmlSerialize ) {\r\n
\twrapMap._default = [ 1, "div<div>", "</div>" ];\r\n
}\r\n
\r\n
jQuery.fn.extend({\r\n
\ttext: function( text ) {\r\n
\t\tif ( jQuery.isFunction(text) ) {\r\n
\t\t\treturn this.each(function(i) {\r\n
\t\t\t\tvar self = jQuery( this );\r\n
\r\n
\t\t\t\tself.text( text.call(this, i, self.text()) );\r\n
\t\t\t});\r\n
\t\t}\r\n
\r\n
\t\tif ( typeof text !== "object" && text !== undefined ) {\r\n
\t\t\treturn this.empty().append( (this[0] && this[0].ownerDocument || document).createTextNode( text ) );\r\n
\t\t}\r\n
\r\n
\t\treturn jQuery.text( this );\r\n
\t},\r\n
\r\n
\twrapAll: function( html ) {\r\n
\t\tif ( jQuery.isFunction( html ) ) {\r\n
\t\t\treturn this.each(function(i) {\r\n
\t\t\t\tjQuery(this).wrapAll( html.call(this, i) );\r\n
\t\t\t});\r\n
\t\t}\r\n
\r\n
\t\tif ( this[0] ) {\r\n
\t\t\t// The elements to wrap the target around\r\n
\t\t\tvar wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);\r\n
\r\n
\t\t\tif ( this[0].parentNode ) {\r\n
\t\t\t\twrap.insertBefore( this[0] );\r\n
\t\t\t}\r\n
\r\n
\t\t\twrap.map(function() {\r\n
\t\t\t\tvar elem = this;\r\n
\r\n
\t\t\t\twhile ( elem.firstChild && elem.firstChild.nodeType === 1 ) {\r\n
\t\t\t\t\telem = elem.firstChild;\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\treturn elem;\r\n
\t\t\t}).append( this );\r\n
\t\t}\r\n
\r\n
\t\treturn this;\r\n
\t},\r\n
\r\n
\twrapInner: function( html ) {\r\n
\t\tif ( jQuery.isFunction( html ) ) {\r\n
\t\t\treturn this.each(function(i) {\r\n
\t\t\t\tjQuery(this).wrapInner( html.call(this, i) );\r\n
\t\t\t});\r\n
\t\t}\r\n
\r\n
\t\treturn this.each(function() {\r\n
\t\t\tvar self = jQuery( this ),\r\n
\t\t\t\tcontents = self.contents();\r\n
\r\n
\t\t\tif ( contents.length ) {\r\n
\t\t\t\tcontents.wrapAll( html );\r\n
\r\n
\t\t\t} else {\r\n
\t\t\t\tself.append( html );\r\n
\t\t\t}\r\n
\t\t});\r\n
\t},\r\n
\r\n
\twrap: function( html ) {\r\n
\t\tvar isFunction = jQuery.isFunction( html );\r\n
\r\n
\t\treturn this.each(function(i) {\r\n
\t\t\tjQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );\r\n
\t\t});\r\n
\t},\r\n
\r\n
\tunwrap: function() {\r\n
\t\treturn this.parent().each(function() {\r\n
\t\t\tif ( !jQuery.nodeName( this, "body" ) ) {\r\n
\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\r\n
\t\t\t}\r\n
\t\t}).end();\r\n
\t},\r\n
\r\n
\tappend: function() {\r\n
\t\treturn this.domManip(arguments, true, function( elem ) {\r\n
\t\t\tif ( this.nodeType === 1 ) {\r\n
\t\t\t\tthis.appendChild( elem );\r\n
\t\t\t}\r\n
\t\t});\r\n
\t},\r\n
\r\n
\tprepend: function() {\r\n
\t\treturn this.domManip(arguments, true, function( elem ) {\r\n
\t\t\tif ( this.nodeType === 1 ) {\r\n
\t\t\t\tthis.insertBefore( elem, this.firstChild );\r\n
\t\t\t}\r\n
\t\t});\r\n
\t},\r\n
\r\n
\tbefore: function() {\r\n
\t\tif ( this[0] && this[0].parentNode ) {\r\n
\t\t\treturn this.domManip(arguments, false, function( elem ) {\r\n
\t\t\t\tthis.parentNode.insertBefore( elem, this );\r\n
\t\t\t});\r\n
\t\t} else if ( arguments.length ) {\r\n
\t\t\tvar set = jQuery.clean( arguments );\r\n
\t\t\tset.push.apply( set, this.toArray() );\r\n
\t\t\treturn this.pushStack( set, "before", arguments );\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tafter: function() {\r\n
\t\tif ( this[0] && this[0].parentNode ) {\r\n
\t\t\treturn this.domManip(arguments, false, function( elem ) {\r\n
\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\r\n
\t\t\t});\r\n
\t\t} else if ( arguments.length ) {\r\n
\t\t\tvar set = this.pushStack( this, "after", arguments );\r\n
\t\t\tset.push.apply( set, jQuery.clean(arguments) );\r\n
\t\t\treturn set;\r\n
\t\t}\r\n
\t},\r\n
\r\n
\t// keepData is for internal use only--do not document\r\n
\tremove: function( selector, keepData ) {\r\n
\t\tfor ( var i = 0, elem; (elem = this[i]) != null; i++ ) {\r\n
\t\t\tif ( !selector || jQuery.filter( selector, [ elem ] ).length ) {\r\n
\t\t\t\tif ( !keepData && elem.nodeType === 1 ) {\r\n
\t\t\t\t\tjQuery.cleanData( elem.getElementsByTagName("*") );\r\n
\t\t\t\t\tjQuery.cleanData( [ elem ] );\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tif ( elem.parentNode ) {\r\n
\t\t\t\t\telem.parentNode.removeChild( elem );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn this;\r\n
\t},\r\n
\r\n
\tempty: function() {\r\n
\t\tfor ( var i = 0, elem; (elem = this[i]) != null; i++ ) {\r\n
\t\t\t// Remove element nodes and prevent memory leaks\r\n
\t\t\tif ( elem.nodeType === 1 ) {\r\n
\t\t\t\tjQuery.cleanData( elem.getElementsByTagName("*") );\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Remove any remaining nodes\r\n
\t\t\twhile ( elem.firstChild ) {\r\n
\t\t\t\telem.removeChild( elem.firstChild );\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn this;\r\n
\t},\r\n
\r\n
\tclone: function( dataAndEvents, deepDataAndEvents ) {\r\n
\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\r\n
\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\r\n
\r\n
\t\treturn this.map( function () {\r\n
\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\r\n
\t\t});\r\n
\t},\r\n
\r\n
\thtml: function( value ) {\r\n
\t\tif ( value === undefined ) {\r\n
\t\t\treturn this[0] && this[0].nodeType === 1 ?\r\n
\t\t\t\tthis[0].innerHTML.replace(rinlinejQuery, "") :\r\n
\t\t\t\tnull;\r\n
\r\n
\t\t// See if we can take a shortcut and just use innerHTML\r\n
\t\t} else if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&\r\n
\t\t\t(jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value )) &&\r\n
\t\t\t!wrapMap[ (rtagName.exec( value ) || ["", ""])[1].toLowerCase() ] ) {\r\n
\r\n
\t\t\tvalue = value.replace(rxhtmlTag, "<$1></$2>");\r\n
\r\n
\t\t\ttry {\r\n
\t\t\t\tfor ( var i = 0, l = this.length; i < l; i++ ) {\r\n
\t\t\t\t\t// Remove element nodes and prevent memory leaks\r\n
\t\t\t\t\tif ( this[i].nodeType === 1 ) {\r\n
\t\t\t\t\t\tjQuery.cleanData( this[i].getElementsByTagName("*") );\r\n
\t\t\t\t\t\tthis[i].innerHTML = value;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t// If using innerHTML throws an exception, use the fallback method\r\n
\t\t\t} catch(e) {\r\n
\t\t\t\tthis.empty().append( value );\r\n
\t\t\t}\r\n
\r\n
\t\t} else if ( jQuery.isFunction( value ) ) {\r\n
\t\t\tthis.each(function(i){\r\n
\t\t\t\tvar self = jQuery( this );\r\n
\r\n
\t\t\t\tself.html( value.call(this, i, self.html()) );\r\n
\t\t\t});\r\n
\r\n
\t\t} else {\r\n
\t\t\tthis.empty().append( value );\r\n
\t\t}\r\n
\r\n
\t\treturn this;\r\n
\t},\r\n
\r\n
\treplaceWith: function( value ) {\r\n
\t\tif ( this[0] && this[0].parentNode ) {\r\n
\t\t\t// Make sure that the elements are removed from the DOM before they are inserted\r\n
\t\t\t// this can help fix replacing a parent with child elements\r\n
\t\t\tif ( jQuery.isFunction( value ) ) {\r\n
\t\t\t\treturn this.each(function(i) {\r\n
\t\t\t\t\tvar self = jQuery(this), old = self.html();\r\n
\t\t\t\t\tself.replaceWith( value.call( this, i, old ) );\r\n
\t\t\t\t});\r\n
\t\t\t}\r\n
\r\n
\t\t\tif ( typeof value !== "string" ) {\r\n
\t\t\t\tvalue = jQuery( value ).detach();\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn this.each(function() {\r\n
\t\t\t\tvar next = this.nextSibling,\r\n
\t\t\t\t\tparent = this.parentNode;\r\n
\r\n
\t\t\t\tjQuery( this ).remove();\r\n
\r\n
\t\t\t\tif ( next ) {\r\n
\t\t\t\t\tjQuery(next).before( value );\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\tjQuery(parent).append( value );\r\n
\t\t\t\t}\r\n
\t\t\t});\r\n
\t\t} else {\r\n
\t\t\treturn this.length ?\r\n
\t\t\t\tthis.pushStack( jQuery(jQuery.isFunction(value) ? value() : value), "replaceWith", value ) :\r\n
\t\t\t\tthis;\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tdetach: function( selector ) {\r\n
\t\treturn this.remove( selector, true );\r\n
\t},\r\n
\r\n
\tdomManip: function( args, table, callback ) {\r\n
\t\tvar results, first, fragment, parent,\r\n
\t\t\tvalue = args[0],\r\n
\t\t\tscripts = [];\r\n
\r\n
\t\t// We can\'t cloneNode fragments that contain checked, in WebKit\r\n
\t\tif ( !jQuery.support.checkClone && arguments.length === 3 && typeof value === "string" && rchecked.test( value ) ) {\r\n
\t\t\treturn this.each(function() {\r\n
\t\t\t\tjQuery(this).domManip( args, table, callback, true );\r\n
\t\t\t});\r\n
\t\t}\r\n
\r\n
\t\tif ( jQuery.isFunction(value) ) {\r\n
\t\t\treturn this.each(function(i) {\r\n
\t\t\t\tvar self = jQuery(this);\r\n
\t\t\t\targs[0] = value.call(this, i, table ? self.html() : undefined);\r\n
\t\t\t\tself.domManip( args, table, callback );\r\n
\t\t\t});\r\n
\t\t}\r\n
\r\n
\t\tif ( this[0] ) {\r\n
\t\t\tparent = value && value.parentNode;\r\n
\r\n
\t\t\t// If we\'re in a fragment, just use that instead of building a new one\r\n
\t\t\tif ( jQuery.support.parentNode && parent && parent.nodeType === 11 && parent.childNodes.length === this.length ) {\r\n
\t\t\t\tresults = { fragment: parent };\r\n
\r\n
\t\t\t} else {\r\n
\t\t\t\tresults = jQuery.buildFragment( args, this, scripts );\r\n
\t\t\t}\r\n
\r\n
\t\t\tfragment = results.fragment;\r\n
\r\n
\t\t\tif ( fragment.childNodes.length === 1 ) {\r\n
\t\t\t\tfirst = fragment = fragment.firstChild;\r\n
\t\t\t} else {\r\n
\t\t\t\tfirst = fragment.firstChild;\r\n
\t\t\t}\r\n
\r\n
\t\t\tif ( first ) {\r\n
\t\t\t\ttable = table && jQuery.nodeName( first, "tr" );\r\n
\r\n
\t\t\t\tfor ( var i = 0, l = this.length, lastIndex = l - 1; i < l; i++ ) {\r\n
\t\t\t\t\tcallback.call(\r\n
\t\t\t\t\t\ttable ?\r\n
\t\t\t\t\t\t\troot(this[i], first) :\r\n
\t\t\t\t\t\t\tthis[i],\r\n
\t\t\t\t\t\t// Make sure that we do not leak memory by inadvertently discarding\r\n
\t\t\t\t\t\t// the original fragment (which might have attached data) instead of\r\n
\t\t\t\t\t\t// using it; in addition, use the original fragment object for the last\r\n
\t\t\t\t\t\t// item instead of first because it can end up being emptied incorrectly\r\n
\t\t\t\t\t\t// in certain situations (Bug #8070).\r\n
\t\t\t\t\t\t// Fragments from the fragment cache must always be cloned and never used\r\n
\t\t\t\t\t\t// in place.\r\n
\t\t\t\t\t\tresults.cacheable || ( l > 1 && i < lastIndex ) ?\r\n
\t\t\t\t\t\t\tjQuery.clone( fragment, true, true ) :\r\n
\t\t\t\t\t\t\tfragment\r\n
\t\t\t\t\t);\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\tif ( scripts.length ) {\r\n
\t\t\t\tjQuery.each( scripts, evalScript );\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn this;\r\n
\t}\r\n
});\r\n
\r\n
function root( elem, cur ) {\r\n
\treturn jQuery.nodeName(elem, "table") ?\r\n
\t\t(elem.getElementsByTagName("tbody")[0] ||\r\n
\t\telem.appendChild(elem.ownerDocument.createElement("tbody"))) :\r\n
\t\telem;\r\n
}\r\n
\r\n
function cloneCopyEvent( src, dest ) {\r\n
\r\n
\tif ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {\r\n
\t\treturn;\r\n
\t}\r\n
\r\n
\tvar type, i, l,\r\n
\t\toldData = jQuery._data( src ),\r\n
\t\tcurData = jQuery._data( dest, oldData ),\r\n
\t\tevents = oldData.events;\r\n
\r\n
\tif ( events ) {\r\n
\t\tdelete curData.handle;\r\n
\t\tcurData.events = {};\r\n
\r\n
\t\tfor ( type in events ) {\r\n
\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\r\n
\t\t\t\tjQuery.event.add( dest, type + ( events[ type ][ i ].namespace ? "." : "" ) + events[ type ][ i ].namespace, events[ type ][ i ], events[ type ][ i ].data );\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
\r\n
\t// make the cloned public data object a copy from the original\r\n
\tif ( curData.data ) {\r\n
\t\tcurData.data = jQuery.extend( {}, curData.data );\r\n
\t}\r\n
}\r\n
\r\n
function cloneFixAttributes( src, dest ) {\r\n
\tvar nodeName;\r\n
\r\n
\t// We do not need to do anything for non-Elements\r\n
\tif ( dest.nodeType !== 1 ) {\r\n
\t\treturn;\r\n
\t}\r\n
\r\n
\t// clearAttributes removes the attributes, which we don\'t want,\r\n
\t// but also removes the attachEvent events, which we *do* want\r\n
\tif ( dest.clearAttributes ) {\r\n
\t\tdest.clearAttributes();\r\n
\t}\r\n
\r\n
\t// mergeAttributes, in contrast, only merges back on the\r\n
\t// original attributes, not the events\r\n
\tif ( dest.mergeAttributes ) {\r\n
\t\tdest.mergeAttributes( src );\r\n
\t}\r\n
\r\n
\tnodeName = dest.nodeName.toLowerCase();\r\n
\r\n
\t// IE6-8 fail to clone children inside object elements that use\r\n
\t// the proprietary classid attribute value (rather than the type\r\n
\t// attribute) to identify the type of content to display\r\n
\tif ( nodeName === "object" ) {\r\n
\t\tdest.outerHTML = src.outerHTML;\r\n
\r\n
\t} else if ( nodeName === "input" && (src.type === "checkbox" || src.type === "radio") ) {\r\n
\t\t// IE6-8 fails to persist the checked state of a cloned checkbox\r\n
\t\t// or radio button. Worse, IE6-7 fail to give the cloned element\r\n
\t\t// a checked appearance if the defaultChecked value isn\'t also set\r\n
\t\tif ( src.checked ) {\r\n
\t\t\tdest.defaultChecked = dest.checked = src.checked;\r\n
\t\t}\r\n
\r\n
\t\t// IE6-7 get confused and end up setting the value of a cloned\r\n
\t\t// checkbox/radio button to an empty string instead of "on"\r\n
\t\tif ( dest.value !== src.value ) {\r\n
\t\t\tdest.value = src.value;\r\n
\t\t}\r\n
\r\n
\t// IE6-8 fails to return the selected option to the default selected\r\n
\t// state when cloning options\r\n
\t} else if ( nodeName === "option" ) {\r\n
\t\tdest.selected = src.defaultSelected;\r\n
\r\n
\t// IE6-8 fails to set the defaultValue to the correct value when\r\n
\t// cloning other types of input fields\r\n
\t} else if ( nodeName === "input" || nodeName === "textarea" ) {\r\n
\t\tdest.defaultValue = src.defaultValue;\r\n
\t}\r\n
\r\n
\t// Event data gets referenced instead of copied if the expando\r\n
\t// gets copied too\r\n
\tdest.removeAttribute( jQuery.expando );\r\n
}\r\n
\r\n
jQuery.buildFragment = function( args, nodes, scripts ) {\r\n
\tvar fragment, cacheable, cacheresults, doc,\n
\tfirst = args[ 0 ];\n
\n
\tdoc = document;\n
\t\n
\t// Only cache "small" (1/2 KB) HTML strings that are associated with the main document\n
\t// Cloning options loses the selected state, so don\'t cache them\n
\t// IE 6 doesn\'t like it when you put <object> or <embed> elements in a fragment\n
\t// Also, WebKit does not clone \'checked\' attributes on cloneNode, so don\'t cache\n
\t// Lastly, IE6,7,8 will not correctly reuse cached fragments that were created from unknown elems #10501\n
\tif ( args.length === 1 && typeof first === "string" && first.length < 512 && doc === document &&\n
\t\tfirst.charAt(0) === "<" && !rnocache.test( first ) &&\n
\t\t(jQuery.support.checkClone || !rchecked.test( first )) &&\n
\t\t(jQuery.support.html5Clone || !rnoshimcache.test( first )) ) {\n
\n
\t\tcacheable = true;\n
\n
\t\tcacheresults = jQuery.fragments[ first ];\n
\t\tif ( cacheresults && cacheresults !== 1 ) {\n
\t\t\tfragment = cacheresults;\n
\t\t}\n
\t}\n
\n
\tif ( !fragment ) {\n
\t\tfragment = doc.createDocumentFragment();\n
\t\tjQuery.clean( args, doc, fragment, scripts );\n
\t}\n
\n
\tif ( cacheable ) {\n
\t\tjQuery.fragments[ first ] = cacheresults ? fragment : 1;\n
\t}\n
\n
\treturn { fragment: fragment, cacheable: cacheable };\r\n
};\r\n
\r\n
jQuery.fragments = {};\r\n
\r\n
jQuery.each({\r\n
\tappendTo: "append",\r\n
\tprependTo: "prepend",\r\n
\tinsertBefore: "before",\r\n
\tinsertAfter: "after",\r\n
\treplaceAll: "replaceWith"\r\n
}, function( name, original ) {\r\n
\tjQuery.fn[ name ] = function( selector ) {\r\n
\t\tvar ret = [],\r\n
\t\t\tinsert = jQuery( selector ),\r\n
\t\t\tparent = this.length === 1 && this[0].parentNode;\r\n
\r\n
\t\tif ( parent && parent.nodeType === 11 && parent.childNodes.length === 1 && insert.length === 1 ) {\r\n
\t\t\tinsert[ original ]( this[0] );\r\n
\t\t\treturn this;\r\n
\r\n
\t\t} else {\r\n
\t\t\tfor ( var i = 0, l = insert.length; i < l; i++ ) {\r\n
\t\t\t\tvar elems = ( i > 0 ? this.clone(true) : this ).get();\r\n
\t\t\t\tjQuery( insert[i] )[ original ]( elems );\r\n
\t\t\t\tret = ret.concat( elems );\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn this.pushStack( ret, name, insert.selector );\r\n
\t\t}\r\n
\t};\r\n
});\r\n
\r\n
function getAll( elem ) {\r\n
\tif ( typeof elem.getElementsByTagName !== "undefined" ) {\r\n
\t\treturn elem.getElementsByTagName( "*" );\r\n
\r\n
\t} else if ( typeof elem.querySelectorAll !== "undefined" ) {\r\n
\t\treturn elem.querySelectorAll( "*" );\r\n
\r\n
\t} else {\r\n
\t\treturn [];\r\n
\t}\r\n
}\r\n
\r\n
// Used in clean, fixes the defaultChecked property\r\n
function fixDefaultChecked( elem ) {\r\n
\tif ( elem.type === "checkbox" || elem.type === "radio" ) {\r\n
\t\telem.defaultChecked = elem.checked;\r\n
\t}\r\n
}\r\n
// Finds all inputs and passes them to fixDefaultChecked\r\n
function findInputs( elem ) {\r\n
\tvar nodeName = ( elem.nodeName || "" ).toLowerCase();\r\n
\tif ( nodeName === "input" ) {\r\n
\t\tfixDefaultChecked( elem );\r\n
\t// Skip scripts, get other children\r\n
\t} else if ( nodeName !== "script" && typeof elem.getElementsByTagName !== "undefined" ) {\r\n
\t\tjQuery.grep( elem.getElementsByTagName("input"), fixDefaultChecked );\r\n
\t}\r\n
}\r\n
\r\n
// Derived From: http://www.iecss.com/shimprove/javascript/shimprove.1-0-1.js\r\n
function shimCloneNode( elem ) {\r\n
\tvar div = document.createElement( "div" );\r\n
\tsafeFragment.appendChild( div );\r\n
\r\n
\tdiv.innerHTML = elem.outerHTML;\r\n
\treturn div.firstChild;\r\n
}\r\n
\r\n
jQuery.extend({\r\n
\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\r\n
\t\treturn elem;\r\n
\t},\r\n
\r\n
\tclean: function( elems, context, fragment, scripts ) {\r\n
\t\treturn [];\r\n
\t},\r\n
\r\n
\tcleanData: function( elems ) {\r\n
\t\tvar data, id,\r\n
\t\t\tcache = jQuery.cache,\r\n
\t\t\tspecial = jQuery.event.special,\r\n
\t\t\tdeleteExpando = jQuery.support.deleteExpando;\r\n
\r\n
\t\tfor ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {\r\n
\t\t\tif ( elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()] ) {\r\n
\t\t\t\tcontinue;\r\n
\t\t\t}\r\n
\r\n
\t\t\tid = elem[ jQuery.expando ];\r\n
\r\n
\t\t\tif ( id ) {\r\n
\t\t\t\tdata = cache[ id ];\r\n
\r\n
\t\t\t\tif ( data && data.events ) {\r\n
\t\t\t\t\tfor ( var type in data.events ) {\r\n
\t\t\t\t\t\tif ( special[ type ] ) {\r\n
\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\r\n
\r\n
\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove\'s overhead\r\n
\t\t\t\t\t\t} else {\r\n
\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t// Null the DOM reference to avoid IE6/7/8 leak (#7054)\r\n
\t\t\t\t\tif ( data.handle ) {\r\n
\t\t\t\t\t\tdata.handle.elem = null;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tif ( deleteExpando ) {\r\n
\t\t\t\t\tdelete elem[ jQuery.expando ];\r\n
\r\n
\t\t\t\t} else if ( elem.removeAttribute ) {\r\n
\t\t\t\t\telem.removeAttribute( jQuery.expando );\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tdelete cache[ id ];\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
});\r\n
\r\n
function evalScript( i, elem ) {\r\n
\tif ( elem.src ) {\r\n
\t\tjQuery.ajax({\r\n
\t\t\turl: elem.src,\r\n
\t\t\tasync: false,\r\n
\t\t\tdataType: "script"\r\n
\t\t});\r\n
\t} else {\r\n
\t\tjQuery.globalEval( ( elem.text || elem.textContent || elem.innerHTML || "" ).replace( rcleanScript, "/*$0*/" ) );\r\n
\t}\r\n
\r\n
\tif ( elem.parentNode ) {\r\n
\t\telem.parentNode.removeChild( elem );\r\n
\t}\r\n
}\r\n
\r\n
\r\n
\r\n
\r\n
var ralpha = /alpha\\([^)]*\\)/i,\r\n
\tropacity = /opacity=([^)]*)/,\r\n
\t// fixed for IE9, see #8346\r\n
\trupper = /([A-Z]|^ms)/g,\r\n
\trnumpx = /^-?\\d+(?:px)?$/i,\r\n
\trnum = /^-?\\d/,\r\n
\trrelNum = /^([\\-+])=([\\-+.\\de]+)/,\r\n
\r\n
\tcssShow = { position: "absolute", visibility: "hidden", display: "block" },\r\n
\tcssWidth = [ "Left", "Right" ],\r\n
\tcssHeight = [ "Top", "Bottom" ],\r\n
\tcurCSS,\r\n
\r\n
\tgetComputedStyle,\r\n
\tcurrentStyle;\r\n
\r\n
jQuery.fn.css = function( name, value ) {\r\n
\t// Setting \'undefined\' is a no-op\r\n
\tif ( arguments.length === 2 && value === undefined ) {\r\n
\t\treturn this;\r\n
\t}\r\n
\r\n
\treturn jQuery.access( this, name, value, true, function( elem, name, value ) {\r\n
\t\treturn value !== undefined ?\r\n
\t\t\tjQuery.style( elem, name, value ) :\r\n
\t\t\tjQuery.css( elem, name );\r\n
\t});\r\n
};\r\n
\r\n
jQuery.extend({\r\n
\t// Add in style property hooks for overriding the default\r\n
\t// behavior of getting and setting a style property\r\n
\tcssHooks: {\r\n
\t\topacity: {\r\n
\t\t\tget: function( elem, computed ) {\r\n
\t\t\t\tif ( computed ) {\r\n
\t\t\t\t\t// We should always get a number back from opacity\r\n
\t\t\t\t\tvar ret = curCSS( elem, "opacity", "opacity" );\r\n
\t\t\t\t\treturn ret === "" ? "1" : ret;\r\n
\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\treturn elem.style.opacity;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\t},\r\n
\r\n
\t// Exclude the following css properties to add px\r\n
\tcssNumber: {\r\n
\t\t"fillOpacity": true,\r\n
\t\t"fontWeight": true,\r\n
\t\t"lineHeight": true,\r\n
\t\t"opacity": true,\r\n
\t\t"orphans": true,\r\n
\t\t"widows": true,\r\n
\t\t"zIndex": true,\r\n
\t\t"zoom": true\r\n
\t},\r\n
\r\n
\t// Add in properties whose names you wish to fix before\r\n
\t// setting or getting the value\r\n
\tcssProps: {\r\n
\t\t// normalize float css property\r\n
\t\t"float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"\r\n
\t},\r\n
\r\n
\t// Get and set the style property on a DOM Node\r\n
\tstyle: function( elem, name, value, extra ) {\r\n
\t\t// Don\'t set styles on text and comment nodes\r\n
\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\r\n
\t\t\treturn;\r\n
\t\t}\r\n
\r\n
\t\t// Make sure that we\'re working with the right name\r\n
\t\tvar ret, type, origName = jQuery.camelCase( name ),\r\n
\t\t\tstyle = elem.style, hooks = jQuery.cssHooks[ origName ];\r\n
\r\n
\t\tname = jQuery.cssProps[ origName ] || origName;\r\n
\r\n
\t\t// Check if we\'re setting a value\r\n
\t\tif ( value !== undefined ) {\r\n
\t\t\ttype = typeof value;\r\n
\r\n
\t\t\t// convert relative number strings (+= or -=) to relative numbers. #7345\r\n
\t\t\tif ( type === "string" && (ret = rrelNum.exec( value )) ) {\r\n
\t\t\t\tvalue = ( +( ret[1] + 1) * +ret[2] ) + parseFloat( jQuery.css( elem, name ) );\r\n
\t\t\t\t// Fixes bug #9237\r\n
\t\t\t\ttype = "number";\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Make sure that NaN and null values aren\'t set. See: #7116\r\n
\t\t\tif ( value == null || type === "number" && isNaN( value ) ) {\r\n
\t\t\t\treturn;\r\n
\t\t\t}\r\n
\r\n
\t\t\t// If a number was passed in, add \'px\' to the (except for certain CSS properties)\r\n
\t\t\tif ( type === "number" && !jQuery.cssNumber[ origName ] ) {\r\n
\t\t\t\tvalue += "px";\r\n
\t\t\t}\r\n
\r\n
\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\r\n
\t\t\tif ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value )) !== undefined ) {\r\n
\t\t\t\t// Wrapped to prevent IE from throwing errors when \'invalid\' values are provided\r\n
\t\t\t\t// Fixes bug #5509\r\n
\t\t\t\ttry {\r\n
\t\t\t\t\tstyle[ name ] = value;\r\n
\t\t\t\t} catch(e) {}\r\n
\t\t\t}\r\n
\r\n
\t\t} else {\r\n
\t\t\t// If a hook was provided get the non-computed value from there\r\n
\t\t\tif ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {\r\n
\t\t\t\treturn ret;\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Otherwise just get the value from the style object\r\n
\t\t\treturn style[ name ];\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tcss: function( elem, name, extra ) {\r\n
\t\tvar ret, hooks;\r\n
\r\n
\t\t// Make sure that we\'re working with the right name\r\n
\t\tname = jQuery.camelCase( name );\r\n
\t\thooks = jQuery.cssHooks[ name ];\r\n
\t\tname = jQuery.cssProps[ name ] || name;\r\n
\r\n
\t\t// cssFloat needs a special treatment\r\n
\t\tif ( name === "cssFloat" ) {\r\n
\t\t\tname = "float";\r\n
\t\t}\r\n
\r\n
\t\t// If a hook was provided get the computed value from there\r\n
\t\tif ( hooks && "get" in hooks && (ret = hooks.get( elem, true, extra )) !== undefined ) {\r\n
\t\t\treturn ret;\r\n
\r\n
\t\t// Otherwise, if a way to get the computed value exists, use that\r\n
\t\t} else if ( curCSS ) {\r\n
\t\t\treturn curCSS( elem, name );\r\n
\t\t}\r\n
\t},\r\n
\r\n
\t// A method for quickly swapping in/out CSS properties to get correct calculations\r\n
\tswap: function( elem, options, callback ) {\r\n
\t\tvar old = {};\r\n
\r\n
\t\t// Remember the old values, and insert the new ones\r\n
\t\tfor ( var name in options ) {\r\n
\t\t\told[ name ] = elem.style[ name ];\r\n
\t\t\telem.style[ name ] = options[ name ];\r\n
\t\t}\r\n
\r\n
\t\tcallback.call( elem );\r\n
\r\n
\t\t// Revert the old values\r\n
\t\tfor ( name in options ) {\r\n
\t\t\telem.style[ name ] = old[ name ];\r\n
\t\t}\r\n
\t}\r\n
});\r\n
\r\n
// DEPRECATED, Use jQuery.css() instead\r\n
jQuery.curCSS = jQuery.css;\r\n
\r\n
jQuery.each(["height", "width"], function( i, name ) {\r\n
\tjQuery.cssHooks[ name ] = {\r\n
\t\tget: function( elem, computed, extra ) {\r\n
\t\t\tvar val;\r\n
\r\n
\t\t\tif ( computed ) {\r\n
\t\t\t\tif ( elem.offsetWidth !== 0 ) {\r\n
\t\t\t\t\treturn getWH( elem, name, extra );\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\tjQuery.swap( elem, cssShow, function() {\r\n
\t\t\t\t\t\tval = getWH( elem, name, extra );\r\n
\t\t\t\t\t});\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\treturn val;\r\n
\t\t\t}\r\n
\t\t},\r\n
\r\n
\t\tset: function( elem, value ) {\r\n
\t\t\tif ( rnumpx.test( value ) ) {\r\n
\t\t\t\t// ignore negative width and height values #1599\r\n
\t\t\t\tvalue = parseFloat( value );\r\n
\r\n
\t\t\t\tif ( value >= 0 ) {\r\n
\t\t\t\t\treturn value + "px";\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t} else {\r\n
\t\t\t\treturn value;\r\n
\t\t\t}\r\n
\t\t}\r\n
\t};\r\n
});\r\n
\r\n
if ( !jQuery.support.opacity ) {\r\n
\tjQuery.cssHooks.opacity = {\r\n
\t\tget: function( elem, computed ) {\r\n
\t\t\t// IE uses filters for opacity\r\n
\t\t\treturn ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?\r\n
\t\t\t\t( parseFloat( RegExp.$1 ) / 100 ) + "" :\r\n
\t\t\t\tcomputed ? "1" : "";\r\n
\t\t},\r\n
\r\n
\t\tset: function( elem, value ) {\r\n
\t\t\tvar style = elem.style,\r\n
\t\t\t\tcurrentStyle = elem.currentStyle,\r\n
\t\t\t\topacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",\r\n
\t\t\t\tfilter = currentStyle && currentStyle.filter || style.filter || "";\r\n
\r\n
\t\t\t// IE has trouble with opacity if it does not have layout\r\n
\t\t\t// Force it by setting the zoom level\r\n
\t\t\tstyle.zoom = 1;\r\n
\r\n
\t\t\t// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652\r\n
\t\t\tif ( value >= 1 && jQuery.trim( filter.replace( ralpha, "" ) ) === "" ) {\r\n
\r\n
\t\t\t\t// Setting style.filter to null, "" & " " still leave "filter:" in the cssText\r\n
\t\t\t\t// if "filter:" is present at all, clearType is disabled, we want to avoid this\r\n
\t\t\t\t// style.removeAttribute is IE Only, but so apparently is this code path...\r\n
\t\t\t\tstyle.removeAttribute( "filter" );\r\n
\r\n
\t\t\t\t// if there there is no filter style applied in a css rule, we are done\r\n
\t\t\t\tif ( currentStyle && !currentStyle.filter ) {\r\n
\t\t\t\t\treturn;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\t// otherwise, set new filter values\r\n
\t\t\tstyle.filter = ralpha.test( filter ) ?\r\n
\t\t\t\tfilter.replace( ralpha, opacity ) :\r\n
\t\t\t\tfilter + " " + opacity;\r\n
\t\t}\r\n
\t};\r\n
}\r\n
\r\n
jQuery(function() {\r\n
\t// This hook cannot be added until DOM ready because the support test\r\n
\t// for it is not run until after DOM ready\r\n
\tif ( !jQuery.support.reliableMarginRight ) {\r\n
\t\tjQuery.cssHooks.marginRight = {\r\n
\t\t\tget: function( elem, computed ) {\r\n
\t\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\r\n
\t\t\t\t// Work around by temporarily setting element display to inline-block\r\n
\t\t\t\tvar ret;\r\n
\t\t\t\tjQuery.swap( elem, { "display": "inline-block" }, function() {\r\n
\t\t\t\t\tif ( computed ) {\r\n
\t\t\t\t\t\tret = curCSS( elem, "margin-right", "marginRight" );\r\n
\t\t\t\t\t} else {\r\n
\t\t\t\t\t\tret = elem.style.marginRight;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t});\r\n
\t\t\t\treturn ret;\r\n
\t\t\t}\r\n
\t\t};\r\n
\t}\r\n
});\r\n
\r\n
if ( document.defaultView && document.defaultView.getComputedStyle ) {\r\n
\tgetComputedStyle = function( elem, name ) {\r\n
\t\tvar ret, defaultView, computedStyle;\r\n
\r\n
\t\tname = name.replace( rupper, "-$1" ).toLowerCase();\r\n
\r\n
\t\tif ( (defaultView = elem.ownerDocument.defaultView) &&\r\n
\t\t\t\t(computedStyle = defaultView.getComputedStyle( elem, null )) ) {\r\n
\t\t\tret = computedStyle.getPropertyValue( name );\r\n
\t\t\tif ( ret === "" && !jQuery.contains( elem.ownerDocument.documentElement, elem ) ) {\r\n
\t\t\t\tret = jQuery.style( elem, name );\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn ret;\r\n
\t};\r\n
}\r\n
\r\n
if ( document.documentElement.currentStyle ) {\r\n
\tcurrentStyle = function( elem, name ) {\r\n
\t\tvar left, rsLeft, uncomputed,\r\n
\t\t\tret = elem.currentStyle && elem.currentStyle[ name ],\r\n
\t\t\tstyle = elem.style;\r\n
\r\n
\t\t// Avoid setting ret to empty string here\r\n
\t\t// so we don\'t default to auto\r\n
\t\tif ( ret === null && style && (uncomputed = style[ name ]) ) {\r\n
\t\t\tret = uncomputed;\r\n
\t\t}\r\n
\r\n
\t\t// From the awesome hack by Dean Edwards\r\n
\t\t// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\r\n
\r\n
\t\t// If we\'re not dealing with a regular pixel number\r\n
\t\t// but a number that has a weird ending, we need to convert it to pixels\r\n
\t\tif ( !rnumpx.test( ret ) && rnum.test( ret ) ) {\r\n
\r\n
\t\t\t// Remember the original values\r\n
\t\t\tleft = style.left;\r\n
\t\t\trsLeft = elem.runtimeStyle && elem.runtimeStyle.left;\r\n
\r\n
\t\t\t// Put in the new values to get a computed value out\r\n
\t\t\tif ( rsLeft ) {\r\n
\t\t\t\telem.runtimeStyle.left = elem.currentStyle.left;\r\n
\t\t\t}\r\n
\t\t\tstyle.left = name === "fontSize" ? "1em" : ( ret || 0 );\r\n
\t\t\tret = style.pixelLeft + "px";\r\n
\r\n
\t\t\t// Revert the changed values\r\n
\t\t\tstyle.left = left;\r\n
\t\t\tif ( rsLeft ) {\r\n
\t\t\t\telem.runtimeStyle.left = rsLeft;\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn ret === "" ? "auto" : ret;\r\n
\t};\r\n
}\r\n
\r\n
curCSS = getComputedStyle || currentStyle;\r\n
\r\n
function getWH( elem, name, extra ) {\r\n
\r\n
\t// Start with offset property\r\n
\tvar val = name === "width" ? elem.offsetWidth : elem.offsetHeight,\r\n
\t\twhich = name === "width" ? cssWidth : cssHeight,\r\n
\t\ti = 0,\r\n
\t\tlen = which.length;\r\n
\r\n
\tif ( val > 0 ) {\r\n
\t\tif ( extra !== "border" ) {\r\n
\t\t\tfor ( ; i < len; i++ ) {\r\n
\t\t\t\tif ( !extra ) {\r\n
\t\t\t\t\tval -= parseFloat( jQuery.css( elem, "padding" + which[ i ] ) ) || 0;\r\n
\t\t\t\t}\r\n
\t\t\t\tif ( extra === "margin" ) {\r\n
\t\t\t\t\tval += parseFloat( jQuery.css( elem, extra + which[ i ] ) ) || 0;\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\tval -= parseFloat( jQuery.css( elem, "border" + which[ i ] + "Width" ) ) || 0;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn val + "px";\r\n
\t}\r\n
\r\n
\t// Fall back to computed then uncomputed css if necessary\r\n
\tval = curCSS( elem, name, name );\r\n
\tif ( val < 0 || val == null ) {\r\n
\t\tval = elem.style[ name ] || 0;\r\n
\t}\r\n
\t// Normalize "", auto, and prepare for extra\r\n
\tval = parseFloat( val ) || 0;\r\n
\r\n
\t// Add padding, border, margin\r\n
\tif ( extra ) {\r\n
\t\tfor ( ; i < len; i++ ) {\r\n
\t\t\tval += parseFloat( jQuery.css( elem, "padding" + which[ i ] ) ) || 0;\r\n
\t\t\tif ( extra !== "padding" ) {\r\n
\t\t\t\tval += parseFloat( jQuery.css( elem, "border" + which[ i ] + "Width" ) ) || 0;\r\n
\t\t\t}\r\n
\t\t\tif ( extra === "margin" ) {\r\n
\t\t\t\tval += parseFloat( jQuery.css( elem, extra + which[ i ] ) ) || 0;\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
\r\n
\treturn val + "px";\r\n
}\r\n
\r\n
if ( jQuery.expr && jQuery.expr.filters ) {\r\n
\tjQuery.expr.filters.hidden = function( elem ) {\r\n
\t\tvar width = elem.offsetWidth,\r\n
\t\t\theight = elem.offsetHeight;\r\n
\r\n
\t\treturn ( width === 0 && height === 0 ) || (!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || jQuery.css( elem, "display" )) === "none");\r\n
\t};\r\n
\r\n
\tjQuery.expr.filters.visible = function( elem ) {\r\n
\t\treturn !jQuery.expr.filters.hidden( elem );\r\n
\t};\r\n
}\r\n
\r\n
\r\n
\r\n
\r\n
var r20 = /%20/g,\r\n
\trbracket = /\\[\\]$/,\r\n
\trCRLF = /\\r?\\n/g,\r\n
\trhash = /#.*$/,\r\n
\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg, // IE leaves an \\r character at EOL\r\n
\trinput = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,\r\n
\t// #7653, #8125, #8152: local protocol detection\r\n
\trlocalProtocol = /^(?:about|app|app\\-storage|.+\\-extension|file|res|widget):$/,\r\n
\trnoContent = /^(?:GET|HEAD)$/,\r\n
\trprotocol = /^\\/\\//,\r\n
\trquery = /\\?/,\r\n
\trscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n
\trselectTextarea = /^(?:select|textarea)/i,\r\n
\trspacesAjax = /\\s+/,\r\n
\trts = /([?&])_=[^&]*/,\r\n
\trurl = /^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+))?)?/,\r\n
\r\n
\t// Keep a copy of the old load method\r\n
\t_load = jQuery.fn.load,\r\n
\r\n
\t/* Prefilters\r\n
\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n
\t * 2) These are called:\r\n
\t *    - BEFORE asking for a transport\r\n
\t *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n
\t * 3) key is the dataType\r\n
\t * 4) the catchall symbol "*" can be used\r\n
\t * 5) execution will start with transport dataType and THEN continue down to "*" if needed\r\n
\t */\r\n
\tprefilters = {},\r\n
\r\n
\t/* Transports bindings\r\n
\t * 1) key is the dataType\r\n
\t * 2) the catchall symbol "*" can be used\r\n
\t * 3) selection will start with transport dataType and THEN go to "*" if needed\r\n
\t */\r\n
\ttransports = {},\r\n
\r\n
\t// Document location\r\n
\tajaxLocation,\r\n
\r\n
\t// Document location segments\r\n
\tajaxLocParts,\r\n
\r\n
\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\r\n
\tallTypes = ["*/"] + ["*"];\r\n
\r\n
// #8138, IE may throw an exception when accessing\r\n
// a field from window.location if document.domain has been set\r\n
try {\r\n
\tajaxLocation = location.href;\r\n
} catch( e ) {\r\n
\t// Use the href attribute of an A element\r\n
\t// since IE will modify it given document.location\r\n
\tajaxLocation = document.createElement( "a" );\r\n
\tajaxLocation.href = "";\r\n
\tajaxLocation = ajaxLocation.href;\r\n
}\r\n
\r\n
// Segment location into parts\r\n
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\r\n
\r\n
// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n
function addToPrefiltersOrTransports( structure ) {\r\n
\r\n
\t// dataTypeExpression is optional and defaults to "*"\r\n
\treturn function( dataTypeExpression, func ) {\r\n
\r\n
\t\tif ( typeof dataTypeExpression !== "string" ) {\r\n
\t\t\tfunc = dataTypeExpression;\r\n
\t\t\tdataTypeExpression = "*";\r\n
\t\t}\r\n
\r\n
\t\tif ( jQuery.isFunction( func ) ) {\r\n
\t\t\tvar dataTypes = dataTypeExpression.toLowerCase().split( rspacesAjax ),\r\n
\t\t\t\ti = 0,\r\n
\t\t\t\tlength = dataTypes.length,\r\n
\t\t\t\tdataTyp

]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAQ=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="4" aka="AAAAAAAAAAQ=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

e,\r\n
\t\t\t\tlist,\r\n
\t\t\t\tplaceBefore;\r\n
\r\n
\t\t\t// For each dataType in the dataTypeExpression\r\n
\t\t\tfor ( ; i < length; i++ ) {\r\n
\t\t\t\tdataType = dataTypes[ i ];\r\n
\t\t\t\t// We control if we\'re asked to add before\r\n
\t\t\t\t// any existing element\r\n
\t\t\t\tplaceBefore = /^\\+/.test( dataType );\r\n
\t\t\t\tif ( placeBefore ) {\r\n
\t\t\t\t\tdataType = dataType.substr( 1 ) || "*";\r\n
\t\t\t\t}\r\n
\t\t\t\tlist = structure[ dataType ] = structure[ dataType ] || [];\r\n
\t\t\t\t// then we add to the structure accordingly\r\n
\t\t\t\tlist[ placeBefore ? "unshift" : "push" ]( func );\r\n
\t\t\t}\r\n
\t\t}\r\n
\t};\r\n
}\r\n
\r\n
// Base inspection function for prefilters and transports\r\n
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR,\r\n
\t\tdataType /* internal */, inspected /* internal */ ) {\r\n
\r\n
\tdataType = dataType || options.dataTypes[ 0 ];\r\n
\tinspected = inspected || {};\r\n
\r\n
\tinspected[ dataType ] = true;\r\n
\r\n
\tvar list = structure[ dataType ],\r\n
\t\ti = 0,\r\n
\t\tlength = list ? list.length : 0,\r\n
\t\texecuteOnly = ( structure === prefilters ),\r\n
\t\tselection;\r\n
\r\n
\tfor ( ; i < length && ( executeOnly || !selection ); i++ ) {\r\n
\t\tselection = list[ i ]( options, originalOptions, jqXHR );\r\n
\t\t// If we got redirected to another dataType\r\n
\t\t// we try there if executing only and not done already\r\n
\t\tif ( typeof selection === "string" ) {\r\n
\t\t\tif ( !executeOnly || inspected[ selection ] ) {\r\n
\t\t\t\tselection = undefined;\r\n
\t\t\t} else {\r\n
\t\t\t\toptions.dataTypes.unshift( selection );\r\n
\t\t\t\tselection = inspectPrefiltersOrTransports(\r\n
\t\t\t\t\t\tstructure, options, originalOptions, jqXHR, selection, inspected );\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
\t// If we\'re only executing or nothing was selected\r\n
\t// we try the catchall dataType if not done already\r\n
\tif ( ( executeOnly || !selection ) && !inspected[ "*" ] ) {\r\n
\t\tselection = inspectPrefiltersOrTransports(\r\n
\t\t\t\tstructure, options, originalOptions, jqXHR, "*", inspected );\r\n
\t}\r\n
\t// unnecessary when only executing (prefilters)\r\n
\t// but it\'ll be ignored by the caller in that case\r\n
\treturn selection;\r\n
}\r\n
\r\n
// A special extend for ajax options\r\n
// that takes "flat" options (not to be deep extended)\r\n
// Fixes #9887\r\n
function ajaxExtend( target, src ) {\r\n
\tvar key, deep,\r\n
\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\r\n
\tfor ( key in src ) {\r\n
\t\tif ( src[ key ] !== undefined ) {\r\n
\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\r\n
\t\t}\r\n
\t}\r\n
\tif ( deep ) {\r\n
\t\tjQuery.extend( true, target, deep );\r\n
\t}\r\n
}\r\n
\r\n
jQuery.fn.extend({\r\n
\tload: function( url, params, callback ) {\r\n
\t\tif ( typeof url !== "string" && _load ) {\r\n
\t\t\treturn _load.apply( this, arguments );\r\n
\r\n
\t\t// Don\'t do a request if no elements are being requested\r\n
\t\t} else if ( !this.length ) {\r\n
\t\t\treturn this;\r\n
\t\t}\r\n
\r\n
\t\tvar off = url.indexOf( " " );\r\n
\t\tif ( off >= 0 ) {\r\n
\t\t\tvar selector = url.slice( off, url.length );\r\n
\t\t\turl = url.slice( 0, off );\r\n
\t\t}\r\n
\r\n
\t\t// Default to a GET request\r\n
\t\tvar type = "GET";\r\n
\r\n
\t\t// If the second parameter was provided\r\n
\t\tif ( params ) {\r\n
\t\t\t// If it\'s a function\r\n
\t\t\tif ( jQuery.isFunction( params ) ) {\r\n
\t\t\t\t// We assume that it\'s the callback\r\n
\t\t\t\tcallback = params;\r\n
\t\t\t\tparams = undefined;\r\n
\r\n
\t\t\t// Otherwise, build a param string\r\n
\t\t\t} else if ( typeof params === "object" ) {\r\n
\t\t\t\tparams = jQuery.param( params, jQuery.ajaxSettings.traditional );\r\n
\t\t\t\ttype = "POST";\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\tvar self = this;\r\n
\r\n
\t\t// Request the remote document\r\n
\t\tjQuery.ajax({\r\n
\t\t\turl: url,\r\n
\t\t\ttype: type,\r\n
\t\t\tdataType: "html",\r\n
\t\t\tdata: params,\r\n
\t\t\t// Complete callback (responseText is used internally)\r\n
\t\t\tcomplete: function( jqXHR, status, responseText ) {\r\n
\t\t\t\t// Store the response as specified by the jqXHR object\r\n
\t\t\t\tresponseText = jqXHR.responseText;\r\n
\t\t\t\t// If successful, inject the HTML into all the matched elements\r\n
\t\t\t\tif ( jqXHR.isResolved() ) {\r\n
\t\t\t\t\t// #4825: Get the actual response in case\r\n
\t\t\t\t\t// a dataFilter is present in ajaxSettings\r\n
\t\t\t\t\tjqXHR.done(function( r ) {\r\n
\t\t\t\t\t\tresponseText = r;\r\n
\t\t\t\t\t});\r\n
\t\t\t\t\t// See if a selector was specified\r\n
\t\t\t\t\tself.html( selector ?\r\n
\t\t\t\t\t\t// Create a dummy div to hold the results\r\n
\t\t\t\t\t\tjQuery("<div>")\r\n
\t\t\t\t\t\t\t// inject the contents of the document in, removing the scripts\r\n
\t\t\t\t\t\t\t// to avoid any \'Permission Denied\' errors in IE\r\n
\t\t\t\t\t\t\t.append(responseText.replace(rscript, ""))\r\n
\r\n
\t\t\t\t\t\t\t// Locate the specified elements\r\n
\t\t\t\t\t\t\t.find(selector) :\r\n
\r\n
\t\t\t\t\t\t// If not, just inject the full result\r\n
\t\t\t\t\t\tresponseText );\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tif ( callback ) {\r\n
\t\t\t\t\tself.each( callback, [ responseText, status, jqXHR ] );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t});\r\n
\r\n
\t\treturn this;\r\n
\t},\r\n
\r\n
\tserialize: function() {\r\n
\t\treturn jQuery.param( this.serializeArray() );\r\n
\t},\r\n
\r\n
\tserializeArray: function() {\r\n
\t\treturn this.map(function(){\r\n
\t\t\treturn this.elements ? jQuery.makeArray( this.elements ) : this;\r\n
\t\t})\r\n
\t\t.filter(function(){\r\n
\t\t\treturn this.name && !this.disabled &&\r\n
\t\t\t\t( this.checked || rselectTextarea.test( this.nodeName ) ||\r\n
\t\t\t\t\trinput.test( this.type ) );\r\n
\t\t})\r\n
\t\t.map(function( i, elem ){\r\n
\t\t\tvar val = jQuery( this ).val();\r\n
\r\n
\t\t\treturn val == null ?\r\n
\t\t\t\tnull :\r\n
\t\t\t\tjQuery.isArray( val ) ?\r\n
\t\t\t\t\tjQuery.map( val, function( val, i ){\r\n
\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, "\\r\\n" ) };\r\n
\t\t\t\t\t}) :\r\n
\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, "\\r\\n" ) };\r\n
\t\t}).get();\r\n
\t}\r\n
});\r\n
\r\n
// Attach a bunch of functions for handling common AJAX events\r\n
jQuery.each( "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split( " " ), function( i, o ){\r\n
\tjQuery.fn[ o ] = function( f ){\r\n
\t\treturn this.on( o, f );\r\n
\t};\r\n
});\r\n
\r\n
jQuery.each( [ "get", "post" ], function( i, method ) {\r\n
\tjQuery[ method ] = function( url, data, callback, type ) {\r\n
\t\t// shift arguments if data argument was omitted\r\n
\t\tif ( jQuery.isFunction( data ) ) {\r\n
\t\t\ttype = type || callback;\r\n
\t\t\tcallback = data;\r\n
\t\t\tdata = undefined;\r\n
\t\t}\r\n
\r\n
\t\treturn jQuery.ajax({\r\n
\t\t\ttype: method,\r\n
\t\t\turl: url,\r\n
\t\t\tdata: data,\r\n
\t\t\tsuccess: callback,\r\n
\t\t\tdataType: type\r\n
\t\t});\r\n
\t};\r\n
});\r\n
\r\n
jQuery.extend({\r\n
\r\n
\tgetScript: function( url, callback ) {\r\n
\t\treturn jQuery.get( url, undefined, callback, "script" );\r\n
\t},\r\n
\r\n
\tgetJSON: function( url, data, callback ) {\r\n
\t\treturn jQuery.get( url, data, callback, "json" );\r\n
\t},\r\n
\r\n
\t// Creates a full fledged settings object into target\r\n
\t// with both ajaxSettings and settings fields.\r\n
\t// If target is omitted, writes into ajaxSettings.\r\n
\tajaxSetup: function( target, settings ) {\r\n
\t\tif ( settings ) {\r\n
\t\t\t// Building a settings object\r\n
\t\t\tajaxExtend( target, jQuery.ajaxSettings );\r\n
\t\t} else {\r\n
\t\t\t// Extending ajaxSettings\r\n
\t\t\tsettings = target;\r\n
\t\t\ttarget = jQuery.ajaxSettings;\r\n
\t\t}\r\n
\t\tajaxExtend( target, settings );\r\n
\t\treturn target;\r\n
\t},\r\n
\r\n
\tajaxSettings: {\r\n
\t\turl: ajaxLocation,\r\n
\t\tisLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\r\n
\t\tglobal: true,\r\n
\t\ttype: "GET",\r\n
\t\tcontentType: "application/x-www-form-urlencoded",\r\n
\t\tprocessData: true,\r\n
\t\tasync: true,\r\n
\t\t/*\r\n
\t\ttimeout: 0,\r\n
\t\tdata: null,\r\n
\t\tdataType: null,\r\n
\t\tusername: null,\r\n
\t\tpassword: null,\r\n
\t\tcache: null,\r\n
\t\ttraditional: false,\r\n
\t\theaders: {},\r\n
\t\t*/\r\n
\r\n
\t\taccepts: {\r\n
\t\t\txml: "application/xml, text/xml",\r\n
\t\t\thtml: "text/html",\r\n
\t\t\ttext: "text/plain",\r\n
\t\t\tjson: "application/json, text/javascript",\r\n
\t\t\t"*": allTypes\r\n
\t\t},\r\n
\r\n
\t\tcontents: {\r\n
\t\t\txml: /xml/,\r\n
\t\t\thtml: /html/,\r\n
\t\t\tjson: /json/\r\n
\t\t},\r\n
\r\n
\t\tresponseFields: {\r\n
\t\t\txml: "responseXML",\r\n
\t\t\ttext: "responseText"\r\n
\t\t},\r\n
\r\n
\t\t// List of data converters\r\n
\t\t// 1) key format is "source_type destination_type" (a single space in-between)\r\n
\t\t// 2) the catchall symbol "*" can be used for source_type\r\n
\t\tconverters: {\r\n
\r\n
\t\t\t// Convert anything to text\r\n
\t\t\t"* text": window.String,\r\n
\r\n
\t\t\t// Text to html (true = no transformation)\r\n
\t\t\t"text html": true,\r\n
\r\n
\t\t\t// Evaluate text as a json expression\r\n
\t\t\t"text json": jQuery.parseJSON,\r\n
\r\n
\t\t\t// Parse text as xml\r\n
\t\t\t"text xml": jQuery.parseXML\r\n
\t\t},\r\n
\r\n
\t\t// For options that shouldn\'t be deep extended:\r\n
\t\t// you can add your own custom options here if\r\n
\t\t// and when you create one that shouldn\'t be\r\n
\t\t// deep extended (see ajaxExtend)\r\n
\t\tflatOptions: {\r\n
\t\t\tcontext: true,\r\n
\t\t\turl: true\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\r\n
\tajaxTransport: addToPrefiltersOrTransports( transports ),\r\n
\r\n
\t// Main method\r\n
\tajax: function( url, options ) {\r\n
\r\n
\t\t// If url is an object, simulate pre-1.5 signature\r\n
\t\tif ( typeof url === "object" ) {\r\n
\t\t\toptions = url;\r\n
\t\t\turl = undefined;\r\n
\t\t}\r\n
\r\n
\t\t// Force options to be an object\r\n
\t\toptions = options || {};\r\n
\r\n
\t\tvar // Create the final options object\r\n
\t\t\ts = jQuery.ajaxSetup( {}, options ),\r\n
\t\t\t// Callbacks context\r\n
\t\t\tcallbackContext = s.context || s,\r\n
\t\t\t// Context for global events\r\n
\t\t\t// It\'s the callbackContext if one was provided in the options\r\n
\t\t\t// and if it\'s a DOM node or a jQuery collection\r\n
\t\t\tglobalEventContext = callbackContext !== s &&\r\n
\t\t\t\t( callbackContext.nodeType || callbackContext instanceof jQuery ) ?\r\n
\t\t\t\t\t\tjQuery( callbackContext ) : jQuery.event,\r\n
\t\t\t// Deferreds\r\n
\t\t\tdeferred = jQuery.Deferred(),\r\n
\t\t\tcompleteDeferred = jQuery.Callbacks( "once memory" ),\r\n
\t\t\t// Status-dependent callbacks\r\n
\t\t\tstatusCode = s.statusCode || {},\r\n
\t\t\t// ifModified key\r\n
\t\t\tifModifiedKey,\r\n
\t\t\t// Headers (they are sent all at once)\r\n
\t\t\trequestHeaders = {},\r\n
\t\t\trequestHeadersNames = {},\r\n
\t\t\t// Response headers\r\n
\t\t\tresponseHeadersString,\r\n
\t\t\tresponseHeaders,\r\n
\t\t\t// transport\r\n
\t\t\ttransport,\r\n
\t\t\t// timeout handle\r\n
\t\t\ttimeoutTimer,\r\n
\t\t\t// Cross-domain detection vars\r\n
\t\t\tparts,\r\n
\t\t\t// The jqXHR state\r\n
\t\t\tstate = 0,\r\n
\t\t\t// To know if global events are to be dispatched\r\n
\t\t\tfireGlobals,\r\n
\t\t\t// Loop variable\r\n
\t\t\ti,\r\n
\t\t\t// Fake xhr\r\n
\t\t\tjqXHR = {\r\n
\r\n
\t\t\t\treadyState: 0,\r\n
\r\n
\t\t\t\t// Caches the header\r\n
\t\t\t\tsetRequestHeader: function( name, value ) {\r\n
\t\t\t\t\tif ( !state ) {\r\n
\t\t\t\t\t\tvar lname = name.toLowerCase();\r\n
\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\r\n
\t\t\t\t\t\trequestHeaders[ name ] = value;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\treturn this;\r\n
\t\t\t\t},\r\n
\r\n
\t\t\t\t// Raw string\r\n
\t\t\t\tgetAllResponseHeaders: function() {\r\n
\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\r\n
\t\t\t\t},\r\n
\r\n
\t\t\t\t// Builds headers hashtable if needed\r\n
\t\t\t\tgetResponseHeader: function( key ) {\r\n
\t\t\t\t\tvar match;\r\n
\t\t\t\t\tif ( state === 2 ) {\r\n
\t\t\t\t\t\tif ( !responseHeaders ) {\r\n
\t\t\t\t\t\t\tresponseHeaders = {};\r\n
\t\t\t\t\t\t\twhile( ( match = rheaders.exec( responseHeadersString ) ) ) {\r\n
\t\t\t\t\t\t\t\tresponseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\r\n
\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\treturn match === undefined ? null : match;\r\n
\t\t\t\t},\r\n
\r\n
\t\t\t\t// Overrides response content-type header\r\n
\t\t\t\toverrideMimeType: function( type ) {\r\n
\t\t\t\t\tif ( !state ) {\r\n
\t\t\t\t\t\ts.mimeType = type;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\treturn this;\r\n
\t\t\t\t},\r\n
\r\n
\t\t\t\t// Cancel the request\r\n
\t\t\t\tabort: function( statusText ) {\r\n
\t\t\t\t\tstatusText = statusText || "abort";\r\n
\t\t\t\t\tif ( transport ) {\r\n
\t\t\t\t\t\ttransport.abort( statusText );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\tdone( 0, statusText );\r\n
\t\t\t\t\treturn this;\r\n
\t\t\t\t}\r\n
\t\t\t};\r\n
\r\n
\t\t// Callback for when everything is done\r\n
\t\t// It is defined here because jslint complains if it is declared\r\n
\t\t// at the end of the function (which would be more logical and readable)\r\n
\t\tfunction done( status, nativeStatusText, responses, headers ) {\r\n
\r\n
\t\t\t// Called once\r\n
\t\t\tif ( state === 2 ) {\r\n
\t\t\t\treturn;\r\n
\t\t\t}\r\n
\r\n
\t\t\t// State is "done" now\r\n
\t\t\tstate = 2;\r\n
\r\n
\t\t\t// Clear timeout if it exists\r\n
\t\t\tif ( timeoutTimer ) {\r\n
\t\t\t\tclearTimeout( timeoutTimer );\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Dereference transport for early garbage collection\r\n
\t\t\t// (no matter how long the jqXHR object will be used)\r\n
\t\t\ttransport = undefined;\r\n
\r\n
\t\t\t// Cache response headers\r\n
\t\t\tresponseHeadersString = headers || "";\r\n
\r\n
\t\t\t// Set readyState\r\n
\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\r\n
\r\n
\t\t\tvar isSuccess,\r\n
\t\t\t\tsuccess,\r\n
\t\t\t\terror,\r\n
\t\t\t\tstatusText = nativeStatusText,\r\n
\t\t\t\tresponse = responses ? ajaxHandleResponses( s, jqXHR, responses ) : undefined,\r\n
\t\t\t\tlastModified,\r\n
\t\t\t\tetag;\r\n
\r\n
\t\t\t// If successful, handle type chaining\r\n
\t\t\tif ( status >= 200 && status < 300 || status === 304 ) {\r\n
\r\n
\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n
\t\t\t\tif ( s.ifModified ) {\r\n
\r\n
\t\t\t\t\tif ( ( lastModified = jqXHR.getResponseHeader( "Last-Modified" ) ) ) {\r\n
\t\t\t\t\t\tjQuery.lastModified[ ifModifiedKey ] = lastModified;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\tif ( ( etag = jqXHR.getResponseHeader( "Etag" ) ) ) {\r\n
\t\t\t\t\t\tjQuery.etag[ ifModifiedKey ] = etag;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\t// If not modified\r\n
\t\t\t\tif ( status === 304 ) {\r\n
\r\n
\t\t\t\t\tstatusText = "notmodified";\r\n
\t\t\t\t\tisSuccess = true;\r\n
\r\n
\t\t\t\t// If we have data\r\n
\t\t\t\t} else {\r\n
\r\n
\t\t\t\t\ttry {\r\n
\t\t\t\t\t\tsuccess = ajaxConvert( s, response );\r\n
\t\t\t\t\t\tstatusText = "success";\r\n
\t\t\t\t\t\tisSuccess = true;\r\n
\t\t\t\t\t} catch(e) {\r\n
\t\t\t\t\t\t// We have a parsererror\r\n
\t\t\t\t\t\tstatusText = "parsererror";\r\n
\t\t\t\t\t\terror = e;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t} else {\r\n
\t\t\t\t// We extract error from statusText\r\n
\t\t\t\t// then normalize statusText and status for non-aborts\r\n
\t\t\t\terror = statusText;\r\n
\t\t\t\tif ( !statusText || status ) {\r\n
\t\t\t\t\tstatusText = "error";\r\n
\t\t\t\t\tif ( status < 0 ) {\r\n
\t\t\t\t\t\tstatus = 0;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Set data for the fake xhr object\r\n
\t\t\tjqXHR.status = status;\r\n
\t\t\tjqXHR.statusText = "" + ( nativeStatusText || statusText );\r\n
\r\n
\t\t\t// Success/Error\r\n
\t\t\tif ( isSuccess ) {\r\n
\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\r\n
\t\t\t} else {\r\n
\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Status-dependent callbacks\r\n
\t\t\tjqXHR.statusCode( statusCode );\r\n
\t\t\tstatusCode = undefined;\r\n
\r\n
\t\t\tif ( fireGlobals ) {\r\n
\t\t\t\tglobalEventContext.trigger( "ajax" + ( isSuccess ? "Success" : "Error" ),\r\n
\t\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Complete\r\n
\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\r\n
\r\n
\t\t\tif ( fireGlobals ) {\r\n
\t\t\t\tglobalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );\r\n
\t\t\t\t// Handle the global AJAX counter\r\n
\t\t\t\tif ( !( --jQuery.active ) ) {\r\n
\t\t\t\t\tjQuery.event.trigger( "ajaxStop" );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\t// Attach deferreds\r\n
\t\tdeferred.promise( jqXHR );\r\n
\t\tjqXHR.success = jqXHR.done;\r\n
\t\tjqXHR.error = jqXHR.fail;\r\n
\t\tjqXHR.complete = completeDeferred.add;\r\n
\r\n
\t\t// Status-dependent callbacks\r\n
\t\tjqXHR.statusCode = function( map ) {\r\n
\t\t\tif ( map ) {\r\n
\t\t\t\tvar tmp;\r\n
\t\t\t\tif ( state < 2 ) {\r\n
\t\t\t\t\tfor ( tmp in map ) {\r\n
\t\t\t\t\t\tstatusCode[ tmp ] = [ statusCode[tmp], map[tmp] ];\r\n
\t\t\t\t\t}\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\ttmp = map[ jqXHR.status ];\r\n
\t\t\t\t\tjqXHR.then( tmp, tmp );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t\treturn this;\r\n
\t\t};\r\n
\r\n
\t\t// Remove hash character (#7531: and string promotion)\r\n
\t\t// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)\r\n
\t\t// We also use the url parameter if available\r\n
\t\ts.url = ( ( url || s.url ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );\r\n
\r\n
\t\t// Extract dataTypes list\r\n
\t\ts.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().split( rspacesAjax );\r\n
\r\n
\t\t// Determine if a cross-domain request is in order\r\n
\t\tif ( s.crossDomain == null ) {\r\n
\t\t\tparts = rurl.exec( s.url.toLowerCase() );\r\n
\t\t\ts.crossDomain = !!( parts &&\r\n
\t\t\t\t( parts[ 1 ] != ajaxLocParts[ 1 ] || parts[ 2 ] != ajaxLocParts[ 2 ] ||\r\n
\t\t\t\t\t( parts[ 3 ] || ( parts[ 1 ] === "http:" ? 80 : 443 ) ) !=\r\n
\t\t\t\t\t\t( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? 80 : 443 ) ) )\r\n
\t\t\t);\r\n
\t\t}\r\n
\r\n
\t\t// Convert data if not already a string\r\n
\t\tif ( s.data && s.processData && typeof s.data !== "string" ) {\r\n
\t\t\ts.data = jQuery.param( s.data, s.traditional );\r\n
\t\t}\r\n
\r\n
\t\t// Apply prefilters\r\n
\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\r\n
\r\n
\t\t// If request was aborted inside a prefiler, stop there\r\n
\t\tif ( state === 2 ) {\r\n
\t\t\treturn false;\r\n
\t\t}\r\n
\r\n
\t\t// We can fire global events as of now if asked to\r\n
\t\tfireGlobals = s.global;\r\n
\r\n
\t\t// Uppercase the type\r\n
\t\ts.type = s.type.toUpperCase();\r\n
\r\n
\t\t// Determine if request has content\r\n
\t\ts.hasContent = !rnoContent.test( s.type );\r\n
\r\n
\t\t// Watch for a new set of requests\r\n
\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\r\n
\t\t\tjQuery.event.trigger( "ajaxStart" );\r\n
\t\t}\r\n
\r\n
\t\t// More options handling for requests with no content\r\n
\t\tif ( !s.hasContent ) {\r\n
\r\n
\t\t\t// If data is available, append data to url\r\n
\t\t\tif ( s.data ) {\r\n
\t\t\t\ts.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.data;\r\n
\t\t\t\t// #9682: remove data so that it\'s not used in an eventual retry\r\n
\t\t\t\tdelete s.data;\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Get ifModifiedKey before adding the anti-cache parameter\r\n
\t\t\tifModifiedKey = s.url;\r\n
\r\n
\t\t\t// Add anti-cache in url if needed\r\n
\t\t\tif ( s.cache === false ) {\r\n
\r\n
\t\t\t\tvar ts = jQuery.now(),\r\n
\t\t\t\t\t// try replacing _= if it is there\r\n
\t\t\t\t\tret = s.url.replace( rts, "$1_=" + ts );\r\n
\r\n
\t\t\t\t// if nothing was replaced, add timestamp to the end\r\n
\t\t\t\ts.url = ret + ( ( ret === s.url ) ? ( rquery.test( s.url ) ? "&" : "?" ) + "_=" + ts : "" );\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\t// Set the correct header, if data is being sent\r\n
\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\r\n
\t\t\tjqXHR.setRequestHeader( "Content-Type", s.contentType );\r\n
\t\t}\r\n
\r\n
\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n
\t\tif ( s.ifModified ) {\r\n
\t\t\tifModifiedKey = ifModifiedKey || s.url;\r\n
\t\t\tif ( jQuery.lastModified[ ifModifiedKey ] ) {\r\n
\t\t\t\tjqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ ifModifiedKey ] );\r\n
\t\t\t}\r\n
\t\t\tif ( jQuery.etag[ ifModifiedKey ] ) {\r\n
\t\t\t\tjqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ ifModifiedKey ] );\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\t// Set the Accepts header for the server, depending on the dataType\r\n
\t\tjqXHR.setRequestHeader(\r\n
\t\t\t"Accept",\r\n
\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\r\n
\t\t\t\ts.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :\r\n
\t\t\t\ts.accepts[ "*" ]\r\n
\t\t);\r\n
\r\n
\t\t// Check for headers option\r\n
\t\tfor ( i in s.headers ) {\r\n
\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\r\n
\t\t}\r\n
\r\n
\t\t// Allow custom headers/mimetypes and early abort\r\n
\t\tif ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\r\n
\t\t\t\t// Abort if not done already\r\n
\t\t\t\tjqXHR.abort();\r\n
\t\t\t\treturn false;\r\n
\r\n
\t\t}\r\n
\r\n
\t\t// Install callbacks on deferreds\r\n
\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\r\n
\t\t\tjqXHR[ i ]( s[ i ] );\r\n
\t\t}\r\n
\r\n
\t\t// Get transport\r\n
\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\r\n
\r\n
\t\t// If no transport, we auto-abort\r\n
\t\tif ( !transport ) {\r\n
\t\t\tdone( -1, "No Transport" );\r\n
\t\t} else {\r\n
\t\t\tjqXHR.readyState = 1;\r\n
\t\t\t// Send global event\r\n
\t\t\tif ( fireGlobals ) {\r\n
\t\t\t\tglobalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );\r\n
\t\t\t}\r\n
\t\t\t// Timeout\r\n
\t\t\tif ( s.async && s.timeout > 0 ) {\r\n
\t\t\t\ttimeoutTimer = setTimeout( function(){\r\n
\t\t\t\t\tjqXHR.abort( "timeout" );\r\n
\t\t\t\t}, s.timeout );\r\n
\t\t\t}\r\n
\r\n
\t\t\ttry {\r\n
\t\t\t\tstate = 1;\r\n
\t\t\t\ttransport.send( requestHeaders, done );\r\n
\t\t\t} catch (e) {\r\n
\t\t\t\t// Propagate exception as error if not done\r\n
\t\t\t\tif ( state < 2 ) {\r\n
\t\t\t\t\tdone( -1, e );\r\n
\t\t\t\t// Simply rethrow otherwise\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\tthrow e;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\treturn jqXHR;\r\n
\t},\r\n
\r\n
\t// Serialize an array of form elements or a set of\r\n
\t// key/values into a query string\r\n
\tparam: function( a, traditional ) {\r\n
\t\tvar s = [],\r\n
\t\t\tadd = function( key, value ) {\r\n
\t\t\t\t// If value is a function, invoke it and return its value\r\n
\t\t\t\tvalue = jQuery.isFunction( value ) ? value() : value;\r\n
\t\t\t\ts[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );\r\n
\t\t\t};\r\n
\r\n
\t\t// Set traditional to true for jQuery <= 1.3.2 behavior.\r\n
\t\tif ( traditional === undefined ) {\r\n
\t\t\ttraditional = jQuery.ajaxSettings.traditional;\r\n
\t\t}\r\n
\r\n
\t\t// If an array was passed in, assume that it is an array of form elements.\r\n
\t\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\r\n
\t\t\t// Serialize the form elements\r\n
\t\t\tjQuery.each( a, function() {\r\n
\t\t\t\tadd( this.name, this.value );\r\n
\t\t\t});\r\n
\r\n
\t\t} else {\r\n
\t\t\t// If traditional, encode the "old" way (the way 1.3.2 or older\r\n
\t\t\t// did it), otherwise encode params recursively.\r\n
\t\t\tfor ( var prefix in a ) {\r\n
\t\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\t// Return the resulting serialization\r\n
\t\treturn s.join( "&" ).replace( r20, "+" );\r\n
\t}\r\n
});\r\n
\r\n
function buildParams( prefix, obj, traditional, add ) {\r\n
\tif ( jQuery.isArray( obj ) ) {\r\n
\t\t// Serialize array item.\r\n
\t\tjQuery.each( obj, function( i, v ) {\r\n
\t\t\tif ( traditional || rbracket.test( prefix ) ) {\r\n
\t\t\t\t// Treat each array item as a scalar.\r\n
\t\t\t\tadd( prefix, v );\r\n
\r\n
\t\t\t} else {\r\n
\t\t\t\t// If array item is non-scalar (array or object), encode its\r\n
\t\t\t\t// numeric index to resolve deserialization ambiguity issues.\r\n
\t\t\t\t// Note that rack (as of 1.0.0) can\'t currently deserialize\r\n
\t\t\t\t// nested arrays properly, and attempting to do so may cause\r\n
\t\t\t\t// a server error. Possible fixes are to modify rack\'s\r\n
\t\t\t\t// deserialization algorithm or to provide an option or flag\r\n
\t\t\t\t// to force array serialization to be shallow.\r\n
\t\t\t\tbuildParams( prefix + "[" + ( typeof v === "object" || jQuery.isArray(v) ? i : "" ) + "]", v, traditional, add );\r\n
\t\t\t}\r\n
\t\t});\r\n
\r\n
\t} else if ( !traditional && obj != null && typeof obj === "object" ) {\r\n
\t\t// Serialize object item.\r\n
\t\tfor ( var name in obj ) {\r\n
\t\t\tbuildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );\r\n
\t\t}\r\n
\r\n
\t} else {\r\n
\t\t// Serialize scalar item.\r\n
\t\tadd( prefix, obj );\r\n
\t}\r\n
}\r\n
\r\n
// This is still on the jQuery object... for now\r\n
// Want to move this to jQuery.ajax some day\r\n
jQuery.extend({\r\n
\r\n
\t// Counter for holding the number of active queries\r\n
\tactive: 0,\r\n
\r\n
\t// Last-Modified header cache for next request\r\n
\tlastModified: {},\r\n
\tetag: {}\r\n
\r\n
});\r\n
\r\n
/* Handles responses to an ajax request:\r\n
 * - sets all responseXXX fields accordingly\r\n
 * - finds the right dataType (mediates between content-type and expected dataType)\r\n
 * - returns the corresponding response\r\n
 */\r\n
function ajaxHandleResponses( s, jqXHR, responses ) {\r\n
\r\n
\tvar contents = s.contents,\r\n
\t\tdataTypes = s.dataTypes,\r\n
\t\tresponseFields = s.responseFields,\r\n
\t\tct,\r\n
\t\ttype,\r\n
\t\tfinalDataType,\r\n
\t\tfirstDataType;\r\n
\r\n
\t// Fill responseXXX fields\r\n
\tfor ( type in responseFields ) {\r\n
\t\tif ( type in responses ) {\r\n
\t\t\tjqXHR[ responseFields[type] ] = responses[ type ];\r\n
\t\t}\r\n
\t}\r\n
\r\n
\t// Remove auto dataType and get content-type in the process\r\n
\twhile( dataTypes[ 0 ] === "*" ) {\r\n
\t\tdataTypes.shift();\r\n
\t\tif ( ct === undefined ) {\r\n
\t\t\tct = s.mimeType || jqXHR.getResponseHeader( "content-type" );\r\n
\t\t}\r\n
\t}\r\n
\r\n
\t// Check if we\'re dealing with a known content-type\r\n
\tif ( ct ) {\r\n
\t\tfor ( type in contents ) {\r\n
\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\r\n
\t\t\t\tdataTypes.unshift( type );\r\n
\t\t\t\tbreak;\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
\r\n
\t// Check to see if we have a response for the expected dataType\r\n
\tif ( dataTypes[ 0 ] in responses ) {\r\n
\t\tfinalDataType = dataTypes[ 0 ];\r\n
\t} else {\r\n
\t\t// Try convertible dataTypes\r\n
\t\tfor ( type in responses ) {\r\n
\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {\r\n
\t\t\t\tfinalDataType = type;\r\n
\t\t\t\tbreak;\r\n
\t\t\t}\r\n
\t\t\tif ( !firstDataType ) {\r\n
\t\t\t\tfirstDataType = type;\r\n
\t\t\t}\r\n
\t\t}\r\n
\t\t// Or just use first one\r\n
\t\tfinalDataType = finalDataType || firstDataType;\r\n
\t}\r\n
\r\n
\t// If we found a dataType\r\n
\t// We add the dataType to the list if needed\r\n
\t// and return the corresponding response\r\n
\tif ( finalDataType ) {\r\n
\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\r\n
\t\t\tdataTypes.unshift( finalDataType );\r\n
\t\t}\r\n
\t\treturn responses[ finalDataType ];\r\n
\t}\r\n
}\r\n
\r\n
// Chain conversions given the request and the original response\r\n
function ajaxConvert( s, response ) {\r\n
\r\n
\t// Apply the dataFilter if provided\r\n
\tif ( s.dataFilter ) {\r\n
\t\tresponse = s.dataFilter( response, s.dataType );\r\n
\t}\r\n
\r\n
\tvar dataTypes = s.dataTypes,\r\n
\t\tconverters = {},\r\n
\t\ti,\r\n
\t\tkey,\r\n
\t\tlength = dataTypes.length,\r\n
\t\ttmp,\r\n
\t\t// Current and previous dataTypes\r\n
\t\tcurrent = dataTypes[ 0 ],\r\n
\t\tprev,\r\n
\t\t// Conversion expression\r\n
\t\tconversion,\r\n
\t\t// Conversion function\r\n
\t\tconv,\r\n
\t\t// Conversion functions (transitive conversion)\r\n
\t\tconv1,\r\n
\t\tconv2;\r\n
\r\n
\t// For each dataType in the chain\r\n
\tfor ( i = 1; i < length; i++ ) {\r\n
\r\n
\t\t// Create converters map\r\n
\t\t// with lowercased keys\r\n
\t\tif ( i === 1 ) {\r\n
\t\t\tfor ( key in s.converters ) {\r\n
\t\t\t\tif ( typeof key === "string" ) {\r\n
\t\t\t\t\tconverters[ key.toLowerCase() ] = s.converters[ key ];\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\t// Get the dataTypes\r\n
\t\tprev = current;\r\n
\t\tcurrent = dataTypes[ i ];\r\n
\r\n
\t\t// If current is auto dataType, update it to prev\r\n
\t\tif ( current === "*" ) {\r\n
\t\t\tcurrent = prev;\r\n
\t\t// If no auto and dataTypes are actually different\r\n
\t\t} else if ( prev !== "*" && prev !== current ) {\r\n
\r\n
\t\t\t// Get the converter\r\n
\t\t\tconversion = prev + " " + current;\r\n
\t\t\tconv = converters[ conversion ] || converters[ "* " + current ];\r\n
\r\n
\t\t\t// If there is no direct converter, search transitively\r\n
\t\t\tif ( !conv ) {\r\n
\t\t\t\tconv2 = undefined;\r\n
\t\t\t\tfor ( conv1 in converters ) {\r\n
\t\t\t\t\ttmp = conv1.split( " " );\r\n
\t\t\t\t\tif ( tmp[ 0 ] === prev || tmp[ 0 ] === "*" ) {\r\n
\t\t\t\t\t\tconv2 = converters[ tmp[1] + " " + current ];\r\n
\t\t\t\t\t\tif ( conv2 ) {\r\n
\t\t\t\t\t\t\tconv1 = converters[ conv1 ];\r\n
\t\t\t\t\t\t\tif ( conv1 === true ) {\r\n
\t\t\t\t\t\t\t\tconv = conv2;\r\n
\t\t\t\t\t\t\t} else if ( conv2 === true ) {\r\n
\t\t\t\t\t\t\t\tconv = conv1;\r\n
\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t\tbreak;\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t\t// If we found no converter, dispatch an error\r\n
\t\t\tif ( !( conv || conv2 ) ) {\r\n
\t\t\t\tjQuery.error( "No conversion from " + conversion.replace(" "," to ") );\r\n
\t\t\t}\r\n
\t\t\t// If found converter is not an equivalence\r\n
\t\t\tif ( conv !== true ) {\r\n
\t\t\t\t// Convert with 1 or 2 converters accordingly\r\n
\t\t\t\tresponse = conv ? conv( response ) : conv2( conv1(response) );\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
\treturn response;\r\n
}\r\n
\r\n
\r\n
\r\n
\r\n
var jsc = jQuery.now(),\r\n
\tjsre = /(\\=)\\?(&|$)|\\?\\?/i;\r\n
\r\n
// Default jsonp settings\r\n
jQuery.ajaxSetup({\r\n
\tjsonp: "callback",\r\n
\tjsonpCallback: function() {\r\n
\t\treturn jQuery.expando + "_" + ( jsc++ );\r\n
\t}\r\n
});\r\n
\r\n
// Detect, normalize options and install callbacks for jsonp requests\r\n
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {\r\n
\r\n
\tvar inspectData = s.contentType === "application/x-www-form-urlencoded" &&\r\n
\t\t( typeof s.data === "string" );\r\n
\r\n
\tif ( s.dataTypes[ 0 ] === "jsonp" ||\r\n
\t\ts.jsonp !== false && ( jsre.test( s.url ) ||\r\n
\t\t\t\tinspectData && jsre.test( s.data ) ) ) {\r\n
\r\n
\t\tvar responseContainer,\r\n
\t\t\tjsonpCallback = s.jsonpCallback =\r\n
\t\t\t\tjQuery.isFunction( s.jsonpCallback ) ? s.jsonpCallback() : s.jsonpCallback,\r\n
\t\t\tprevious = window[ jsonpCallback ],\r\n
\t\t\turl = s.url,\r\n
\t\t\tdata = s.data,\r\n
\t\t\treplace = "$1" + jsonpCallback + "$2";\r\n
\r\n
\t\tif ( s.jsonp !== false ) {\r\n
\t\t\turl = url.replace( jsre, replace );\r\n
\t\t\tif ( s.url === url ) {\r\n
\t\t\t\tif ( inspectData ) {\r\n
\t\t\t\t\tdata = data.replace( jsre, replace );\r\n
\t\t\t\t}\r\n
\t\t\t\tif ( s.data === data ) {\r\n
\t\t\t\t\t// Add callback manually\r\n
\t\t\t\t\turl += (/\\?/.test( url ) ? "&" : "?") + s.jsonp + "=" + jsonpCallback;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\ts.url = url;\r\n
\t\ts.data = data;\r\n
\r\n
\t\t// Install callback\r\n
\t\twindow[ jsonpCallback ] = function( response ) {\r\n
\t\t\tresponseContainer = [ response ];\r\n
\t\t};\r\n
\r\n
\t\t// Clean-up function\r\n
\t\tjqXHR.always(function() {\r\n
\t\t\t// Set callback back to previous value\r\n
\t\t\twindow[ jsonpCallback ] = previous;\r\n
\t\t\t// Call if it was a function and we have a response\r\n
\t\t\tif ( responseContainer && jQuery.isFunction( previous ) ) {\r\n
\t\t\t\twindow[ jsonpCallback ]( responseContainer[ 0 ] );\r\n
\t\t\t}\r\n
\t\t});\r\n
\r\n
\t\t// Use data converter to retrieve json after script execution\r\n
\t\ts.converters["script json"] = function() {\r\n
\t\t\tif ( !responseContainer ) {\r\n
\t\t\t\tjQuery.error( jsonpCallback + " was not called" );\r\n
\t\t\t}\r\n
\t\t\treturn responseContainer[ 0 ];\r\n
\t\t};\r\n
\r\n
\t\t// force json dataType\r\n
\t\ts.dataTypes[ 0 ] = "json";\r\n
\r\n
\t\t// Delegate to script\r\n
\t\treturn "script";\r\n
\t}\r\n
});\r\n
\r\n
\r\n
\r\n
\r\n
// Install script dataType\r\n
jQuery.ajaxSetup({\r\n
\taccepts: {\r\n
\t\tscript: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"\r\n
\t},\r\n
\tcontents: {\r\n
\t\tscript: /javascript|ecmascript/\r\n
\t},\r\n
\tconverters: {\r\n
\t\t"text script": function( text ) {\r\n
\t\t\tjQuery.globalEval( text );\r\n
\t\t\treturn text;\r\n
\t\t}\r\n
\t}\r\n
});\r\n
\r\n
// Handle cache\'s special case and global\r\n
jQuery.ajaxPrefilter( "script", function( s ) {\r\n
\tif ( s.cache === undefined ) {\r\n
\t\ts.cache = false;\r\n
\t}\r\n
\tif ( s.crossDomain ) {\r\n
\t\ts.type = "GET";\r\n
\t\ts.global = false;\r\n
\t}\r\n
});\r\n
\r\n
// Bind script tag hack transport\r\n
jQuery.ajaxTransport( "script", function(s) {\r\n
\r\n
\t// This transport only deals with cross domain requests\r\n
\tif ( s.crossDomain ) {\r\n
\r\n
\t\tvar script,\r\n
\t\t\thead = document.head || document.getElementsByTagName( "head" )[0] || document.documentElement;\r\n
\r\n
\t\treturn {\r\n
\r\n
\t\t\tsend: function( _, callback ) {\r\n
\r\n
\t\t\t\tscript = document.createElement( "script" );\r\n
\r\n
\t\t\t\tscript.async = "async";\r\n
\r\n
\t\t\t\tif ( s.scriptCharset ) {\r\n
\t\t\t\t\tscript.charset = s.scriptCharset;\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tscript.src = s.url;\r\n
\r\n
\t\t\t\t// Attach handlers for all browsers\r\n
\t\t\t\tscript.onload = script.onreadystatechange = function( _, isAbort ) {\r\n
\r\n
\t\t\t\t\tif ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {\r\n
\r\n
\t\t\t\t\t\t// Handle memory leak in IE\r\n
\t\t\t\t\t\tscript.onload = script.onreadystatechange = null;\r\n
\r\n
\t\t\t\t\t\t// Remove the script\r\n
\t\t\t\t\t\tif ( head && script.parentNode ) {\r\n
\t\t\t\t\t\t\thead.removeChild( script );\r\n
\t\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t\t// Dereference the script\r\n
\t\t\t\t\t\tscript = undefined;\r\n
\r\n
\t\t\t\t\t\t// Callback if not abort\r\n
\t\t\t\t\t\tif ( !isAbort ) {\r\n
\t\t\t\t\t\t\tcallback( 200, "success" );\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\t\t\t\t};\r\n
\t\t\t\t// Use insertBefore instead of appendChild  to circumvent an IE6 bug.\r\n
\t\t\t\t// This arises when a base node is used (#2709 and #4378).\r\n
\t\t\t\thead.insertBefore( script, head.firstChild );\r\n
\t\t\t},\r\n
\r\n
\t\t\tabort: function() {\r\n
\t\t\t\tif ( script ) {\r\n
\t\t\t\t\tscript.onload( 0, 1 );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\t\t};\r\n
\t}\r\n
});\r\n
\r\n
\r\n
\r\n
\r\n
var // #5280: Internet Explorer will keep connections alive if we don\'t abort on unload\r\n
\txhrOnUnloadAbort = window.ActiveXObject ? function() {\r\n
\t\t// Abort all pending requests\r\n
\t\tfor ( var key in xhrCallbacks ) {\r\n
\t\t\txhrCallbacks[ key ]( 0, 1 );\r\n
\t\t}\r\n
\t} : false,\r\n
\txhrId = 0,\r\n
\txhrCallbacks;\r\n
\r\n
// Functions to create xhrs\r\n
function createStandardXHR() {\r\n
\ttry {\r\n
\t\treturn new window.XMLHttpRequest();\r\n
\t} catch( e ) {}\r\n
}\r\n
\r\n
function createActiveXHR() {\r\n
\ttry {\r\n
\t\treturn new window.ActiveXObject( "Microsoft.XMLHTTP" );\r\n
\t} catch( e ) {}\r\n
}\r\n
\r\n
// Create the request object\r\n
// (This is still attached to ajaxSettings for backward compatibility)\r\n
jQuery.ajaxSettings.xhr = window.ActiveXObject ?\r\n
\t/* Microsoft failed to properly\r\n
\t * implement the XMLHttpRequest in IE7 (can\'t request local files),\r\n
\t * so we use the ActiveXObject when it is available\r\n
\t * Additionally XMLHttpRequest can be disabled in IE7/IE8 so\r\n
\t * we need a fallback.\r\n
\t */\r\n
\tfunction() {\r\n
\t\treturn !this.isLocal && createStandardXHR() || createActiveXHR();\r\n
\t} :\r\n
\t// For all other browsers, use the standard XMLHttpRequest object\r\n
\tcreateStandardXHR;\r\n
\r\n
// Determine support properties\r\n
(function( xhr ) {\r\n
\tjQuery.extend( jQuery.support, {\r\n
\t\tajax: !!xhr,\r\n
\t\tcors: !!xhr && ( "withCredentials" in xhr )\r\n
\t});\r\n
})( jQuery.ajaxSettings.xhr() );\r\n
\r\n
// Create transport if the browser can provide an xhr\r\n
if ( jQuery.support.ajax ) {\r\n
\r\n
\tjQuery.ajaxTransport(function( s ) {\r\n
\t\t// Cross domain only allowed if supported through XMLHttpRequest\r\n
\t\tif ( !s.crossDomain || jQuery.support.cors ) {\r\n
\r\n
\t\t\tvar callback;\r\n
\r\n
\t\t\treturn {\r\n
\t\t\t\tsend: function( headers, complete ) {\r\n
\r\n
\t\t\t\t\t// Get a new xhr\r\n
\t\t\t\t\tvar xhr = s.xhr(),\r\n
\t\t\t\t\t\thandle,\r\n
\t\t\t\t\t\ti;\r\n
\r\n
\t\t\t\t\t// Open the socket\r\n
\t\t\t\t\t// Passing null username, generates a login popup on Opera (#2865)\r\n
\t\t\t\t\tif ( s.username ) {\r\n
\t\t\t\t\t\txhr.open( s.type, s.url, s.async, s.username, s.password );\r\n
\t\t\t\t\t} else {\r\n
\t\t\t\t\t\txhr.open( s.type, s.url, s.async );\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t// Apply custom fields if provided\r\n
\t\t\t\t\tif ( s.xhrFields ) {\r\n
\t\t\t\t\t\tfor ( i in s.xhrFields ) {\r\n
\t\t\t\t\t\t\txhr[ i ] = s.xhrFields[ i ];\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t// Override mime type if needed\r\n
\t\t\t\t\tif ( s.mimeType && xhr.overrideMimeType ) {\r\n
\t\t\t\t\t\txhr.overrideMimeType( s.mimeType );\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t// X-Requested-With header\r\n
\t\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\r\n
\t\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\r\n
\t\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\r\n
\t\t\t\t\t// For same-domain requests, won\'t change header if already provided.\r\n
\t\t\t\t\tif ( !s.crossDomain && !headers["X-Requested-With"] ) {\r\n
\t\t\t\t\t\theaders[ "X-Requested-With" ] = "XMLHttpRequest";\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t// Need an extra try/catch for cross domain requests in Firefox 3\r\n
\t\t\t\t\ttry {\r\n
\t\t\t\t\t\tfor ( i in headers ) {\r\n
\t\t\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t} catch( _ ) {}\r\n
\r\n
\t\t\t\t\t// Do send the request\r\n
\t\t\t\t\t// This may raise an exception which is actually\r\n
\t\t\t\t\t// handled in jQuery.ajax (so no try/catch here)\r\n
\t\t\t\t\txhr.send( ( s.hasContent && s.data ) || null );\r\n
\r\n
\t\t\t\t\t// Listener\r\n
\t\t\t\t\tcallback = function( _, isAbort ) {\r\n
\r\n
\t\t\t\t\t\tvar status,\r\n
\t\t\t\t\t\t\tstatusText,\r\n
\t\t\t\t\t\t\tresponseHeaders,\r\n
\t\t\t\t\t\t\tresponses,\r\n
\t\t\t\t\t\t\txml;\r\n
\r\n
\t\t\t\t\t\t// Firefox throws exceptions when accessing properties\r\n
\t\t\t\t\t\t// of an xhr when a network error occured\r\n
\t\t\t\t\t\t// http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)\r\n
\t\t\t\t\t\ttry {\r\n
\r\n
\t\t\t\t\t\t\t// Was never called and is aborted or complete\r\n
\t\t\t\t\t\t\tif ( callback && ( isAbort || xhr.readyState === 4 ) ) {\r\n
\r\n
\t\t\t\t\t\t\t\t// Only called once\r\n
\t\t\t\t\t\t\t\tcallback = undefined;\r\n
\r\n
\t\t\t\t\t\t\t\t// Do not keep as active anymore\r\n
\t\t\t\t\t\t\t\tif ( handle ) {\r\n
\t\t\t\t\t\t\t\t\txhr.onreadystatechange = jQuery.noop;\r\n
\t\t\t\t\t\t\t\t\tif ( xhrOnUnloadAbort ) {\r\n
\t\t\t\t\t\t\t\t\t\tdelete xhrCallbacks[ handle ];\r\n
\t\t\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t\t\t\t// If it\'s an abort\r\n
\t\t\t\t\t\t\t\tif ( isAbort ) {\r\n
\t\t\t\t\t\t\t\t\t// Abort it manually if needed\r\n
\t\t\t\t\t\t\t\t\tif ( xhr.readyState !== 4 ) {\r\n
\t\t\t\t\t\t\t\t\t\txhr.abort();\r\n
\t\t\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t\t\t} else {\r\n
\t\t\t\t\t\t\t\t\tstatus = xhr.status;\r\n
\t\t\t\t\t\t\t\t\tresponseHeaders = xhr.getAllResponseHeaders();\r\n
\t\t\t\t\t\t\t\t\tresponses = {};\r\n
\t\t\t\t\t\t\t\t\txml = xhr.responseXML;\r\n
\r\n
\t\t\t\t\t\t\t\t\t// Construct response list\r\n
\t\t\t\t\t\t\t\t\tif ( xml && xml.documentElement /* #4958 */ ) {\r\n
\t\t\t\t\t\t\t\t\t\tresponses.xml = xml;\r\n
\t\t\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t\t\t\tresponses.text = xhr.responseText;\r\n
\r\n
\t\t\t\t\t\t\t\t\t// Firefox throws an exception when accessing\r\n
\t\t\t\t\t\t\t\t\t// statusText for faulty cross-domain requests\r\n
\t\t\t\t\t\t\t\t\ttry {\r\n
\t\t\t\t\t\t\t\t\t\tstatusText = xhr.statusText;\r\n
\t\t\t\t\t\t\t\t\t} catch( e ) {\r\n
\t\t\t\t\t\t\t\t\t\t// We normalize with Webkit giving an empty statusText\r\n
\t\t\t\t\t\t\t\t\t\tstatusText = "";\r\n
\t\t\t\t\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t\t\t\t\t// Filter status for non standard behaviors\r\n
\r\n
\t\t\t\t\t\t\t\t\t// If the request is local and we have data: assume a success\r\n
\t\t\t\t\t\t\t\t\t// (success with no data won\'t get notified, that\'s the best we\r\n
\t\t\t\t\t\t\t\t\t// can do given current implementations)\r\n
\t\t\t\t\t\t\t\t\tif ( !status && s.isLocal && !s.crossDomain ) {\r\n
\t\t\t\t\t\t\t\t\t\tstatus = responses.text ? 200 : 404;\r\n
\t\t\t\t\t\t\t\t\t// IE - #1450: sometimes returns 1223 when it should be 204\r\n
\t\t\t\t\t\t\t\t\t} else if ( status === 1223 ) {\r\n
\t\t\t\t\t\t\t\t\t\tstatus = 204;\r\n
\t\t\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t} catch( firefoxAccessException ) {\r\n
\t\t\t\t\t\t\tif ( !isAbort ) {\r\n
\t\t\t\t\t\t\t\tcomplete( -1, firefoxAccessException );\r\n
\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t\t// Call complete if needed\r\n
\t\t\t\t\t\tif ( responses ) {\r\n
\t\t\t\t\t\t\tcomplete( status, statusText, responses, responseHeaders );\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t};\r\n
\r\n
\t\t\t\t\t// if we\'re in sync mode or it\'s in cache\r\n
\t\t\t\t\t// and has been retrieved directly (IE6 & IE7)\r\n
\t\t\t\t\t// we need to manually fire the callback\r\n
\t\t\t\t\tif ( !s.async || xhr.readyState === 4 ) {\r\n
\t\t\t\t\t\tcallback();\r\n
\t\t\t\t\t} else {\r\n
\t\t\t\t\t\thandle = ++xhrId;\r\n
\t\t\t\t\t\tif ( xhrOnUnloadAbort ) {\r\n
\t\t\t\t\t\t\t// Create the active xhrs callbacks list if needed\r\n
\t\t\t\t\t\t\t// and attach the unload handler\r\n
\t\t\t\t\t\t\tif ( !xhrCallbacks ) {\r\n
\t\t\t\t\t\t\t\txhrCallbacks = {};\r\n
\t\t\t\t\t\t\t\tjQuery( window ).unload( xhrOnUnloadAbort );\r\n
\t\t\t\t\t\t\t}\r\n
\t\t\t\t\t\t\t// Add to list of active xhrs callbacks\r\n
\t\t\t\t\t\t\txhrCallbacks[ handle ] = callback;\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t\txhr.onreadystatechange = callback;\r\n
\t\t\t\t\t}\r\n
\t\t\t\t},\r\n
\r\n
\t\t\t\tabort: function() {\r\n
\t\t\t\t\tif ( callback ) {\r\n
\t\t\t\t\t\tcallback(0,1);\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t};\r\n
\t\t}\r\n
\t});\r\n
}\r\n
\r\n
\r\n
\r\n
\r\n
var elemdisplay = {},\r\n
\tiframe, iframeDoc,\r\n
\trfxtypes = /^(?:toggle|show|hide)$/,\r\n
\trfxnum = /^([+\\-]=)?([\\d+.\\-]+)([a-z%]*)$/i,\r\n
\ttimerId,\r\n
\tfxAttrs = [\r\n
\t\t// height animations\r\n
\t\t[ "height", "marginTop", "marginBottom", "paddingTop", "paddingBottom" ],\r\n
\t\t// width animations\r\n
\t\t[ "width", "marginLeft", "marginRight", "paddingLeft", "paddingRight" ],\r\n
\t\t// opacity animations\r\n
\t\t[ "opacity" ]\r\n
\t],\r\n
\tfxNow;\r\n
\r\n
jQuery.fn.extend({\r\n
\tshow: function( speed, easing, callback ) {\r\n
\t\tvar elem, display;\r\n
\r\n
\t\tif ( speed || speed === 0 ) {\r\n
\t\t\treturn this.animate( genFx("show", 3), speed, easing, callback );\r\n
\r\n
\t\t} else {\r\n
\t\t\tfor ( var i = 0, j = this.length; i < j; i++ ) {\r\n
\t\t\t\telem = this[ i ];\r\n
\r\n
\t\t\t\tif ( elem.style ) {\r\n
\t\t\t\t\tdisplay = elem.style.display;\r\n
\r\n
\t\t\t\t\t// Reset the inline display of this element to learn if it is\r\n
\t\t\t\t\t// being hidden by cascaded rules or not\r\n
\t\t\t\t\tif ( !jQuery._data(elem, "olddisplay") && display === "none" ) {\r\n
\t\t\t\t\t\tdisplay = elem.style.display = "";\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t// Set elements which have been overridden with display: none\r\n
\t\t\t\t\t// in a stylesheet to whatever the default browser style is\r\n
\t\t\t\t\t// for such an element\r\n
\t\t\t\t\tif ( display === "" && jQuery.css(elem, "display") === "none" ) {\r\n
\t\t\t\t\t\tjQuery._data( elem, "olddisplay", defaultDisplay(elem.nodeName) );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Set the display of most of the elements in a second loop\r\n
\t\t\t// to avoid the constant reflow\r\n
\t\t\tfor ( i = 0; i < j; i++ ) {\r\n
\t\t\t\telem = this[ i ];\r\n
\r\n
\t\t\t\tif ( elem.style ) {\r\n
\t\t\t\t\tdisplay = elem.style.display;\r\n
\r\n
\t\t\t\t\tif ( display === "" || display === "none" ) {\r\n
\t\t\t\t\t\telem.style.display = jQuery._data( elem, "olddisplay" ) || "";\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn this;\r\n
\t\t}\r\n
\t},\r\n
\r\n
\thide: function( speed, easing, callback ) {\r\n
\t\tif ( speed || speed === 0 ) {\r\n
\t\t\treturn this.animate( genFx("hide", 3), speed, easing, callback);\r\n
\r\n
\t\t} else {\r\n
\t\t\tvar elem, display,\r\n
\t\t\t\ti = 0,\r\n
\t\t\t\tj = this.length;\r\n
\r\n
\t\t\tfor ( ; i < j; i++ ) {\r\n
\t\t\t\telem = this[i];\r\n
\t\t\t\tif ( elem.style ) {\r\n
\t\t\t\t\tdisplay = jQuery.css( elem, "display" );\r\n
\r\n
\t\t\t\t\tif ( display !== "none" && !jQuery._data( elem, "olddisplay" ) ) {\r\n
\t\t\t\t\t\tjQuery._data( elem, "olddisplay", display );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\t// Set the display of the elements in a second loop\r\n
\t\t\t// to avoid the constant reflow\r\n
\t\t\tfor ( i = 0; i < j; i++ ) {\r\n
\t\t\t\tif ( this[i].style ) {\r\n
\t\t\t\t\tthis[i].style.display = "none";\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn this;\r\n
\t\t}\r\n
\t},\r\n
\r\n
\t// Save the old toggle function\r\n
\t_toggle: jQuery.fn.toggle,\r\n
\r\n
\ttoggle: function( fn, fn2, callback ) {\r\n
\t\tvar bool = typeof fn === "boolean";\r\n
\r\n
\t\tif ( jQuery.isFunction(fn) && jQuery.isFunction(fn2) ) {\r\n
\t\t\tthis._toggle.apply( this, arguments );\r\n
\r\n
\t\t} else if ( fn == null || bool ) {\r\n
\t\t\tthis.each(function() {\r\n
\t\t\t\tvar state = bool ? fn : jQuery(this).is(":hidden");\r\n
\t\t\t\tjQuery(this)[ state ? "show" : "hide" ]();\r\n
\t\t\t});\r\n
\r\n
\t\t} else {\r\n
\t\t\tthis.animate(genFx("toggle", 3), fn, fn2, callback);\r\n
\t\t}\r\n
\r\n
\t\treturn this;\r\n
\t},\r\n
\r\n
\tfadeTo: function( speed, to, easing, callback ) {\r\n
\t\treturn this.filter(":hidden").css("opacity", 0).show().end()\r\n
\t\t\t\t\t.animate({opacity: to}, speed, easing, callback);\r\n
\t},\r\n
\r\n
\tanimate: function( prop, speed, easing, callback ) {\r\n
\t\tvar optall = jQuery.speed( speed, easing, callback );\r\n
\r\n
\t\tif ( jQuery.isEmptyObject( prop ) ) {\r\n
\t\t\treturn this.each( optall.complete, [ false ] );\r\n
\t\t}\r\n
\r\n
\t\t// Do not change referenced properties as per-property easing will be lost\r\n
\t\tprop = jQuery.extend( {}, prop );\r\n
\r\n
\t\tfunction doAnimation() {\r\n
\t\t\t// XXX \'this\' does not always have a nodeName when running the\r\n
\t\t\t// test suite\r\n
\r\n
\t\t\tif ( optall.queue === false ) {\r\n
\t\t\t\tjQuery._mark( this );\r\n
\t\t\t}\r\n
\r\n
\t\t\tvar opt = jQuery.extend( {}, optall ),\r\n
\t\t\t\tisElement = this.nodeType === 1,\r\n
\t\t\t\thidden = isElement && jQuery(this).is(":hidden"),\r\n
\t\t\t\tname, val, p, e,\r\n
\t\t\t\tparts, start, end, unit,\r\n
\t\t\t\tmethod;\r\n
\r\n
\t\t\t// will store per property easing and be used to determine when an animation is complete\r\n
\t\t\topt.animatedProperties = {};\r\n
\r\n
\t\t\tfor ( p in prop ) {\r\n
\r\n
\t\t\t\t// property name normalization\r\n
\t\t\t\tname = jQuery.camelCase( p );\r\n
\t\t\t\tif ( p !== name ) {\r\n
\t\t\t\t\tprop[ name ] = prop[ p ];\r\n
\t\t\t\t\tdelete prop[ p ];\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tval = prop[ name ];\r\n
\r\n
\t\t\t\t// easing resolution: per property > opt.specialEasing > opt.easing > \'swing\' (default)\r\n
\t\t\t\tif ( jQuery.isArray( val ) ) {\r\n
\t\t\t\t\topt.animatedProperties[ name ] = val[ 1 ];\r\n
\t\t\t\t\tval = prop[ name ] = val[ 0 ];\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\topt.animatedProperties[ name ] = opt.specialEasing && opt.specialEasing[ name ] || opt.easing || \'swing\';\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tif ( val === "hide" && hidden || val === "show" && !hidden ) {\r\n
\t\t\t\t\treturn opt.complete.call( this );\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tif ( isElement && ( name === "height" || name === "width" ) ) {\r\n
\t\t\t\t\t// Make sure that nothing sneaks out\r\n
\t\t\t\t\t// Record all 3 overflow attributes because IE does not\r\n
\t\t\t\t\t// change the overflow attribute when overflowX and\r\n
\t\t\t\t\t// overflowY are set to the same value\r\n
\t\t\t\t\topt.overflow = [ this.style.overflow, this.style.overflowX, this.style.overflowY ];\r\n
\r\n
\t\t\t\t\t// Set display property to inline-block for height/width\r\n
\t\t\t\t\t// animations on inline elements that are having width/height animated\r\n
\t\t\t\t\tif ( jQuery.css( this, "display" ) === "inline" &&\r\n
\t\t\t\t\t\t\tjQuery.css( this, "float" ) === "none" ) {\r\n
\r\n
\t\t\t\t\t\t// inline-level elements accept inline-block;\r\n
\t\t\t\t\t\t// block-level elements need to be inline with layout\r\n
\t\t\t\t\t\tif ( !jQuery.support.inlineBlockNeedsLayout || defaultDisplay( this.nodeName ) === "inline" ) {\r\n
\t\t\t\t\t\t\tthis.style.display = "inline-block";\r\n
\r\n
\t\t\t\t\t\t} else {\r\n
\t\t\t\t\t\t\tthis.style.zoom = 1;\r\n
\t\t\t\t\t\t}\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\tif ( opt.overflow != null ) {\r\n
\t\t\t\tthis.style.overflow = "hidden";\r\n
\t\t\t}\r\n
\r\n
\t\t\tfor ( p in prop ) {\r\n
\t\t\t\te = new jQuery.fx( this, opt, p );\r\n
\t\t\t\tval = prop[ p ];\r\n
\r\n
\t\t\t\tif ( rfxtypes.test( val ) ) {\r\n
\r\n
\t\t\t\t\t// Tracks whether to show or hide based on private\r\n
\t\t\t\t\t// data attached to the element\r\n
\t\t\t\t\tmethod = jQuery._data( this, "toggle" + p ) || ( val === "toggle" ? hidden ? "show" : "hide" : 0 );\r\n
\t\t\t\t\tif ( method ) {\r\n
\t\t\t\t\t\tjQuery._data( this, "toggle" + p, method === "show" ? "hide" : "show" );\r\n
\t\t\t\t\t\te[ method ]();\r\n
\t\t\t\t\t} else {\r\n
\t\t\t\t\t\te[ val ]();\r\n
\t\t\t\t\t}\r\n
\r\n
\t\t\t\t} else {\r\n
\t\t\t\t\tparts = rfxnum.exec( val );\r\n
\t\t\t\t\tstart = e.cur();\r\n
\r\n
\t\t\t\t\tif ( parts ) {\r\n
\t\t\t\t\t\tend = parseFloat( parts[2] );\r\n
\t\t\t\t\t\tunit = parts[3] || ( jQuery.cssNumber[ p ] ? "" : "px" );\r\n
\r\n
\t\t\t\t\t\t// We need to compute starting value\r\n
\t\t\t\t\t\tif ( unit !== "px" ) {\r\n
\t\t\t\t\t\t\tjQuery.style( this, p, (end || 1) + unit);\r\n
\t\t\t\t\t\t\tstart = ( (end || 1) / e.cur() ) * start;\r\n
\t\t\t\t\t\t\tjQuery.style( this, p, start + unit);\r\n
\t\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t\t// If a +=/-= token was provided, we\'re doing a relative animation\r\n
\t\t\t\t\t\tif ( parts[1] ) {\r\n
\t\t\t\t\t\t\tend = ( (parts[ 1 ] === "-=" ? -1 : 1) * end ) + start;\r\n
\t\t\t\t\t\t}\r\n
\r\n
\t\t\t\t\t\te.custom( start, end, unit );\r\n
\r\n
\t\t\t\t\t} else {\r\n
\t\t\t\t\t\te.custom( start, val, "" );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\t// For JS strict compliance\r\n
\t\t\treturn true;\r\n
\t\t}\r\n
\r\n
\t\treturn optall.queue === false ?\r\n
\t\t\tthis.each( doAnimation ) :\r\n
\t\t\tthis.queue( optall.queue, doAnimation );\r\n
\t},\r\n
\r\n
\tstop: function( type, clearQueue, gotoEnd ) {\r\n
\t\tif ( typeof type !== "string" ) {\r\n
\t\t\tgotoEnd = clearQueue;\r\n
\t\t\tclearQueue = type;\r\n
\t\t\ttype = undefined;\r\n
\t\t}\r\n
\t\tif ( clearQueue && type !== false ) {\r\n
\t\t\tthis.queue( type || "fx", [] );\r\n
\t\t}\r\n
\r\n
\t\treturn this.each(function() {\r\n
\t\t\tvar index,\r\n
\t\t\t\thadTimers = false,\r\n
\t\t\t\ttimers = jQuery.timers,\r\n
\t\t\t\tdata = jQuery._data( this );\r\n
\r\n
\t\t\t// clear marker counters if we know they won\'t be\r\n
\t\t\tif ( !gotoEnd ) {\r\n
\t\t\t\tjQuery._unmark( true, this );\r\n
\t\t\t}\r\n
\r\n
\t\t\tfunction stopQueue( elem, data, index ) {\r\n
\t\t\t\tvar hooks = data[ index ];\r\n
\t\t\t\tjQuery.removeData( elem, index, true );\r\n
\t\t\t\thooks.stop( gotoEnd );\r\n
\t\t\t}\r\n
\r\n
\t\t\tif ( type == null ) {\r\n
\t\t\t\tfor ( index in data ) {\r\n
\t\t\t\t\tif ( data[ index ] && data[ index ].stop && index.indexOf(".run") === index.length - 4 ) {\r\n
\t\t\t\t\t\tstopQueue( this, data, index );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\t\t\t} else if ( data[ index = type + ".run" ] && data[ index ].stop ){\r\n
\t\t\t\tstopQueue( this, data, index );\r\n
\t\t\t}\r\n
\r\n
\t\t\tfor ( index = timers.length; index--; ) {\r\n
\t\t\t\tif ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {\r\n
\t\t\t\t\tif ( gotoEnd ) {\r\n
\r\n
\t\t\t\t\t\t// force the next step to be the last\r\n
\t\t\t\t\t\ttimers[ index ]( true );\r\n
\t\t\t\t\t} else {\r\n
\t\t\t\t\t\ttimers[ index ].saveState();\r\n
\t\t\t\t\t}\r\n
\t\t\t\t\thadTimers = true;\r\n
\t\t\t\t\ttimers.splice( index, 1 );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\t// start the next in the queue if the last step wasn\'t forced\r\n
\t\t\t// timers currently will call their complete callbacks, which will dequeue\r\n
\t\t\t// but only if they were gotoEnd\r\n
\t\t\tif ( !( gotoEnd && hadTimers ) ) {\r\n
\t\t\t\tjQuery.dequeue( this, type );\r\n
\t\t\t}\r\n
\t\t});\r\n
\t}\r\n
\r\n
});\r\n
\r\n
// Animations created synchronously will run synchronously\r\n
function createFxNow() {\r\n
\tsetTimeout( clearFxNow, 0 );\r\n
\treturn ( fxNow = jQuery.now() );\r\n
}\r\n
\r\n
function clearFxNow() {\r\n
\tfxNow = undefined;\r\n
}\r\n
\r\n
// Generate parameters to create a standard animation\r\n
function genFx( type, num ) {\r\n
\tvar obj = {};\r\n
\r\n
\tjQuery.each( fxAttrs.concat.apply([], fxAttrs.slice( 0, num )), function() {\r\n
\t\tobj[ this ] = type;\r\n
\t});\r\n
\r\n
\treturn obj;\r\n
}\r\n
\r\n
// Generate shortcuts for custom animations\r\n
jQuery.each({\r\n
\tslideDown: genFx( "show", 1 ),\r\n
\tslideUp: genFx( "hide", 1 ),\r\n
\tslideToggle: genFx( "toggle", 1 ),\r\n
\tfadeIn: { opacity: "show" },\r\n
\tfadeOut: { opacity: "hide" },\r\n
\tfadeToggle: { opacity: "toggle" }\r\n
}, function( name, props ) {\r\n
\tjQuery.fn[ name ] = function( speed, easing, callback ) {\r\n
\t\treturn this.animate( props, speed, easing, callback );\r\n
\t};\r\n
});\r\n
\r\n
jQuery.extend({\r\n
\tspeed: function( speed, easing, fn ) {\r\n
\t\tvar opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {\r\n
\t\t\tcomplete: fn || !fn && easing ||\r\n
\t\t\t\tjQuery.isFunction( speed ) && speed,\r\n
\t\t\tduration: speed,\r\n
\t\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\r\n
\t\t};\r\n
\r\n
\t\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :\r\n
\t\t\topt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\r\n
\r\n
\t\t// normalize opt.queue - true/undefined/null -> "fx"\r\n
\t\tif ( opt.queue == null || opt.queue === true ) {\r\n
\t\t\topt.queue = "fx";\r\n
\t\t}\r\n
\r\n
\t\t// Queueing\r\n
\t\topt.old = opt.complete;\r\n
\r\n
\t\topt.complete = function( noUnmark ) {\r\n
\t\t\tif ( jQuery.isFunction( opt.old ) ) {\r\n
\t\t\t\topt.old.call( this );\r\n
\t\t\t}\r\n
\r\n
\t\t\tif ( opt.queue ) {\r\n
\t\t\t\tjQuery.dequeue( this, opt.queue );\r\n
\t\t\t} else if ( noUnmark !== false ) {\r\n
\t\t\t\tjQuery._unmark( this );\r\n
\t\t\t}\r\n
\t\t};\r\n
\r\n
\t\treturn opt;\r\n
\t},\r\n
\r\n
\teasing: {\r\n
\t\tlinear: function( p, n, firstNum, diff ) {\r\n
\t\t\treturn firstNum + diff * p;\r\n
\t\t},\r\n
\t\tswing: function( p, n, firstNum, diff ) {\r\n
\t\t\treturn ( ( -Math.cos( p*Math.PI ) / 2 ) + 0.5 ) * diff + firstNum;\r\n
\t\t}\r\n
\t},\r\n
\r\n
\ttimers: [],\r\n
\r\n
\tfx: function( elem, options, prop ) {\r\n
\t\tthis.options = options;\r\n
\t\tthis.elem = elem;\r\n
\t\tthis.prop = prop;\r\n
\r\n
\t\toptions.orig = options.orig || {};\r\n
\t}\r\n
\r\n
});\r\n
\r\n
jQuery.fx.prototype = {\r\n
\t// Simple function for setting a style value\r\n
\tupdate: function() {\r\n
\t\tif ( this.options.step ) {\r\n
\t\t\tthis.options.step.call( this.elem, this.now, this );\r\n
\t\t}\r\n
\r\n
\t\t( jQuery.fx.step[ this.prop ] || jQuery.fx.step._default )( this );\r\n
\t},\r\n
\r\n
\t// Get the current size\r\n
\tcur: function() {\r\n
\t\tif ( this.elem[ this.prop ] != null && (!this.elem.style || this.elem.style[ this.prop ] == null) ) {\r\n
\t\t\treturn this.elem[ this.prop ];\r\n
\t\t}\r\n
\r\n
\t\tvar parsed,\r\n
\t\t\tr = jQuery.css( this.elem, this.prop );\r\n
\t\t// Empty strings, null, undefined and "auto" are converted to 0,\r\n
\t\t// complex values such as "rotate(1rad)" are returned as is,\r\n
\t\t// simple values such as "10px" are parsed to Float.\r\n
\t\treturn isNaN( parsed = parseFloat( r ) ) ? !r || r === "auto" ? 0 : r : parsed;\r\n
\t},\r\n
\r\n
\t// Start an animation from one number to another\r\n
\tcustom: function( from, to, unit ) {\r\n
\t\tvar self = this,\r\n
\t\t\tfx = jQuery.fx;\r\n
\r\n
\t\tthis.startTime = fxNow || createFxNow();\r\n
\t\tthis.end = to;\r\n
\t\tthis.now = this.start = from;\r\n
\t\tthis.pos = this.state = 0;\r\n
\t\tthis.unit = unit || this.unit || ( jQuery.cssNumber[ this.prop ] ? "" : "px" );\r\n
\r\n
\t\tfunction t( gotoEnd ) {\r\n
\t\t\treturn self.step( gotoEnd );\r\n
\t\t}\r\n
\r\n
\t\tt.queue = this.options.queue;\r\n
\t\tt.elem = this.elem;\r\n
\t\tt.saveState = function() {\r\n
\t\t\tif ( self.options.hide && jQuery._data( self.elem, "fxshow" + self.prop ) === undefined ) {\r\n
\t\t\t\tjQuery._data( self.elem, "fxshow" + self.prop, self.start );\r\n
\t\t\t}\r\n
\t\t};\r\n
\r\n
\t\tif ( t() && jQuery.timers.push(t) && !timerId ) {\r\n
\t\t\ttimerId = setInterval( fx.tick, fx.interval );\r\n
\t\t}\r\n
\t},\r\n
\r\n
\t// Simple \'show\' function\r\n
\tshow: function() {\r\n
\t\tvar dataShow = jQuery._data( this.elem, "fxshow" + this.prop );\r\n
\r\n
\t\t// Remember where we started, so that we can go back to it later\r\n
\t\tthis.options.orig[ this.prop ] = dataShow || jQuery.style( this.elem, this.prop );\r\n
\t\tthis.options.show = true;\r\n
\r\n
\t\t// Begin the animation\r\n
\t\t// Make sure that we start at a small width/height to avoid any flash of content\r\n
\t\tif ( dataShow !== undefined ) {\r\n
\t\t\t// This show is picking up where a previous hide or show left off\r\n
\t\t\tthis.custom( this.cur(), dataShow );\r\n
\t\t} else {\r\n
\t\t\tthis.custom( this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur() );\r\n
\t\t}\r\n
\r\n
\t\t// Start by showing the element\r\n
\t\tjQuery( this.elem ).show();\r\n
\t},\r\n
\r\n
\t// Simple \'hide\' function\r\n
\thide: function() {\r\n
\t\t// Remember where we started, so that we can go back to it later\r\n
\t\tthis.options.orig[ this.prop ] = jQuery._data( this.elem, "fxshow" + this.prop ) || jQuery.style( this.elem, this.prop );\r\n
\t\tthis.options.hide = true;\r\n
\r\n
\t\t// Begin the animation\r\n
\t\tthis.custom( this.cur(), 0 );\r\n
\t},\r\n
\r\n
\t// Each step of an animation\r\n
\tstep: function( gotoEnd ) {\r\n
\t\tvar p, n, complete,\r\n
\t\t\tt = fxNow || createFxNow(),\r\n
\t\t\tdone = true,\r\n
\t\t\telem = this.elem,\r\n
\t\t\toptions = this.options;\r\n
\r\n
\t\tif ( gotoEnd || t >= options.duration + this.startTime ) {\r\n
\t\t\tthis.now = this.end;\r\n
\t\t\tthis.pos = this.state = 1;\r\n
\t\t\tthis.update();\r\n
\r\n
\t\t\toptions.animatedProperties[ this.prop ] = true;\r\n
\r\n
\t\t\tfor ( p in options.animatedProperties ) {\r\n
\t\t\t\tif ( options.animatedProperties[ p ] !== true ) {\r\n
\t\t\t\t\tdone = false;\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\tif ( done ) {\r\n
\t\t\t\t// Reset the overflow\r\n
\t\t\t\tif ( options.overflow != null && !jQuery.support.shrinkWrapBlocks ) {\r\n
\r\n
\t\t\t\t\tjQuery.each( [ "", "X", "Y" ], function( index, value ) {\r\n
\t\t\t\t\t\telem.style[ "overflow" + value ] = options.overflow[ index ];\r\n
\t\t\t\t\t});\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\t// Hide the element if the "hide" operation was done\r\n
\t\t\t\tif ( options.hide ) {\r\n
\t\t\t\t\tjQuery( elem ).hide();\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\t// Reset the properties, if the item has been hidden or shown\r\n
\t\t\t\tif ( options.hide || options.show ) {\r\n
\t\t\t\t\tfor ( p in options.animatedProperties ) {\r\n
\t\t\t\t\t\tjQuery.style( elem, p, options.orig[ p ] );\r\n
\t\t\t\t\t\tjQuery.removeData( elem, "fxshow" + p, true );\r\n
\t\t\t\t\t\t// Toggle data is no longer needed\r\n
\t\t\t\t\t\tjQuery.removeData( elem, "toggle" + p, true );\r\n
\t\t\t\t\t}\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\t// Execute the complete function\r\n
\t\t\t\t// in the event that the complete function throws an exception\r\n
\t\t\t\t// we must ensure it won\'t be called twice. #5684\r\n
\r\n
\t\t\t\tcomplete = options.complete;\r\n
\t\t\t\tif ( complete ) {\r\n
\r\n
\t\t\t\t\toptions.complete = false;\r\n
\t\t\t\t\tcomplete.call( elem );\r\n
\t\t\t\t}\r\n
\t\t\t}\r\n
\r\n
\t\t\treturn false;\r\n
\r\n
\t\t} else {\r\n
\t\t\t// classical easing cannot be used with an Infinity duration\r\n
\t\t\tif ( options.duration == Infinity ) {\r\n
\t\t\t\tthis.now = t;\r\n
\t\t\t} else {\r\n
\t\t\t\tn = t - this.startTime;\r\n
\t\t\t\tthis.state = n / options.duration;\r\n
\r\n
\t\t\t\t// Perform the easing function, defaults to swing\r\n
\t\t\t\tthis.pos = jQuery.easing[ options.animatedProperties[this.prop] ]( this.state, n, 0, 1, options.duration );\r\n
\t\t\t\tthis.now = this.start + ( (this.end - this.start) * this.pos );\r\n
\t\t\t}\r\n
\t\t\t// Perform the next step of the animation\r\n
\t\t\tthis.update();\r\n
\t\t}\r\n
\r\n
\t\treturn true;\r\n
\t}\r\n
};\r\n
\r\n
jQuery.extend( jQuery.fx, {\r\n
\ttick: function() {\r\n
\t\tvar timer,\r\n
\t\t\ttimers = jQuery.timers,\r\n
\t\t\ti = 0;\r\n
\r\n
\t\tfor ( ; i < timers.length; i++ ) {\r\n
\t\t\ttimer = timers[ i ];\r\n
\t\t\t// Checks the timer has not already been removed\r\n
\t\t\tif ( !timer() && timers[ i ] === timer ) {\r\n
\t\t\t\ttimers.splice( i--, 1 );\r\n
\t\t\t}\r\n
\t\t}\r\n
\r\n
\t\tif ( !timers.length ) {\r\n
\t\t\tjQuery.fx.stop();\r\n
\t\t}\r\n
\t},\r\n
\r\n
\tinterval: 13,\r\n
\r\n
\tstop: function() {\r\n
\t\tclearInterval( timerId );\r\n
\t\ttimerId = null;\r\n
\t},\r\n
\r\n
\tspeeds: {\r\n
\t\tslow: 600,\r\n
\t\tfast: 200,\r\n
\t\t// Default speed\r\n
\t\t_default: 400\r\n
\t},\r\n
\r\n
\tstep: {\r\n
\t\topacity: function( fx ) {\r\n
\t\t\tjQuery.style( fx.elem, "opacity", fx.now );\r\n
\t\t},\r\n
\r\n
\t\t_default: function( fx ) {\r\n
\t\t\tif ( fx.elem.style && fx.elem.style[ fx.prop ] != null ) {\r\n
\t\t\t\tfx.elem.style[ fx.prop ] = fx.now + fx.unit;\r\n
\t\t\t} else {\r\n
\t\t\t\tfx.elem[ fx.prop ] = fx.now;\r\n
\t\t\t}\r\n
\t\t}\r\n
\t}\r\n
});\r\n
\r\n
// Adds width/height step functions\r\n
// Do not set anything below 0\r\n
jQuery.each([ "width", "height" ], function( i, prop ) {\r\n
\tjQuery.fx.step[ prop ] = function( fx ) {\r\n
\t\tjQuery.style( fx.elem, prop, Math.max(0, fx.now) + fx.unit );\r\n
\t};\r\n
});\r\n
\r\n
if ( jQuery.expr && jQuery.expr.filters ) {\r\n
\tjQuery.expr.filters.animated = function( elem ) {\r\n
\t\treturn jQuery.grep(jQuery.timers, function( fn ) {\r\n
\t\t\treturn elem === fn.elem;\r\n
\t\t}).length;\r\n
\t};\r\n
}\r\n
\r\n
// Try to restore the default display value of an element\r\n
function defaultDisplay( nodeName ) {\r\n
\r\n
\tif ( !elemdisplay[ nodeName ] ) {\r\n
\r\n
\t\tvar body = document.body,\r\n
\t\t\telem = jQuery( "<" + nodeName + ">" ).appendTo( body ),\r\n
\t\t\tdisplay = elem.css( "display" );\r\n
\t\telem.remove();\r\n
\r\n
\t\t// If the simple way fails,\r\n
\t\t// get element\'s real default display by attaching it to a temp iframe\r\n
\t\tif ( display === "none" || display === "" ) {\r\n
\t\t\t// No iframe to use yet, so create it\r\n
\t\t\tif ( !iframe ) {\r\n
\t\t\t\tiframe = document.createElement( "iframe" );\r\n
\t\t\t\tiframe.frameBorder = iframe.width = iframe.height = 0;\r\n
\t\t\t}\r\n
\r\n
\t\t\tbody.appendChild( iframe );\r\n
\r\n
\t\t\t// Create a cacheable copy of the iframe document on first call.\r\n
\t\t\t// IE and Opera will allow us to reuse the iframeDoc without re-writing the fake HTML\r\n
\t\t\t// document to it; WebKit & Firefox won\'t allow reusing the iframe document.\r\n
\t\t\tif ( !iframeDoc || !iframe.createElement ) {\r\n
\t\t\t\tiframeDoc = ( iframe.contentWindow || iframe.contentDocument ).document;\r\n
\t\t\t\tiframeDoc.write( ( document.compatMode === "CSS1Compat" ? "<!doctype html>" : "" ) + "<html><body>" );\r\n
\t\t\t\tiframeDoc.close();\r\n
\t\t\t}\r\n
\r\n
\t\t\telem = iframeDoc.createElement( nodeName );\r\n
\r\n
\t\t\tiframeDoc.body.appendChild( elem );\r\n
\r\n
\t\t\tdisplay = jQuery.css( elem, "display" );\r\n
\t\t\tbody.removeChild( iframe );\r\n
\t\t}\r\n
\r\n
\t\t// Store the correct default display\r\n
\t\telemdisplay[ nodeName ] = display;\r\n
\t}\r\n
\r\n
\treturn elemdisplay[ nodeName ];\r\n
}\r\n
\r\n
\r\n
\r\n
\r\n
var rtable = /^t(?:able|d|h)$/i,\r\n
\trroot = /^(?:body|html)$/i;\r\n
\r\n
if ( "getBoundingClientRect" in document.documentElement ) {\r\n
\tjQuery.fn.offset = function( options ) {\r\n
\t\tvar elem = this[0], box;\r\n
\r\n
\t\tif ( options ) {\r\n
\t\t\treturn this.each(function( i ) {\r\n
\t\t\t\tjQuery.offset.setOffset( this, options, i );\r\n
\t\t\t});\r\n
\t\t}\r\n
\r\n
\t\tif ( !elem || !elem.ownerDocument ) {\r\n
\t\t\treturn null;\r\n
\t\t}\r\n
\r\n
\t\tif ( elem === elem.ownerDocument.body ) {\r\n
\t\t\treturn jQuery.offset.bodyOffset( elem );\r\n
\t\t}\r\n
\r\n
\t\ttry {\r\n
\t\t\tbox = elem.getBoundingClientRect();\r\n
\t\t} catch(e) {}\r\n
\r\n
\t\tvar doc = elem.ownerDocument,\r\n
\t\t\tdocElem = doc.documentElement;\r\n
\r\n
\t\t// Make sure we\'re not dealing with a disconnected DOM node\r\n
\t\tif ( !box || !jQuery.contains( docElem, elem ) ) {\r\n
\t\t\treturn box ? { top: box.top, left: box.left } : { top: 0, left: 0 };\r\n
\t\t}\r\n
\r\n
\t\tvar body = doc.body,\r\n
\t\t\twin = getWindow(doc),\r\n
\t\t\tclientTop  = docElem.clientTop  || body.clientTop  || 0,\r\n
\t\t\tclientLeft = docElem.clientLeft || body.clientLeft || 0,\r\n
\t\t\tscrollTop  = win.pageYOffset || jQuery.support.boxModel && docElem.scrollTop  || body.scrollTop,\r\n
\t\t\tscrollLeft = win.pageXOffset || jQuery.support.boxModel && docElem.scrollLeft || body.scrollLeft,\r\n
\t\t\ttop  = box.top  + scrollTop  - clientTop,\r\n
\t\t\tleft = box.left + scrollLeft - clientLeft;\r\n
\r\n
\t\treturn { top: top, left: left };\r\n
\t};\r\n
\r\n
} else {\r\n
\tjQuery.fn.offset = function( options ) {\r\n
\t\tvar elem = this[0];\r\n
\r\n
\t\tif ( options ) {\r\n
\t\t\treturn this.each(function( i ) {\r\n
\t\t\t\tjQuery.offset.setOffset( this, options, i );\r\n
\t\t\t});\r\n
\t\t}\r\n
\r\n
\t\tif ( !elem || !elem.ownerDocument ) {\r\n
\t\t\treturn null;\r\n
\t\t}\r\n
\r\n
\t\tif ( elem === elem.ownerDocument.body ) {\r\n
\t\t\treturn jQuery.offset.bodyOffset( elem );\r\n
\t\t}\r\n
\r\n
\t\tvar computedStyle,\r\n
\t\t\toffsetParent = elem.offsetParent,\r\n
\t\t\tprevOffsetParent = elem,\r\n
\t\t\tdoc = elem.ownerDocument,\r\n
\t\t\tdocElem = doc.documentElement,\r\n
\t\t\tbody = doc.body,\r\n
\t\t\tdefaultView = doc.defaultView,\r\n
\t\t\tprevComputedStyle = defaultView ? defaultView.getComputedStyle( elem, null ) : elem.currentStyle,\r\n
\t\t\ttop = elem.offsetTop,\r\n
\t\t\tleft = elem.offsetLeft;\r\n
\r\n
\t\twhile ( (elem = elem.parentNode) && elem !== body && elem !== docElem ) {\r\n
\t\t\tif ( jQuery.support.fixedPosition && prevComputedStyle.position === "fixed" ) {\r\n
\t\t\t\tbreak;\r\n
\t\t\t}\r\n
\r\n
\t\t\tcomputedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle;\r\n
\t\t\ttop  -= elem.scrollTop;\r\n
\t\t\tleft -= elem.scrollLeft;\r\n
\r\n
\t\t\tif ( elem === offsetParent ) {\r\n
\t\t\t\ttop  += elem.offsetTop;\r\n
\t\t\t\tleft += elem.offsetLeft;\r\n
\r\n
\t\t\t\tif ( jQuery.support.doesNotAddBorder && !(jQuery.support.doesAddBorderForTableAndCells && rtable.test(elem.nodeName)) ) {\r\n
\t\t\t\t\ttop  += parseFloat( computedStyle.borderTopWidth  ) || 0;\r\n
\t\t\t\t\tleft += parseFloat( computedStyle.borderLeftWidth ) || 0;\r\n
\t\t\t\t}\r\n
\r\n
\t\t\t\tprevOffsetParent = offsetParent;\r\n
\t\t\t\toffsetParent = elem.offsetParent;\r\n
\t\t\t}\r\n
\r\n
\t\t\tif ( jQuery.support.subtractsBorderForOverflowNotVisible && computedStyle.overflow !== "visible" ) {\r\n
\t\t\t\ttop  += parseFloat( computedStyle.borderTopWidth  ) || 0;\r\n
\t\t\t\tleft += parseFloat( computedStyle.borderLeftWidth ) || 0;\r\n
\t\t\t}\r\n
\r\n
\t\t\tprevComputedStyle = computedStyle;\r\n
\t\t}\r\n
\r\n
\t\tif ( prevComputedStyle.position === "relative" || prevComputedStyle.position === "static" ) {\r\n
\t\t\ttop  += body.offsetTop;\r\n
\t\t\tleft += body.offsetLeft;\r\n
\t\t}\r\n
\r\n
\t\tif ( jQuery.support.fixedPosition && prevComputedStyle.position === "fixed" ) {\r\n
\t\t\ttop  += Math.max( docElem.scrollTop, body.scrollTop );\r\n
\t\t\tleft += Math.max( docElem.scrollLeft, body.scrollLeft );\r\n
\t\t}\r\n
\r\n
\t\treturn { top: top, left: left };\r\n
\t};\r\n
}\r\n
\r\n
jQuery.offset = {\r\n
\r\n
\tbodyOffset: function( body ) {\r\n
\t\tvar top = body.offsetTop,\r\n
\t\t\tleft = body.offsetLeft;\r\n
\r\n
\t\tif ( jQuery.support.doesNotIncludeMarginInBodyOffset ) {\r\n
\t\t\ttop  += parseFloat( jQuery.css(body, "marginTop") ) || 0;\r\n
\t\t\tleft += parseFloat( jQuery.css(body, "marginLeft") ) || 0;\r\n
\t\t}\r\n
\r\n
\t\treturn { top: top, left: left };\r\n
\t},\r\n
\r\n
\tsetOffset: function( elem, options, i ) {\r\n
\t\tvar position = jQuery.css( elem, "position" );\r\n
\r\n
\t\t// set position first, in-case top/left are set even on static elem\r\n
\t\tif ( position === "static" ) {\r\n
\t\t\telem.style.position = "relative";\r\n
\t\t}\r\n
\r\n
\t\tvar curElem = jQuery( elem ),\r\n
\t\t\tcurOffset = curElem.offset(),\r\n
\t\t\tcurCSSTop = jQuery.css( elem, "top" ),\r\n
\t\t\tcurCSSLeft = jQuery.css( elem, "left" ),\r\n
\t\t\tcalculatePosition = ( position === "absolute" || position === "fixed" ) && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1,\r\n
\t\t\tprops = {}, curPosition = {}, curTop, curLeft;\r\n
\r\n
\t\t// need to be able to calculate position if either top or left is auto and position is either absolute or fixed\r\n
\t\tif ( calculatePosition ) {\r\n
\t\t\tcurPosition = curElem.position();\r\n
\t\t\tcurTop = curPosition.top;\r\n
\t\t\tcurLeft = curPosition.left;\r\n
\t\t} else {\r\n
\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\r\n
\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\r\n
\t\t}\r\n
\r\n
\t\tif ( jQuery.isFunction( options ) ) {\r\n
\t\t\toptions = options.call( elem, i, curOffset );\r\n
\t\t}\r\n
\r\n
\t\tif ( options.top != null ) {\r\n
\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\r\n
\t\t}\r\n
\t\tif ( options.left != null ) {\r\n
\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\r\n
\t\t}\r\n
\r\n
\t\tif ( "using" in options ) {\r\n
\t\t\toptions.using.call( elem, props );\r\n
\t\t} else {\r\n
\t\t\tcurElem.css( props );\r\n
\t\t}\r\n
\t}\r\n
};\r\n
\r\n
\r\n
jQuery.fn.extend({\r\n
\r\n
\tposition: function() {\r\n
\t\tif ( !this[0] ) {\r\n
\t\t\treturn null;\r\n
\t\t}\r\n
\r\n
\t\tvar elem = this[0],\r\n
\r\n
\t\t// Get *real* offsetParent\r\n
\t\toffsetParent = this.offsetParent(),\r\n
\r\n
\t\t// Get correct offsets\r\n
\t\toffset       = this.offset(),\r\n
\t\tparentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();\r\n
\r\n
\t\t// Subtract element margins\r\n
\t\t// note: when an element has margin: auto the offsetLeft and marginLeft\r\n
\t\t// are the same in Safari causing offset.left to incorrectly be 0\r\n
\t\toffset.top  -= parseFloat( jQuery.css(elem, "marginTop") ) || 0;\r\n
\t\toffset.left -= parseFloat( jQuery.css(elem, "marginLeft") ) || 0;\r\n
\r\n
\t\t// Add offsetParent borders\r\n
\t\tparentOffset.top  += parseFloat( jQuery.css(offsetParent[0], "borderTopWidth") ) || 0;\r\n
\t\tparentOffset.left += parseFloat( jQuery.css(offsetParent[0], "borderLeftWidth") ) || 0;\r\n
\r\n
\t\t// Subtract the two offsets\r\n
\t\treturn {\r\n
\t\t\ttop:  offset.top  - parentOffset.top,\r\n
\t\t\tleft: offset.left - parentOffset.left\r\n
\t\t};\r\n
\t},\r\n
\r\n
\toffsetParent: function() {\r\n
\t\treturn this.map(function() {\r\n
\t\t\tvar offsetParent = this.offsetParent || document.body;\r\n
\t\t\twhile ( offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, "position") === "static") ) {\r\n
\t\t\t\toffsetParent = offsetParent.offsetParent;\r\n
\t\t\t}\r\n
\t\t\treturn offsetParent;\r\n
\t\t});\r\n
\t}\r\n
});\r\n
\r\n
\r\n
// Create scrollLeft and scrollTop methods\r\n
jQuery.each( ["Left", "Top"], function( i, name ) {\r\n
\tvar method = "scroll" + name;\r\n
\r\n
\tjQuery.fn[ method ] = function( val ) {\r\n
\t\tvar elem, win;\r\n
\r\n
\t\tif ( val === undefined ) {\r\n
\t\t\telem = this[ 0 ];\r\n
\r\n
\t\t\tif ( !elem ) {\r\n
\t\t\t\treturn null;\r\n
\t\t\t}\r\n
\r\n
\t\t\twin = getWindow( elem );\r\n
\r\n
\t\t\t// Return the scroll offset\r\n
\t\t\treturn win ? ("pageXOffset" in win) ? win[ i ? "pageYOffset" : "pageXOffset" ] :\r\n
\t\t\t\tjQuery.support.boxModel && win.document.documentElement[ method ] ||\r\n
\t\t\t\t\twin.document.body[ method ] :\r\n
\t\t\t\telem[ method ];\r\n
\t\t}\r\n
\r\n
\t\t// Set the scroll offset\r\n
\t\treturn this.each(function() {\r\n
\t\t\twin = getWindow( this );\r\n
\r\n
\t\t\tif ( win ) {\r\n
\t\t\t\twin.scrollTo(\r\n
\t\t\t\t\t!i ? val : jQuery( win ).scrollLeft(),\r\n
\t\t\t\t\t i ? val : jQuery( win ).scrollTop()\r\n
\t\t\t\t);\r\n
\r\n
\t\t\t} else {\r\n
\t\t\t\tthis[ method ] = val;\r\n
\t\t\t}\r\n
\t\t});\r\n
\t};\r\n
});\r\n
\r\n
function getWindow( elem ) {\r\n
\treturn jQuery.isWindow( elem ) ?\r\n
\t\telem :\r\n
\t\telem.nodeType === 9 ?\r\n
\t\t\telem.defaultView || elem.parentWindow :\r\n
\t\t\tfalse;\r\n
}\r\n
\r\n
\r\n
\r\n
\r\n
// Create width, height, innerHeight, innerWidth, outerHeight and outerWidth methods\r\n
jQuery.each([ "Height", "Width" ], function( i, name ) {\r\n
\r\n
\tvar type = name.toLowerCase();\r\n
\r\n
\t// innerHeight and innerWidth\r\n
\tjQuery.fn[ "inner" + name ] = function() {\r\n
\t\tvar elem = this[0];\r\n
\t\treturn elem ?\r\n
\t\t\telem.style ?\r\n
\t\t\tparseFloat( jQuery.css( elem, type, "padding" ) ) :\r\n
\t\t\tthis[ type ]() :\r\n
\t\t\tnull;\r\n
\t};\r\n
\r\n
\t// outerHeight and outerWidth\r\n
\tjQuery.fn[ "outer" + name ] = function( margin ) {\r\n
\t\tvar elem = this[0];\r\n
\t\treturn elem ?\r\n
\t\t\telem.style ?\r\n
\t\t\tparseFloat( jQuery.css( elem, type, margin ? "margin" : "border" ) ) :\r\n
\t\t\tthis[ type ]() :\r\n
\t\t\tnull;\r\n
\t};\r\n
\r\n
\tjQuery.fn[ type ] = function( size ) {\r\n
\t\t// Get window width or height\r\n
\t\tvar elem = this[0];\r\n
\t\tif ( !elem ) {\r\n
\t\t\treturn size == null ? null : this;\r\n
\t\t}\r\n
\r\n
\t\tif ( jQuery.isFunction( size ) ) {\r\n
\t\t\treturn this.each(function( i ) {\r\n
\t\t\t\tvar self = jQuery( this );\r\n
\t\t\t\tself[ type ]( size.call( this, i, self[ type ]() ) );\r\n
\t\t\t});\r\n
\t\t}\r\n
\r\n
\t\tif ( jQuery.isWindow( elem ) ) {\r\n
\t\t\t// Everyone else use document.documentElement or document.body depending on Quirks vs Standards mode\r\n
\t\t\t// 3rd condition allows Nokia support, as it supports the docElem prop but not CSS1Compat\r\n
\t\t\tvar docElemProp = elem.document.documentElement[ "client" + name ],\r\n
\t\t\t\tbody = elem.document.body;\r\n
\t\t\treturn elem.document.compatMode === "CSS1Compat" && docElemProp ||\r\n
\t\t\t\tbody && body[ "client" + name ] || docElemProp;\r\n
\r\n
\t\t// Get document width or height\r\n
\t\t} else if ( elem.nodeType === 9 ) {\r\n
\t\t\t// Either scroll[Width/Height] or offset[Width/Height], whichever is greater\r\n
\t\t\treturn Math.max(\r\n
\t\t\t\telem.documentElement["client" + name],\r\n
\t\t\t\telem.body["scroll" + name], elem.documentElement["scroll" + name],\r\n
\t\t\t\telem.body["offset" + name], elem.documentElement["offset" + name]\r\n
\t\t\t);\r\n
\r\n
\t\t// Get or set width or height on the element\r\n
\t\t} else if ( size === undefined ) {\r\n
\t\t\tvar orig = jQuery.css( elem, type ),\r\n
\t\t\t\tret = parseFloat( orig );\r\n
\r\n
\t\t\treturn jQuery.isNumeric( ret ) ? ret : orig;\r\n
\r\n
\t\t// Set the width or height on the element (default to pixels if value is unitless)\r\n
\t\t} else {\r\n
\t\t\treturn this.css( type, typeof size === "string" ? size : size + "px" );\r\n
\t\t}\r\n
\t};\r\n
\r\n
});\r\n
\r\n
\r\n
\r\n
\r\n
// Expose jQuery to the global object\r\n
window.jQuery = window.$ = jQuery;\r\n
\r\n
// Expose jQuery as an AMD module, but only for AMD loaders that\r\n
// understand the issues with loading multiple versions of jQuery\r\n
// in a page that all might call define(). The loader will indicate\r\n
// they have special allowances for multiple jQuery versions by\r\n
// specifying define.amd.jQuery = true. Register as a named module,\r\n
// since jQuery can be concatenated with other files that may use define,\r\n
// but not use a proper concatenation script that understands anonymous\r\n
// AMD modules. A named AMD is safest and most robust way to register.\r\n
// Lowercase jquery is used because AMD module names are derived from\r\n
// file names, and jQuery is normally delivered in a lowercase file name.\r\n
// Do this after creating the global so that if an AMD module wants to call\r\n
// noConflict to hide this version of jQuery, it will work.\r\n
if ( typeof define === "function" && define.amd && define.amd.jQuery ) {\r\n
\tdefine( "jquery", [], function () { return jQuery; } );\r\n
}\r\n
\r\n
\r\n
\r\n
})( window );\r\n
\r\n
var jQuery = window.jQuery;\r\n
var $ = window.$;

]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <none/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
