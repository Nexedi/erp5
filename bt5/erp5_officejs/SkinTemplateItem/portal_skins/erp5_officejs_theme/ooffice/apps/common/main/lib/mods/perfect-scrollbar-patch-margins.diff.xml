<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts44308803.2</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>perfect-scrollbar-patch-margins.diff</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/x-diff</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

diff -r c7981f4f7e09 apps/common/main/lib/mods/perfect-scrollbar.js\n
--- a/apps/common/main/lib/mods/perfect-scrollbar.js\tTue Oct 07 11:32:00 2014 +0400\n
+++ b/apps/common/main/lib/mods/perfect-scrollbar.js\tWed Oct 08 11:37:27 2014 +0400\n
//  Use margins of scrollbarYRail when calculate scrollbarYRail height (scrollbarYRailHeight) and top position\n
@@ -28,7 +28,8 @@\n
     suppressScrollY: false,\n
     scrollXMarginOffset: 0,\n
     scrollYMarginOffset: 0,\n
-    includePadding: false\n
+    includePadding: false,\n
+    includeMargin: true\n
   };\n
 \n
   var getEventClassName = (function () {\n
@@ -97,11 +98,12 @@\n
           scrollbarYHeight,\n
           scrollbarYTop,\n
           scrollbarYRight = parseInt($scrollbarYRail.css(\'right\'), 10),\n
+          scrollbarYRailHeight,\n
           eventClassName = getEventClassName();\n
 \n
       var updateContentScrollTop = function (currentTop, deltaY) {\n
         var newTop = currentTop + deltaY,\n
-            maxTop = containerHeight - scrollbarYHeight;\n
+            maxTop = scrollbarYRailHeight - scrollbarYHeight;\n
 \n
         if (newTop < 0) {\n
           scrollbarYTop = 0;\n
@@ -113,7 +115,7 @@\n
           scrollbarYTop = newTop;\n
         }\n
 \n
-        var scrollTop = parseInt(scrollbarYTop * (contentHeight - containerHeight) / (containerHeight - scrollbarYHeight), 10);\n
+        var scrollTop = parseInt(scrollbarYTop * (contentHeight - containerHeight) / (scrollbarYRailHeight - scrollbarYHeight), 10);\n
         $this.scrollTop(scrollTop);\n
         $scrollbarXRail.css({bottom: scrollbarXBottom - scrollTop});\n
       };\n
@@ -148,9 +150,9 @@\n
         $scrollbarXRail.css({left: $this.scrollLeft(), bottom: scrollbarXBottom - $this.scrollTop(), width: containerWidth, display: scrollbarXActive ? "inherit": "none"});\n
 \n
         if ($scrollbarYRail.hasClass(\'in-scrolling\'))\n
-            $scrollbarYRail.css({/*top: $this.scrollTop(),*/ right: scrollbarYRight - $this.scrollLeft(), height: containerHeight, display: scrollbarYActive ? "inherit": "none"});\n
+            $scrollbarYRail.css({/*top: $this.scrollTop(),*/ right: scrollbarYRight - $this.scrollLeft(), height: scrollbarYRailHeight, display: scrollbarYActive ? "inherit": "none"});\n
         else\n
-            $scrollbarYRail.css({top: $this.scrollTop(), right: scrollbarYRight - $this.scrollLeft(), height: containerHeight, display: scrollbarYActive ? "inherit": "none"});\n
+            $scrollbarYRail.css({top: $this.scrollTop(), right: scrollbarYRight - $this.scrollLeft(), height: scrollbarYRailHeight, display: scrollbarYActive ? "inherit": "none"});\n
 \n
         $scrollbarX.css({left: scrollbarXLeft, width: scrollbarXWidth});\n
         $scrollbarY.css({top: scrollbarYTop, height: scrollbarYHeight});\n
@@ -159,6 +161,7 @@\n
       var updateBarSizeAndPosition = function () {\n
         containerWidth = settings.includePadding ? $this.innerWidth() : $this.width();\n
         containerHeight = settings.includePadding ? $this.innerHeight() : $this.height();\n
+        scrollbarYRailHeight = containerHeight - (settings.includeMargin ? (parseInt($scrollbarYRail.css(\'margin-top\')) + parseInt($scrollbarYRail.css(\'margin-bottom\'))): 0);\n
         contentWidth = $this.prop(\'scrollWidth\');\n
         contentHeight = $this.prop(\'scrollHeight\');\n
 \n
@@ -176,8 +179,8 @@\n
 \n
         if (!settings.suppressScrollY && containerHeight + settings.scrollYMarginOffset < contentHeight) {\n
           scrollbarYActive = true;\n
-          scrollbarYHeight = getSettingsAdjustedThumbSize(parseInt(containerHeight * containerHeight / contentHeight, 10));\n
-          scrollbarYTop = parseInt($this.scrollTop() * (containerHeight - scrollbarYHeight) / (contentHeight - containerHeight), 10);\n
+          scrollbarYHeight = getSettingsAdjustedThumbSize(parseInt(scrollbarYRailHeight * containerHeight / contentHeight, 10));\n
+          scrollbarYTop = parseInt($this.scrollTop() * (scrollbarYRailHeight - scrollbarYHeight) / (contentHeight - containerHeight), 10);\n
         }\n
         else {\n
           scrollbarYActive = false;\n
@@ -186,8 +189,8 @@\n
           $this.scrollTop(0);\n
         }\n
 \n
-        if (scrollbarYTop >= containerHeight - scrollbarYHeight) {\n
-          scrollbarYTop = containerHeight - scrollbarYHeight;\n
+        if (scrollbarYTop >= scrollbarYRailHeight - scrollbarYHeight) {\n
+          scrollbarYTop = scrollbarYRailHeight - scrollbarYHeight;\n
         }\n
         if (scrollbarXLeft >= containerWidth - scrollbarXWidth) {\n
           scrollbarXLeft = containerWidth - scrollbarXWidth;\n
@@ -235,12 +238,12 @@\n
           currentTop = $scrollbarY.position().top;\n
           $scrollbarYRail.addClass(\'in-scrolling\');\n
 \n
-            var padding = parseInt($scrollbarYRail.offsetParent().css(\'padding-top\'));\n
+            var margin = parseInt($scrollbarYRail.css(\'margin-top\'));\n
             var rect = $scrollbarYRail[0].getBoundingClientRect();\n
             $scrollbarYRail.css({\n
                 position: \'fixed\',\n
                 left: rect.left,\n
-                top: rect.top - padding\n
+                top: rect.top - margin\n
             });\n
 \n
           e.stopPropagation();\n
@@ -419,7 +422,7 @@\n
         $scrollbarYRail.bind(\'click\' + eventClassName, function (e) {\n
           var halfOfScrollbarLength = parseInt(scrollbarYHeight / 2, 10),\n
               positionTop = e.pageY - $scrollbarYRail.offset().top - halfOfScrollbarLength,\n
-              maxPositionTop = containerHeight - scrollbarYHeight,\n
+              maxPositionTop = scrollbarYRailHeight - scrollbarYHeight,\n
               positionRatio = positionTop / maxPositionTop;\n
 \n
           if (positionRatio < 0) {\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>5555</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
