<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts44314528.2</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>bootstrap.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/*!\n
 * Bootstrap v3.0.3 (http://getbootstrap.com)\n
 * Copyright 2013 Twitter, Inc.\n
 * Licensed under http://www.apache.org/licenses/LICENSE-2.0\n
 */\n
\n
if (typeof jQuery === "undefined") { throw new Error("Bootstrap requires jQuery") }\n
\n
/* ========================================================================\n
 * Bootstrap: transition.js v3.0.3\n
 * http://getbootstrap.com/javascript/#transitions\n
 * ========================================================================\n
 * Copyright 2013 Twitter, Inc.\n
 *\n
 * Licensed under the Apache License, Version 2.0 (the "License");\n
 * you may not use this file except in compliance with the License.\n
 * You may obtain a copy of the License at\n
 *\n
 * http://www.apache.org/licenses/LICENSE-2.0\n
 *\n
 * Unless required by applicable law or agreed to in writing, software\n
 * distributed under the License is distributed on an "AS IS" BASIS,\n
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
 * See the License for the specific language governing permissions and\n
 * limitations under the License.\n
 * ======================================================================== */\n
\n
\n
+function ($) { "use strict";\n
\n
  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n
  // ============================================================\n
\n
  function transitionEnd() {\n
    var el = document.createElement(\'bootstrap\')\n
\n
    var transEndEventNames = {\n
      \'WebkitTransition\' : \'webkitTransitionEnd\'\n
    , \'MozTransition\'    : \'transitionend\'\n
    , \'OTransition\'      : \'oTransitionEnd otransitionend\'\n
    , \'transition\'       : \'transitionend\'\n
    }\n
\n
    for (var name in transEndEventNames) {\n
      if (el.style[name] !== undefined) {\n
        return { end: transEndEventNames[name] }\n
      }\n
    }\n
  }\n
\n
  // http://blog.alexmaccaw.com/css-transitions\n
  $.fn.emulateTransitionEnd = function (duration) {\n
    var called = false, $el = this\n
    $(this).one($.support.transition.end, function () { called = true })\n
    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n
    setTimeout(callback, duration)\n
    return this\n
  }\n
\n
  $(function () {\n
    $.support.transition = transitionEnd()\n
  })\n
\n
}(jQuery);\n
\n
/* ========================================================================\n
 * Bootstrap: alert.js v3.0.3\n
 * http://getbootstrap.com/javascript/#alerts\n
 * ========================================================================\n
 * Copyright 2013 Twitter, Inc.\n
 *\n
 * Licensed under the Apache License, Version 2.0 (the "License");\n
 * you may not use this file except in compliance with the License.\n
 * You may obtain a copy of the License at\n
 *\n
 * http://www.apache.org/licenses/LICENSE-2.0\n
 *\n
 * Unless required by applicable law or agreed to in writing, software\n
 * distributed under the License is distributed on an "AS IS" BASIS,\n
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
 * See the License for the specific language governing permissions and\n
 * limitations under the License.\n
 * ======================================================================== */\n
\n
\n
+function ($) { "use strict";\n
\n
  // ALERT CLASS DEFINITION\n
  // ======================\n
\n
  var dismiss = \'[data-dismiss="alert"]\'\n
  var Alert   = function (el) {\n
    $(el).on(\'click\', dismiss, this.close)\n
  }\n
\n
  Alert.prototype.close = function (e) {\n
    var $this    = $(this)\n
    var selector = $this.attr(\'data-target\')\n
\n
    if (!selector) {\n
      selector = $this.attr(\'href\')\n
      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, \'\') // strip for ie7\n
    }\n
\n
    var $parent = $(selector)\n
\n
    if (e) e.preventDefault()\n
\n
    if (!$parent.length) {\n
      $parent = $this.hasClass(\'alert\') ? $this : $this.parent()\n
    }\n
\n
    $parent.trigger(e = $.Event(\'close.bs.alert\'))\n
\n
    if (e.isDefaultPrevented()) return\n
\n
    $parent.removeClass(\'in\')\n
\n
    function removeElement() {\n
      $parent.trigger(\'closed.bs.alert\').remove()\n
    }\n
\n
    $.support.transition && $parent.hasClass(\'fade\') ?\n
      $parent\n
        .one($.support.transition.end, removeElement)\n
        .emulateTransitionEnd(150) :\n
      removeElement()\n
  }\n
\n
\n
  // ALERT PLUGIN DEFINITION\n
  // =======================\n
\n
  var old = $.fn.alert\n
\n
  $.fn.alert = function (option) {\n
    return this.each(function () {\n
      var $this = $(this)\n
      var data  = $this.data(\'bs.alert\')\n
\n
      if (!data) $this.data(\'bs.alert\', (data = new Alert(this)))\n
      if (typeof option == \'string\') data[option].call($this)\n
    })\n
  }\n
\n
  $.fn.alert.Constructor = Alert\n
\n
\n
  // ALERT NO CONFLICT\n
  // =================\n
\n
  $.fn.alert.noConflict = function () {\n
    $.fn.alert = old\n
    return this\n
  }\n
\n
\n
  // ALERT DATA-API\n
  // ==============\n
\n
  $(document).on(\'click.bs.alert.data-api\', dismiss, Alert.prototype.close)\n
\n
}(jQuery);\n
\n
/* ========================================================================\n
 * Bootstrap: button.js v3.0.3\n
 * http://getbootstrap.com/javascript/#buttons\n
 * ========================================================================\n
 * Copyright 2013 Twitter, Inc.\n
 *\n
 * Licensed under the Apache License, Version 2.0 (the "License");\n
 * you may not use this file except in compliance with the License.\n
 * You may obtain a copy of the License at\n
 *\n
 * http://www.apache.org/licenses/LICENSE-2.0\n
 *\n
 * Unless required by applicable law or agreed to in writing, software\n
 * distributed under the License is distributed on an "AS IS" BASIS,\n
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
 * See the License for the specific language governing permissions and\n
 * limitations under the License.\n
 * ======================================================================== */\n
\n
\n
+function ($) { "use strict";\n
\n
  // BUTTON PUBLIC CLASS DEFINITION\n
  // ==============================\n
\n
  var Button = function (element, options) {\n
    this.$element = $(element)\n
    this.options  = $.extend({}, Button.DEFAULTS, options)\n
  }\n
\n
  Button.DEFAULTS = {\n
    loadingText: \'loading...\'\n
  }\n
\n
  Button.prototype.setState = function (state) {\n
    var d    = \'disabled\'\n
    var $el  = this.$element\n
    var val  = $el.is(\'input\') ? \'val\' : \'html\'\n
    var data = $el.data()\n
\n
    state = state + \'Text\'\n
\n
    if (!data.resetText) $el.data(\'resetText\', $el[val]())\n
\n
    $el[val](data[state] || this.options[state])\n
\n
    // push to event loop to allow forms to submit\n
    setTimeout(function () {\n
      state == \'loadingText\' ?\n
        $el.addClass(d).attr(d, d) :\n
        $el.removeClass(d).removeAttr(d);\n
    }, 0)\n
  }\n
\n
  Button.prototype.toggle = function () {\n
    var $parent = this.$element.closest(\'[data-toggle="buttons"]\')\n
    var changed = true\n
\n
    if ($parent.length) {\n
      var $input = this.$element.find(\'input\')\n
      if ($input.prop(\'type\') === \'radio\') {\n
        // see if clicking on current one\n
        if ($input.prop(\'checked\') && this.$element.hasClass(\'active\'))\n
          changed = false\n
        else\n
          $parent.find(\'.active\').removeClass(\'active\')\n
      }\n
      if (changed) $input.prop(\'checked\', !this.$element.hasClass(\'active\')).trigger(\'change\')\n
    }\n
\n
    if (changed) this.$element.toggleClass(\'active\')\n
  }\n
\n
\n
  // BUTTON PLUGIN DEFINITION\n
  // ========================\n
\n
  var old = $.fn.button\n
\n
  $.fn.button = function (option) {\n
    return this.each(function () {\n
      var $this   = $(this)\n
      var data    = $this.data(\'bs.button\')\n
      var options = typeof option == \'object\' && option\n
\n
      if (!data) $this.data(\'bs.button\', (data = new Button(this, options)))\n
\n
      if (option == \'toggle\') data.toggle()\n
      else if (option) data.setState(option)\n
    })\n
  }\n
\n
  $.fn.button.Constructor = Button\n
\n
\n
  // BUTTON NO CONFLICT\n
  // ==================\n
\n
  $.fn.button.noConflict = function () {\n
    $.fn.button = old\n
    return this\n
  }\n
\n
\n
  // BUTTON DATA-API\n
  // ===============\n
\n
  $(document).on(\'click.bs.button.data-api\', \'[data-toggle^=button]\', function (e) {\n
    var $btn = $(e.target)\n
    if (!$btn.hasClass(\'btn\')) $btn = $btn.closest(\'.btn\')\n
    $btn.button(\'toggle\')\n
    e.preventDefault()\n
  })\n
\n
}(jQuery);\n
\n
/* ========================================================================\n
 * Bootstrap: carousel.js v3.0.3\n
 * http://getbootstrap.com/javascript/#carousel\n
 * ========================================================================\n
 * Copyright 2013 Twitter, Inc.\n
 *\n
 * Licensed under the Apache License, Version 2.0 (the "License");\n
 * you may not use this file except in compliance with the License.\n
 * You may obtain a copy of the License at\n
 *\n
 * http://www.apache.org/licenses/LICENSE-2.0\n
 *\n
 * Unless required by applicable law or agreed to in writing, software\n
 * distributed under the License is distributed on an "AS IS" BASIS,\n
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
 * See the License for the specific language governing permissions and\n
 * limitations under the License.\n
 * ======================================================================== */\n
\n
\n
+function ($) { "use strict";\n
\n
  // CAROUSEL CLASS DEFINITION\n
  // =========================\n
\n
  var Carousel = function (element, options) {\n
    this.$element    = $(element)\n
    this.$indicators = this.$element.find(\'.carousel-indicators\')\n
    this.options     = options\n
    this.paused      =\n
    this.sliding     =\n
    this.interval    =\n
    this.$active     =\n
    this.$items      = null\n
\n
    this.options.pause == \'hover\' && this.$element\n
      .on(\'mouseenter\', $.proxy(this.pause, this))\n
      .on(\'mouseleave\', $.proxy(this.cycle, this))\n
  }\n
\n
  Carousel.DEFAULTS = {\n
    interval: 5000\n
  , pause: \'hover\'\n
  , wrap: true\n
  }\n
\n
  Carousel.prototype.cycle =  function (e) {\n
    e || (this.paused = false)\n
\n
    this.interval && clearInterval(this.interval)\n
\n
    this.options.interval\n
      && !this.paused\n
      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n
\n
    return this\n
  }\n
\n
  Carousel.prototype.getActiveIndex = function () {\n
    this.$active = this.$element.find(\'.item.active\')\n
    this.$items  = this.$active.parent().children()\n
\n
    return this.$items.index(this.$active)\n
  }\n
\n
  Carousel.prototype.to = function (pos) {\n
    var that        = this\n
    var activeIndex = this.getActiveIndex()\n
\n
    if (pos > (this.$items.length - 1) || pos < 0) return\n
\n
    if (this.sliding)       return this.$element.one(\'slid.bs.carousel\', function () { that.to(pos) })\n
    if (activeIndex == pos) return this.pause().cycle()\n
\n
    return this.slide(pos > activeIndex ? \'next\' : \'prev\', $(this.$items[pos]))\n
  }\n
\n
  Carousel.prototype.pause = function (e) {\n
    e || (this.paused = true)\n
\n
    if (this.$element.find(\'.next, .prev\').length && $.support.transition.end) {\n
      this.$element.trigger($.support.transition.end)\n
      this.cycle(true)\n
    }\n
\n
    this.interval = clearInterval(this.interval)\n
\n
    return this\n
  }\n
\n
  Carousel.prototype.next = function () {\n
    if (this.sliding) return\n
    return this.slide(\'next\')\n
  }\n
\n
  Carousel.prototype.prev = function () {\n
    if (this.sliding) return\n
    return this.slide(\'prev\')\n
  }\n
\n
  Carousel.prototype.slide = function (type, next) {\n
    var $active   = this.$element.find(\'.item.active\')\n
    var $next     = next || $active[type]()\n
    var isCycling = this.interval\n
    var direction = type == \'next\' ? \'left\' : \'right\'\n
    var fallback  = type == \'next\' ? \'first\' : \'last\'\n
    var that      = this\n
\n
    if (!$next.length) {\n
      if (!this.options.wrap) return\n
      $next = this.$element.find(\'.item\')[fallback]()\n
    }\n
\n
    this.sliding = true\n
\n
    isCycling && this.pause()\n
\n
    var e = $.Event(\'slide.bs.carousel\', { relatedTarget: $next[0], direction: direction })\n
\n
    if ($next.hasClass(\'active\')) return\n
\n
    if (this.$indicators.length) {\n
      this.$indicators.find(\'.active\').removeClass(\'active\')\n
      this.$element.one(\'slid.bs.carousel\', function () {\n
        var $nextIndicator = $(that.$indicators.children()[that.getActiveIndex()])\n
        $nextIndicator && $nextIndicator.addClass(\'active\')\n
      })\n
    }\n
\n
    if ($.support.transition && this.$element.hasClass(\'slide\')) {\n
      this.$element.trigger(e)\n
      if (e.isDefaultPrevented()) return\n
      $next.addClass(type)\n
      $next[0].offsetWidth // force reflow\n
      $active.addClass(direction)\n
      $next.addClass(direction)\n
      $active\n
        .one($.support.transition.end, function () {\n
          $next.removeClass([type, direction].join(\' \')).addClass(\'active\')\n
          $active.removeClass([\'active\', direction].join(\' \'))\n
          that.sliding = false\n
          setTimeout(function () { that.$element.trigger(\'slid.bs.carousel\') }, 0)\n
        })\n
        .emulateTransitionEnd(600)\n
    } else {\n
      this.$element.trigger(e)\n
      if (e.isDefaultPrevented()) return\n
      $active.removeClass(\'active\')\n
      $next.addClass(\'active\')\n
      this.sliding = false\n
      this.$element.trigger(\'slid.bs.carousel\')\n
    }\n
\n
    isCycling && this.cycle()\n
\n
    return this\n
  }\n
\n
\n
  // CAROUSEL PLUGIN DEFINITION\n
  // ==========================\n
\n
  var old = $.fn.carousel\n
\n
  $.fn.carousel = function (option) {\n
    return this.each(function () {\n
      var $this   = $(this)\n
      var data    = $this.data(\'bs.carousel\')\n
      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == \'object\' && option)\n
      var action  = typeof option == \'string\' ? option : options.slide\n
\n
      if (!data) $this.data(\'bs.carousel\', (data = new Carousel(this, options)))\n
      if (typeof option == \'number\') data.to(option)\n
      else if (action) data[action]()\n
      else if (options.interval) data.pause().cycle()\n
    })\n
  }\n
\n
  $.fn.carousel.Constructor = Carousel\n
\n
\n
  // CAROUSEL NO CONFLICT\n
  // ====================\n
\n
  $.fn.carousel.noConflict = function () {\n
    $.fn.carousel = old\n
    return this\n
  }\n
\n
\n
  // CAROUSEL DATA-API\n
  // =================\n
\n
  $(document).on(\'click.bs.carousel.data-api\', \'[data-slide], [data-slide-to]\', function (e) {\n
    var $this   = $(this), href\n
    var $target = $($this.attr(\'data-target\') || (href = $this.attr(\'href\')) && href.replace(/.*(?=#[^\\s]+$)/, \'\')) //strip for ie7\n
    var options = $.extend({}, $target.data(), $this.data())\n
    var slideIndex = $this.attr(\'data-slide-to\')\n
    if (slideIndex) options.interval = false\n
\n
    $target.carousel(options)\n
\n
    if (slideIndex = $this.attr(\'data-slide-to\')) {\n
      $target.data(\'bs.carousel\').to(slideIndex)\n
    }\n
\n
    e.preventDefault()\n
  })\n
\n
  $(window).on(\'load\', function () {\n
    $(\'[data-ride="carousel"]\').each(function () {\n
      var $carousel = $(this)\n
      $carousel.carousel($carousel.data())\n
    })\n
  })\n
\n
}(jQuery);\n
\n
/* ========================================================================\n
 * Bootstrap: collapse.js v3.0.3\n
 * http://getbootstrap.com/javascript/#collapse\n
 * ========================================================================\n
 * Copyright 2013 Twitter, Inc.\n
 *\n
 * Licensed under the Apache License, Version 2.0 (the "License");\n
 * you may not use this file except in compliance with the License.\n
 * You may obtain a copy of the License at\n
 *\n
 * http://www.apache.org/licenses/LICENSE-2.0\n
 *\n
 * Unless required by applicable law or agreed to in writing, software\n
 * distributed under the License is distributed on an "AS IS" BASIS,\n
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
 * See the License for the specific language governing permissions and\n
 * limitations under the License.\n
 * ======================================================================== */\n
\n
\n
+function ($) { "use strict";\n
\n
  // COLLAPSE PUBLIC CLASS DEFINITION\n
  // ================================\n
\n
  var Collapse = function (element, options) {\n
    this.$element      = $(element)\n
    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n
    this.transitioning = null\n
\n
    if (this.options.parent) this.$parent = $(this.options.parent)\n
    if (this.options.toggle) this.toggle()\n
  }\n
\n
  Collapse.DEFAULTS = {\n
    toggle: true\n
  }\n
\n
  Collapse.prototype.dimension = function () {\n
    var hasWidth = this.$element.hasClass(\'width\')\n
    return hasWidth ? \'width\' : \'height\'\n
  }\n
\n
  Collapse.prototype.show = function () {\n
    if (this.transitioning || this.$element.hasClass(\'in\')) return\n
\n
    var startEvent = $.Event(\'show.bs.collapse\')\n
    this.$element.trigger(startEvent)\n
    if (startEvent.isDefaultPrevented()) return\n
\n
    var actives = this.$parent && this.$parent.find(\'> .panel > .in\')\n
\n
    if (actives && actives.length) {\n
      var hasData = actives.data(\'bs.collapse\')\n
      if (hasData && hasData.transitioning) return\n
      actives.collapse(\'hide\')\n
      hasData || actives.data(\'bs.collapse\', null)\n
    }\n
\n
    var dimension = this.dimension()\n
\n
    this.$element\n
      .removeClass(\'collapse\')\n
      .addClass(\'collapsing\')\n
      [dimension](0)\n
\n
    this.transitioning = 1\n
\n
    var complete = function () {\n
      this.$element\n
        .removeClass(\'collapsing\')\n
        .addClass(\'in\')\n
        [dimension](\'auto\')\n
      this.transitioning = 0\n
      this.$element.trigger(\'shown.bs.collapse\')\n
    }\n
\n
    if (!$.support.transition) return complete.call(this)\n
\n
    var scrollSize = $.camelCase([\'scroll\', dimension].join(\'-\'))\n
\n
    this.$element\n
      .one($.support.transition.end, $.proxy(complete, this))\n
      .emulateTransitionEnd(350)\n
      [dimension](this.$element[0][scrollSize])\n
  }\n
\n
  Collapse.prototype.hide = function () {\n
    if (this.transitioning || !this.$element.hasClass(\'in\')) return\n
\n
    var startEvent = $.Event(\'hide.bs.collapse\')\n
    this.$element.trigger(startEvent)\n
    if (startEvent.isDefaultPrevented()) return\n
\n
    var dimension = this.dimension()\n
\n
    this.$element\n
      [dimension](this.$element[dimension]())\n
      [0].offsetHeight\n
\n
    this.$element\n
      .addClass(\'collapsing\')\n
      .removeClass(\'collapse\')\n
      .removeClass(\'in\')\n
\n
    this.transitioning = 1\n
\n
    var complete = function () {\n
      this.transitioning = 0\n
      this.$element\n
        .trigger(\'hidden.bs.collapse\')\n
        .removeClass(\'collapsing\')\n
        .addClass(\'collapse\')\n
    }\n
\n
    if (!$.support.transition) return complete.call(this)\n
\n
    this.$element\n
      [dimension](0)\n
      .one($.support.transition.end, $.proxy(complete, this))\n
      .emulateTransitionEnd(350)\n
  }\n
\n
  Collapse.prototype.toggle = function () {\n
    this[this.$element.hasClass(\'in\') ? \'hide\' : \'show\']()\n
  }\n
\n
\n
  // COLLAPSE PLUGIN DEFINITION\n
  // ==========================\n
\n
  var old = $.fn.collapse\n
\n
  $.fn.collapse = function (option) {\n
    return this.each(function () {\n
      var $this   = $(this)\n
      var data    = $this.data(\'bs.collapse\')\n
      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == \'object\' && option)\n
\n
      if (!data) $this.data(\'bs.collapse\', (data = new Collapse(this, options)))\n
      if (typeof option == \'string\') data[option]()\n
    })\n
  }\n
\n
  $.fn.collapse.Constructor = Collapse\n
\n
\n
  // COLLAPSE NO CONFLICT\n
  // ====================\n
\n
  $.fn.collapse.noConflict = function () {\n
    $.fn.collapse = old\n
    return this\n
  }\n
\n
\n
  // COLLAPSE DATA-API\n
  // =================\n
\n
  $(document).on(\'click.bs.collapse.data-api\', \'[data-toggle=collapse]\', function (e) {\n
    var $this   = $(this), href\n
    var target  = $this.attr(\'data-target\')\n
        || e.preventDefault()\n
        || (href = $this.attr(\'href\')) && href.replace(/.*(?=#[^\\s]+$)/, \'\') //strip for ie7\n
    var $target = $(target)\n
    var data    = $target.data(\'bs.collapse\')\n
    var option  = data ? \'toggle\' : $this.data()\n
    var parent  = $this.attr(\'data-parent\')\n
    var $parent = parent && $(parent)\n
\n
    if (!data || !data.transitioning) {\n
      if ($parent) $parent.find(\'[data-toggle=collapse][data-parent="\' + parent + \'"]\').not($this).addClass(\'collapsed\')\n
      $this[$target.hasClass(\'in\') ? \'addClass\' : \'removeClass\'](\'collapsed\')\n
    }\n
\n
    $target.collapse(option)\n
  })\n
\n
}(jQuery);\n
\n
/* ========================================================================\n
 * Bootstrap: dropdown.js v3.0.3\n
 * http://getbootstrap.com/javascript/#dropdowns\n
 * ========================================================================\n
 * Copyright 2013 Twitter, Inc.\n
 *\n
 * Licensed under the Apache License, Version 2.0 (the "License");\n
 * you may not use this file except in compliance with the License.\n
 * You may obtain a copy of the License at\n
 *\n
 * http://www.apache.org/licenses/LICENSE-2.0\n
 *\n
 * Unless required by applicable law or agreed to in writing, software\n
 * distributed under the License is distributed on an "AS IS" BASIS,\n
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
 * See the License for the specific language governing permissions and\n
 * limitations under the License.\n
 * ======================================================================== */\n
\n
\n
+function ($) { "use strict";\n
\n
  // DROPDOWN CLASS DEFINITION\n
  // =========================\n
\n
  var backdrop = \'.dropdown-backdrop\'\n
  var toggle   = \'[data-toggle=dropdown]\'\n
  var Dropdown = function (element) {\n
    $(element).on(\'click.bs.dropdown\', this.toggle)\n
  }\n
\n
  Dropdown.prototype.toggle = function (e) {\n
    var $this = $(this)\n
\n
    if ($this.is(\'.disabled, :disabled\')) return\n
\n
    var $parent  = getParent($this)\n
    var isActive = $parent.hasClass(\'open\')\n
\n
    clearMenus()\n
\n
    if (!isActive) {\n
      if (\'ontouchstart\' in document.documentElement && !$parent.closest(\'.navbar-nav\').length) {\n
        // if mobile we use a backdrop because click events don\'t delegate\n
        $(\'<div class="dropdown-backdrop"/>\').insertAfter($(this)).on(\'click\', clearMenus)\n
      }\n
\n
      $parent.trigger(e = $.Event(\'show.bs.dropdown\'))\n
\n
      if (e.isDefaultPrevented()) return\n
\n
      $parent\n
        .toggleClass(\'open\')\n
        .trigger(\'shown.bs.dropdown\')\n
\n
      $this.focus()\n
    }\n
\n
    return false\n
  }\n
\n
  Dropdown.prototype.keydown = function (e) {\n
    if (!/(38|40|27)/.test(e.keyCode)) return\n
\n
    var $this = $(this)\n
\n
    e.preventDefault()\n
    e.stopPropagation()\n
\n
    if ($this.is(\'.disabled, :disabled\')) return\n
\n
    var $parent  = getParent($this)\n
    var isActive = $parent.hasClass(\'open\')\n
\n
    if (!isActive || (isActive && e.keyCode == 27)) {\n
      if (e.which == 27) $parent.find(toggle).focus()\n
      return $this.click()\n
    }\n
\n
    var $items = $(\'[role=menu] li:not(.divider):visible a\', $parent)\n
\n
    if (!$items.length) return\n
\n
    var index = $items.index($items.filter(\':focus\'))\n
\n
    if (e.keyCode == 38 && index > 0)                 index--                        // up\n
    if (e.keyCode == 40 && index < $items.length - 1) index++                        // down\n
    if (!~index)                                      index=0\n
\n
    $items.eq(index).focus()\n
  }\n
\n
  function clearMenus() {\n
    $(backdrop).remove()\n
    $(toggle).each(function (e) {\n
      var $parent = getParent($(this))\n
      if (!$parent.hasClass(\'open\')) return\n
      $parent.trigger(e = $.Event(\'hide.bs.dropdown\'))\n
      if (e.isDefaultPrevented()) return\n
      $parent.removeClass(\'open\').trigger(\'hidden.bs.dropdown\')\n
    })\n
  }\n
\n
  function getParent($this) {\n
    var selector = $this.attr(\'data-target\')\n
\n
    if (!selector) {\n
      selector = $this.attr(\'href\')\n
      selector = selector && /#/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, \'\') //strip for ie7\n
    }\n
\n
    var $parent = selector && $(selector)\n
\n
    return $parent && $parent.length ? $parent : $this.parent()\n
  }\n
\n
\n
  // DROPDOWN PLUGIN DEFINITION\n
  // ==========================\n
\n
  var old = $.fn.dropdown\n
\n
  $.fn.dropdown = function (option) {\n
    return this.each(function () {\n
      var $this = $(this)\n
      var data  = $this.data(\'bs.dropdown\')\n
\n
      if (!data) $this.data(\'bs.dropdown\', (data = new Dropdown(this)))\n
      if (typeof option == \'string\') data[option].call($this)\n
    })\n
  }\n
\n
  $.fn.dropdown.Constructor = Dropdown\n
\n
\n
  // DROPDOWN NO CONFLICT\n
  // ====================\n
\n
  $.fn.dropdown.noConflict = function () {\n
    $.fn.dropdown = old\n
    return this\n
  }\n
\n
\n
  // APPLY TO STANDARD DROPDOWN ELEMENTS\n
  // ===================================\n
\n
  $(document)\n
    .on(\'click.bs.dropdown.data-api\', clearMenus)\n
    .on(\'click.bs.dropdown.data-api\', \'.dropdown form\', function (e) { e.stopPropagation() })\n
    .on(\'click.bs.dropdown.data-api\'  , toggle, Dropdown.prototype.toggle)\n
    .on(\'keydown.bs.dropdown.data-api\', toggle + \', [role=menu]\' , Dropdown.prototype.keydown)\n
\n
}(jQuery);\n
\n
/* ========================================================================\n
 * Bootstrap: modal.js v3.0.3\n
 * http://getbootstrap.com/javascript/#modals\n
 * ========================================================================\n
 * Copyright 2013 Twitter, Inc.\n
 *\n
 * Licensed under the Apache License, Version 2.0 (the "License");\n
 * you may not use this file except in compliance with the License.\n
 * You may obtain a copy of the License at\n
 *\n
 * http://www.apache.org/licenses/LICENSE-2.0\n
 *\n
 * Unless required by applicable law or agreed to in writing, software\n
 * distributed under the License is distributed on an "AS IS" BASIS,\n
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
 * See the License for the specific language governing permissions and\n
 * limitations under the License.\n
 * ======================================================================== */\n
\n
\n
+function ($) { "use strict";\n
\n
  // MODAL CLASS DEFINITION\n
  // ======================\n
\n
  var Modal = function (element, options) {\n
    this.options   = options\n
    this.$element  = $(element)\n
    this.$backdrop =\n
    this.isShown   = null\n
\n
    if (this.options.remote) this.$element.load(this.options.remote)\n
  }\n
\n
  Modal.DEFAULTS = {\n
      backdrop: true\n
    , keyboard: true\n
    , show: true\n
  }\n
\n
  Modal.prototype.toggle = function (_relatedTarget) {\n
    return this[!this.isShown ? \'show\' : \'hide\'](_relatedTarget)\n
  }\n
\n
  Modal.prototype.show = function (_relatedTarget) {\n
    var that = this\n
    var e    = $.Event(\'show.bs.modal\', { relatedTarget: _relatedTarget })\n
\n
    this.$element.trigger(e)\n
\n
    if (this.isShown || e.isDefaultPrevented()) return\n
\n
    this.isShown = true\n
\n
    this.escape()\n
\n
    this.$element.on(\'click.dismiss.modal\', \'[data-dismiss="modal"]\', $.proxy(this.hide, this))\n
\n
    this.backdrop(function () {\n
      var transition = $.support.transition && that.$element.hasClass(\'fade\')\n
\n
      if (!that.$element.parent().length) {\n
        that.$element.appendTo(document.body) // don\'t move modals dom position\n
      }\n
\n
      that.$element.show()\n
\n
      if (transition) {\n
        that.$element[0].offsetWidth // force reflow\n
      }\n
\n
      that.$element\n
        .addClass(\'in\')\n
        .attr(\'aria-hidden\', false)\n
\n
      that.enforceFocus()\n
\n
      var e = $.Event(\'shown.bs.modal\', { relatedTarget: _relatedTarget })\n
\n
      transition ?\n
        that.$element.find(\'.modal-dialog\') // wait for modal to slide in\n
          .one($.support.transition.end, function () {\n
            that.$element.focus().trigger(e)\n
          })\n
          .emulateTransitionEnd(300) :\n
        that.$element.focus().trigger(e)\n
    })\n
  }\n
\n
  Modal.prototype.hide = function (e) {\n
    if (e) e.preventDefault()\n
\n
    e = $.Event(\'hide.bs.modal\')\n
\n
    this.$element.trigger(e)\n
\n
    if (!this.isShown || e.isDefaultPrevented()) return\n
\n
    this.isShown = false\n
\n
    this.escape()\n
\n
    $(document).off(\'focusin.bs.modal\')\n
\n
    this.$element\n
      .removeClass(\'in\')\n
      .attr(\'aria-hidden\', true)\n
      .off(\'click.dismiss.modal\')\n
\n
    $.support.transition && this.$element.hasClass(\'fade\') ?\n
      this.$element\n
        .one($.support.transition.end, $.proxy(this.hideModal, this))\n
        .emulateTransitionEnd(300) :\n
      this.hideModal()\n
  }\n
\n
  Modal.prototype.enforceFocus = function () {\n
    $(document)\n
      .off(\'focusin.bs.modal\') // guard against infinite focus loop\n
      .on(\'focusin.bs.modal\', $.proxy(function (e) {\n
        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n
          this.$element.focus()\n
        }\n
      }, this))\n
  }\n
\n
  Modal.prototype.escape = function () {\n
    if (this.isShown && this.options.keyboard) {\n
      this.$element.on(\'keyup.dismiss.bs.modal\', $.proxy(function (e) {\n
        e.which == 27 && this.hide()\n
      }, this))\n
    } else if (!this.isShown) {\n
      this.$element.off(\'keyup.dismiss.bs.modal\')\n
    }\n
  }\n
\n
  Modal.prototype.hideModal = function () {\n
    var that = this\n
    this.$element.hide()\n
    this.backdrop(function () {\n
      that.removeBackdrop()\n
      that.$element.trigger(\'hidden.bs.modal\')\n
    })\n
  }\n
\n
  Modal.prototype.removeBackdrop = function () {\n
    this.$backdrop && this.$backdrop.remove()\n
    this.$backdrop = null\n
  }\n
\n
  Modal.prototype.backdrop = function (callback) {\n
    var that    = this\n
    var animate = this.$element.hasClass(\'fade\') ? \'fade\' : \'\'\n
\n
    if (this.isShown && this.options.backdrop) {\n
      var doAnimate = $.support.transition && animate\n
\n
      this.$backdrop = $(\'<div class="modal-backdrop \' + animate + \'" />\')\n
        .appendTo(document.body)\n
\n
      this.$element.on(\'click.dismiss.modal\', $.proxy(function (e) {\n
        if (e.target !== e.currentTarget) return\n
        this.options.backdrop == \'static\'\n
          ? this.$element[0].focus.call(this.$element[0])\n
          : this.hide.call(this)\n
      }, this))\n
\n
      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n
\n
      this.$backdrop.addClass(\'in\')\n
\n
      if (!callback) return\n
\n
      doAnimate ?\n
        this.$backdrop\n
          .one($.support.transition.end, callback)\n
          .emulateTransitionEnd(150) :\n
        callback()\n
\n
    } else if (!this.isShown && this.$backdrop) {\n
      this.$backdrop.removeClass(\'in\')\n
\n
      $.support.transition && this.$element.hasClass(\'fade\')?\n
        this.$backdrop\n
          .one($.support.transition.end, callback)\n
          .emulateTransitionEnd(150) :\n
        callback()\n
\n
    } else if (callback) {\n
      callback()\n
    }\n
  }\n
\n
\n
  // MODAL PLUGIN DEFINITION\n
  // =======================\n
\n
  var old = $.fn.modal\n
\n
  $.fn.modal = function (option, _relatedTarget) {\n
    return this.each(function () {\n
      var $this   = $(this)\n
      var data    = $this.data(\'bs.modal\')\n
      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == \'object\' && option)\n
\n
      if (!data) $this.data(\'bs.modal\', (data = new Modal(this, options)))\n
      if (typeof option == \'string\') data[option](_relatedTarget)\n
      else if (options.show) data.show(_relatedTarget)\n
    })\n
  }\n
\n
  $.fn.modal.Constructor = Modal\n
\n
\n
  // MODAL NO CONFLICT\n
  // =================\n
\n
  $.fn.modal.noConflict = function () {\n
    $.fn.modal = old\n
    return this\n
  }\n
\n
\n
  // MODAL DATA-API\n
  // ==============\n
\n
  $(document).on(\'click.bs.modal.data-api\', \'[data-toggle="modal"]\', function (e) {\n
    var $this   = $(this)\n
    var href    = $this.attr(\'href\')\n
    var $target = $($this.attr(\'data-target\') || (href && href.replace(/.*(?=#[^\\s]+$)/, \'\'))) //strip for ie7\n
    var option  = $target.data(\'modal\') ? \'toggle\' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n
\n
    e.preventDefault()\n
\n
    $target\n
      .modal(option, this)\n
      .one(\'hide\', function () {\n
        $this.is(\':visible\') && $this.focus()\n
      })\n
  })\n
\n
  $(document)\n
    .on(\'show.bs.modal\',  \'.modal\', function () { $(document.body).addClass(\'modal-open\') })\n
    .on(\'hidden.bs.modal\', \'.modal\', function () { $(document.body).removeClass(\'modal-open\') })\n
\n
}(jQuery);\n
\n
/* ========================================================================\n
 * Bootstrap: tooltip.js v3.0.3\n
 * http://getbootstrap.com/javascript/#tooltip\n
 * Inspired by the original jQuery.tipsy by Jason Frame\n
 * ========================================================================\n
 * Copyright 2013 Twitter, Inc.\n
 *\n
 * Licensed under the Apache License, Version 2.0 (the "License");\n
 * you may not use this file except in compliance with the License.\n
 * You may obtain a copy of the License at\n
 *\n
 * http://www.apache.org/licenses/LICENSE-2.0\n
 *\n
 * Unless required by applicable law or agreed to in writing, software\n
 * distributed under the License is distributed on an "AS IS" BASIS,\n
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
 * See the License for the specific language governing permissions and\n
 * limitations under the License.\n
 * ======================================================================== */\n
\n
\n
+function ($) { "use strict";\n
\n
  // TOOLTIP PUBLIC CLASS DEFINITION\n
  // ===============================\n
\n
  var Tooltip = function (element, options) {\n
    this.type       =\n
    this.options    =\n
    this.enabled    =\n
    this.timeout    =\n
    this.hoverState =\n
    this.$element   = null\n
\n
    this.init(\'tooltip\', element, options)\n
  }\n
\n
  Tooltip.DEFAULTS = {\n
    animation: true\n
  , placement: \'top\'\n
  , selector: false\n
  , template: \'<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>\'\n
  , trigger: \'hover focus\'\n
  , title: \'\'\n
  , delay: 0\n
  , html: false\n
  , container: false\n
  }\n
\n
  Tooltip.prototype.init = function (type, element, options) {\n
    this.enabled  = true\n
    this.type     = type\n
    this.$element = $(element)\n
    this.options  = this.getOptions(options)\n
\n
    var triggers = this.options.trigger.split(\' \')\n
\n
    for (var i = triggers.length; i--;) {\n
      var trigger = triggers[i]\n
\n
      if (trigger == \'click\') {\n
        this.$element.on(\'click.\' + this.type, this.options.selector, $.proxy(this.toggle, this))\n
      } else if (trigger != \'manual\') {\n
        var eventIn  = trigger == \'hover\' ? \'mouseenter\' : \'focus\'\n
        var eventOut = trigger == \'hover\' ? \'mouseleave\' : \'blur\'\n
\n
        this.$element.on(eventIn  + \'.\' + this.type, this.options.selector, $.proxy(this.enter, this))\n
        this.$element.on(eventOut + \'.\' + this.type, this.options.selector, $.proxy(this.leave, this))\n
      }\n
    }\n
\n
    this.options.selector ?\n
      (this._options = $.extend({}, this.options, { trigger: \'manual\', selector: \'\' })) :\n
      this.fixTitle()\n
  }\n
\n
  Tooltip.prototype.getDefaults = function () {\n
    return Tooltip.DEFAULTS\n
  }\n
\n
  Tooltip.prototype.getOptions = function (options) {\n
    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n
\n
    if (options.delay && typeof options.delay == \'number\') {\n
      options.delay = {\n
        show: options.delay\n
      , hide: options.delay\n
      }\n
    }\n
\n
    return options\n
  }\n
\n
  Tooltip.prototype.getDelegateOptions = function () {\n
    var options  = {}\n
    var defaults = this.getDefaults()\n
\n
    this._options && $.each(this._options, function (key, value) {\n
      if (defaults[key] != value) options[key] = value\n
    })\n
\n
    return options\n
  }\n
\n
  Tooltip.prototype.enter = function (obj) {\n
    var self = obj instanceof this.constructor ?\n
      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data(\'bs.\' + this.type)\n
\n
    clearTimeout(self.timeout)\n
\n
    self.hoverState = \'in\'\n
\n
    if (!self.options.delay || !self.options.delay.show) return self.show()\n
\n
    self.timeout = setTimeout(function () {\n
      if (self.hoverState == \'in\') self.show()\n
    }, self.options.delay.show)\n
  }\n
\n
  Tooltip.prototype.leave = function (obj) {\n
    var self = obj instanceof this.constructor ?\n
      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data(\'bs.\' + this.type)\n
\n
    clearTimeout(self.timeout)\n
\n
    self.hoverState = \'out\'\n
\n
    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n
\n
    self.timeout = setTimeout(function () {\n
      if (self.hoverState == \'out\') self.hide()\n
    }, self.options.delay.hide)\n
  }\n
\n
  Tooltip.prototype.show = function () {\n
    var e = $.Event(\'show.bs.\'+ this.type)\n
\n
    if (this.hasContent() && this.enabled) {\n
      this.$element.trigger(e)\n
\n
      if (e.isDefaultPrevented()) return\n
\n
      var $tip = this.tip()\n
\n
      this.setContent()\n
\n
      if (this.options.animation) $tip.addClass(\'fade\')\n
\n
      var placement = typeof this.options.placement == \'function\' ?\n
        this.options.placement.call(this, $tip[0], this.$element[0]) :\n
        this.options.placement\n
\n
      var autoToken = /\\s?auto?\\s?/i\n
      var autoPlace = autoToken.test(placement)\n
      if (autoPlace) placement = placement.replace(autoToken, \'\') || \'top\'\n
\n
      $tip\n
        .detach()\n
        .css({ top: 0, left: 0, display: \'block\' })\n
        .addClass(placement)\n
\n
      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n
\n
      var pos          = this.getPosition()\n
      var actualWidth  = $tip[0].offsetWidth\n
      var actualHeight = $tip[0].offsetHeight\n
\n
      if (autoPlace) {\n
        var $parent = this.$element.parent()\n
\n
        var orgPlacement = placement\n
        var docScroll    = document.documentElement.scrollTop || document.body.scrollTop\n
        var parentWidth  = this.options.container == \'body\' ? window.innerWidth  : $parent.outerWidth()\n
        var parentHeight = this.options.container == \'body\' ? window.innerHeight : $parent.outerHeight()\n
        var parentLeft   = this.options.container == \'body\' ? 0 : $parent.offset().left\n
\n
        placement = placement == \'bottom\' && pos.top   + pos.height  + actualHeight - docScroll > parentHeight  ? \'top\'    :\n
                    placement == \'top\'    && pos.top   - docScroll   - actualHeight < 0                         ? \'bottom\' :\n
                    placement == \'right\'  && pos.right + actualWidth > parentWidth                              ? \'left\'   :\n
                    placement == \'left\'   && pos.left  - actualWidth < parentLeft                               ? \'right\'  :\n
                    placement\n
\n
        $tip\n
          .removeClass(orgPlacement)\n
          .addClass(placement)\n
      }\n
\n
      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n
\n
      this.applyPlacement(calculatedOffset, placement)\n
      this.$element.trigger(\'shown.bs.\' + this.type)\n
    }\n
  }\n
\n
  Tooltip.prototype.applyPlacement = function(offset, placement) {\n
    var replace\n
    var $tip   = this.tip()\n
    var width  = $tip[0].offsetWidth\n
    var height = $tip[0].offsetHeight\n
\n
    // manually read margins because getBoundingClientRect includes difference\n
    var marginTop = parseInt($tip.css(\'margin-top\'), 10)\n
    var marginLeft = parseInt($tip.css(\'margin-left\'), 10)\n
\n
    // we must check for NaN for ie 8/9\n
    if (isNaN(marginTop))  marginTop  = 0\n
    if (isNaN(marginLeft)) marginLeft = 0\n
\n
    offset.top  = offset.top  + marginTop\n
    offset.left = offset.left + marginLeft\n
\n
    $tip\n
      .offset(offset)\n
      .addClass(\'in\')\n
\n
    // check to see if placing tip in new offset caused the tip to resize itself\n
    var actualWidth  = $tip[0].offsetWidth\n
    var actualHeight = $tip[0].offsetHeight\n
\n
    if (placement == \'top\' && actualHeight != height) {\n
      replace = true\n
      offset.top = offset.top + height - actualHeight\n
    }\n
\n
    if (/bottom|top/.test(placement)) {\n
      var delta = 0\n
\n
      if (offset.left < 0) {\n
        delta       = offset.left * -2\n
        offset.left = 0\n
\n
        $tip.offset(offset)\n
\n
        actualWidth  = $tip[0].offsetWidth\n
        actualHeight = $tip[0].offsetHeight\n
      }\n
\n
      this.replaceArrow(delta - width + actualWidth, actualWidth, \'left\')\n
    } else {\n
      this.replaceArrow(actualHeight - height, actualHeight, \'top\')\n
    }\n
\n
    if (replace) $tip.offset(offset)\n
  }\n
\n
  Tooltip.prototype.replaceArrow = function(delta, dimension, position) {\n
    this.arrow().css(position, delta ? (50 * (1 - delta / dimension) + "%") : \'\')\n
  }\n
\n
  Tooltip.prototype.setContent = function () {\n
    var $tip  = this.tip()\n
    var title = this.getTitle()\n
\n
    $tip.find(\'.tooltip-inner\')[this.options.html ? \'html\' : \'text\'](title)\n
    $tip.removeClass(\'fade in top bottom left right\')\n
  }\n
\n
  Tooltip.prototype.hide = function () {\n
    var that = this\n
    var $tip = this.tip()\n
    var e    = $.Event(\'hide.bs.\' + this.type)\n
\n
    function complete() {\n
      if (that.hoverState != \'in\') $tip.detach()\n
    }\n
\n
    this.$element.trigger(e)\n
\n
    if (e.isDefaultPrevented()) return\n
\n
    $tip.removeClass(\'in\')\n
\n
    $.support.transition && this.$tip.hasClass(\'fade\') ?\n
      $tip\n
        .one($.support.transition.end, complete)\n
        .emulateTransitionEnd(150) :\n
      complete()\n
\n
    this.$element.trigger(\'hidden.bs.\' + this.type)\n
\n
    return this\n
  }\n
\n
  Tooltip.prototype.fixTitle = function () {\n
    var $e = this.$element\n
    if ($e.attr(\'title\') || typeof($e.attr(\'data-original-title\')) != \'string\') {\n
      $e.attr(\'data-original-title\', $e.attr(\'title\') || \'\').attr(\'title\', \'\')\n
    }\n
  }\n
\n
  Tooltip.prototype.hasContent = function () {\n
    return this.getTitle()\n
  }\n
\n
  Tooltip.prototype.getPosition = function () {\n
    var el = this.$element[0]\n
    return $.extend({}, (typeof el.getBoundingClientRect == \'function\') ? el.getBoundingClientRect() : {\n
      width: el.offsetWidth\n
    , height: el.offsetHeight\n
    }, this.$element.offset())\n
  }\n
\n
  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n
    return placement == \'bottom\' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2  } :\n
           placement == \'top\'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2  } :\n
           placement == \'left\'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n
        /* placement == \'right\' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width   }\n
  }\n
\n
  Tooltip.prototype.getTitle = function () {\n
    var title\n
    var $e = this.$element\n
    var o  = this.options\n
\n
    title = $e.attr(\'data-original-title\')\n
      || (typeof o.title == \'function\' ? o.title.call($e[0]) :  o.title)\n
\n
    return title\n
  }\n
\n
  Tooltip.prototype.tip = function () {\n
    return this.$tip = this.$tip || $(this.options.template)\n
  }\n
\n
  Tooltip.prototype.arrow = function () {\n
    return this.$arrow = this.$arrow || this.tip().find(\'.tooltip-arrow\')\n
  }\n
\n
  Tooltip.prototype.validate = function () {\n
    if (!this.$element[0].parentNode) {\n
      this.hide()\n
      this.$element = null\n
      this.options  = null\n
    }\n
  }\n
\n
  Tooltip.prototype.enable = function () {\n
    this.enabled = true\n
  }\n
\n
  Tooltip.prototype.disable = function () {\n
    this.enabled = false\n
  }\n
\n
  Tooltip.prototype.toggleEnabled = function () {\n
    this.enabled = !this.enabled\n
  }\n
\n
  Tooltip.prototype.toggle = function (e) {\n
    var self = e ? $(e.currentTarget)[this.type](this.getDelegateOptions()).data(\'bs.\' + this.type) : this\n
    self.tip().hasClass(\'in\') ? self.leave(self) : self.enter(self)\n
  }\n
\n
  Tooltip.prototype.destroy = function () {\n
    this.hide().$element.off(\'.\' + this.type).removeData(\'bs.\' + this.type)\n
  }\n
\n
\n
  // TOOLTIP PLUGIN DEFINITION\n
  // =========================\n
\n
  var old = $.fn.tooltip\n
\n
  $.fn.tooltip = function (option) {\n
    return this.each(function () {\n
      var $this   = $(this)\n
      var data    = $this.data(\'bs.tooltip\')\n
      var options = typeof option == \'object\' && option\n
\n
      if (!data) $this.data(\'bs.tooltip\', (data = new Tooltip(this, options)))\n
      if (typeof option == \'string\') data[option]()\n
    })\n
  }\n
\n
  $.fn.tooltip.Constructor = Tooltip\n
\n
\n
  // TOOLTIP NO CONFLICT\n
  // ===================\n
\n
  $.fn.tooltip.noConflict = function () {\n
    $.fn.tooltip = old\n
    return this\n
  }\n
\n
}(jQuery);\n
\n
/* ========================================================================\n
 * Bootstrap: popover.js v3.0.3\n
 * http://getbootstrap.com/javascript/#popovers\n
 * ========================================================================\n
 * Copyright 2013 Twitter, Inc.\n
 *\n
 * Licensed under the Apache License, Version 2.0 (the "License");\n
 * you may not use this file except in compliance with the License.\n
 * You may obtain a copy of the License at\n
 *\n
 * http://www.apache.org/licenses/LICENSE-2.0\n
 *\n
 * Unless required by applicable law or agreed to in writing, software\n
 * distributed under the License is distributed on an "AS IS" BASIS,\n
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
 * See the License for the specific language governing permissions and\n
 * limitations under the License.\n
 * ======================================================================== */\n
\n
\n
+function ($) { "use strict";\n
\n
  // POPOVER PUBLIC CLASS DEFINITION\n
  // ===============================\n
\n
  var Popover = function (element, options) {\n
    this.init(\'popover\', element, options)\n
  }\n
\n
  if (!$.fn.tooltip) throw new Error(\'Popover requires tooltip.js\')\n
\n
  Popover.DEFAULTS = $.extend({} , $.fn.tooltip.Constructor.DEFAULTS, {\n
    placement: \'right\'\n
  , trigger: \'click\'\n
  , content: \'\'\n
  , template: \'<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>\'\n
  })\n
\n
\n
  // NOTE: POPOVER EXTENDS tooltip.js\n
  // ================================\n
\n
  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n
\n
  Popover.prototype.constructor = Popover\n
\n
  Popover.prototype.getDefaults = function () {\n
    return Popover.DEFAULTS\n
  }\n
\n
  Popover.prototype.setContent = function () {\n
    var $tip    = this.tip()\n
    var title   = this.getTitle()\n
    var content = this.getContent()\n
\n
    $tip.find(\'.popover-title\')[this.options.html ? \'html\' : \'text\'](title)\n
    $tip.find(\'.popover-content\')[this.options.html ? \'html\' : \'text\'](content)\n
\n
    $tip.removeClass(\'fade top bottom left right in\')\n
\n
    // IE8 doesn\'t accept hiding via the `:empty` pseudo selector, we have to do\n
    // this manually by checking the contents.\n
    if (!$tip.find(\'.popover-title\').html()) $tip.find(\'.popover-title\').hide()\n
  }\n
\n
  Popover.prototype.hasContent = function () {\n
    return this.getTitle() || this.getContent()\n
  }\n
\n
  Popover.prototype.getContent = function () {\n
    var $e = this.$element\n
    var o  = this.options\n
\n
    return $e.attr(\'data-content\')\n
      || (typeof o.content == \'function\' ?\n
            o.content.call($e[0]) :\n
            o.content)\n
  }\n
\n
  Popover.prototype.arrow = function () {\n
    return this.$arrow = this.$arrow || this.tip().find(\'.arrow\')\n
  }\n
\n
  Popover.prototype.tip = function () {\n
    if (!this.$tip) this.$tip = $(this.options.template)\n
    return this.$tip\n
  }\n
\n
\n
  // POPOVER PLUGIN DEFINITION\n
  // =========================\n
\n
  var old = $.fn.popover\n
\n
  $.fn.popover = function (option) {\n
    return this.each(function () {\n
      var $this   = $(this)\n
      var data    = $this.data(\'bs.popover\')\n
      var options = typeof option == \'object\' && option\n
\n
      if (!data) $this.data(\'bs.popover\', (data = new Popover(this, options)))\n
      if (typeof option == \'string\') data[option]()\n
    })\n
  }\n
\n
  $.fn.popover.Constructor = Popover\n
\n
\n
  // POPOVER NO CONFLICT\n
  // ===================\n
\n
  $.fn.popover.noConflict = function () {\n
    $.fn.popover = old\n
    return this\n
  }\n
\n
}(jQuery);\n
\n
/* ========================================================================\n
 * Bootstrap: scrollspy.js v3.0.3\n
 * http://getbootstrap.com/javascript/#scrollspy\n
 * ========================================================================\n
 * Copyright 2013 Twitter, Inc.\n
 *\n
 * Licensed under the Apache License, Version 2.0 (the "License");\n
 * you may not use this file except in compliance with the License.\n
 * You may obtain a copy of the License at\n
 *\n
 * http://www.apache.org/licenses/LICENSE-2.0\n
 *\n
 * Unless required by applicable law or agreed to in writing, software\n
 * distributed under the License is distributed on an "AS IS" BASIS,\n
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
 * See the License for the specific language governing permissions and\n
 * limitations under the License.\n
 * ======================================================================== */\n
\n
\n
+function ($) { "use strict";\n
\n
  // SCROLLSPY CLASS DEFINITION\n
  // ==========================\n
\n
  function ScrollSpy(element, options) {\n
    var href\n
    var process  = $.proxy(this.process, this)\n
\n
    this.$element       = $(element).is(\'body\') ? $(window) : $(element)\n
    this.$body          = $(\'body\')\n
    this.$scrollElement = this.$element.on(\'scroll.bs.scroll-spy.data-api\', process)\n
    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n
    this.selector       = (this.options.target\n
      || ((href = $(element).attr(\'href\')) && href.replace(/.*(?=#[^\\s]+$)/, \'\')) //strip for ie7\n
      || \'\') + \' .nav li > a\'\n
    this.offsets        = $([])\n
    this.targets        = $([])\n
    this.activeTarget   = null\n
\n
    this.refresh()\n
    this.process()\n
  }\n
\n
  ScrollSpy.DEFAULTS = {\n
    offset: 10\n
  }\n
\n
  ScrollSpy.prototype.refresh = function () {\n
    var offsetMethod = this.$element[0] == window ? \'offset\' : \'position\'\n
\n
    this.offsets = $([])\n
    this.targets = $([])\n
\n
    var self     = this\n
    var $targets = this.$body\n
      .find(this.selector)\n
      .map(function () {\n
        var $el   = $(this)\n
        var href  = $el.data(\'target\') || $el.attr(\'href\')\n
        var $href = /^#\\w/.test(href) && $(href)\n
\n
        return ($href\n
          && $href.length\n
          && [[ $href[offsetMethod]().top + (!$.isWindow(self.$scrollElement.get(0)) && self.$scrollElement.scrollTop()), href ]]) || null\n
      })\n
      .sort(function (a, b) { return a[0] - b[0] })\n
      .each(function () {\n
        self.offsets.push(this[0])\n
        self.targets.push(this[1])\n
      })\n
  }\n
\n
  ScrollSpy.prototype.process = function () {\n
    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n
    var scrollHeight = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight\n
    var maxScroll    = scrollHeight - this.$scrollElement.height()\n
    var offsets      = this.offsets\n
    var targets      = this.targets\n
    var activeTarget = this.activeTarget\n
    var i\n
\n
    if (scrollTop >= maxScroll) {\n
      return activeTarget != (i = targets.last()[0]) && this.activate(i)\n
    }\n
\n
    for (i = offsets.length; i--;) {\n
      activeTarget != targets[i]\n
        && scrollTop >= offsets[i]\n
        && (!offsets[i + 1] || scrollTop <= offsets[i + 1])\n
        && this.activate( targets[i] )\n
    }\n
  }\n
\n
  ScrollSpy.prototype.activate = function (target) {\n
    this.activeTarget = target\n
\n
    $(this.selector)\n
      .parents(\'.active\')\n
      .removeClass(\'active\')\n
\n
    var selector = this.selector\n
      + \'[data-target="\' + target + \'"],\'\n
      + this.selector + \'[href="\' + target + \'"]\'\n
\n
    var active = $(selector)\n
      .parents(\'li\')\n
      .addClass(\'active\')\n
\n
    if (active.parent(\'.dropdown-menu\').length)  {\n
      active = active\n
        .closest(\'li.dropdown\')\n
        .addClass(\'active\')\n
    }\n
\n
    active.trigger(\'activate.bs.scrollspy\')\n
  }\n
\n
\n
  // SCROLLSPY PLUGIN DEFINITION\n
  // ===========================\n
\n
  var old = $.fn.scrollspy\n
\n
  $.fn.scrollspy = function (option) {\n
    return this.each(function () {\n
      var $this   = $(this)\n
      var data    = $this.data(\'bs.scrollspy\')\n
      var options = typeof option == \'object\' && option\n
\n
      if (!data) $this.data(\'bs.scrollspy\', (data = new ScrollSpy(this, options)))\n
      if (typeof option == \'string\') data[option]()\n
    })\n
  }\n
\n
  $.fn.scrollspy.Constructor = ScrollSpy\n
\n
\n
  // SCROLLSPY NO CONFLICT\n
  // =====================\n
\n
  $.fn.scrollspy.noConflict = function () {\n
    $.fn.scrollspy = old\n
    return this\n
  }\n
\n
\n
  // SCROLLSPY DATA-API\n
  // ==================\n
\n
  $(window).on(\'load\', function () {\n
    $(\'[data-spy="scroll"]\').each(function () {\n
      var $spy = $(this)\n
      $spy.scrollspy($spy.data())\n
    })\n
  })\n
\n
}(jQuery);\n
\n
/* ========================================================================\n
 * Bootstrap: tab.js v3.0.3\n
 * http://getbootstrap.com/javascript/#tabs\n
 * ========================================================================\n
 * Copyright 2013 Twitter, Inc.\n
 *\n
 * Licensed under the Apache License, Version 2.0 (the "License");\n
 * you may not use this file except in compliance with the License.\n
 * You may obtain a copy of the License at\n
 *\n
 * http://www.apache.org/licenses/LICENSE-2.0\n
 *\n
 * Unless required by applicable law or agreed to in writing, software\n
 * distributed under the License is distributed on an "AS IS" BASIS,\n
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
 * See the License for the specific language governing permissions and\n
 * limitations under the License.\n
 * ======================================================================== */\n
\n
\n
+function ($) { "use strict";\n
\n
  // TAB CLASS DEFINITION\n
  // ====================\n
\n
  var Tab = function (element) {\n
    this.element = $(element)\n
  }\n
\n
  Tab.prototype.show = function () {\n
    var $this    = this.element\n
    var $ul      = $this.closest(\'ul:not(.dropdown-menu)\')\n
    var selector = $this.data(\'target\')\n
\n
    if (!selector) {\n
      selector = $this.attr(\'href\')\n
      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, \'\') //strip for ie7\n
    }\n
\n
    if ($this.parent(\'li\').hasClass(\'active\')) return\n
\n
    var previous = $ul.find(\'.active:last a\')[0]\n
    var e        = $.Event(\'show.bs.tab\', {\n
      relatedTarget: previous\n
    })\n
\n
    $this.trigger(e)\n
\n
    if (e.isDefaultPrevented()) return\n
\n
    var $target = $(selector)\n
\n
    this.activate($this.parent(\'li\'), $ul)\n
    this.activate($target, $target.parent(), function () {\n
      $this.trigger({\n
        type: \'shown.bs.tab\'\n
      , relatedTarget: previous\n
      })\n
    })\n
  }\n
\n
  Tab.prototype.activate = function (element, container, callback) {\n
    var $active    = container.find(\'> .active\')\n
    var transition = callback\n
      && $.support.transition\n
      && $active.hasClass(\'fade\')\n
\n
    function next() {\n
      $active\n
        .removeClass(\'active\')\n
        .find(\'> .dropdown-menu > .active\')\n
        .removeClass(\'active\')\n
\n
      element.addClass(\'active\')\n
\n
      if (transition) {\n
        element[0].offsetWidth // reflow for transition\n
        element.addClass(\'in\')\n
      } else {\n
        element.removeClass(\'fade\')\n
      }\n
\n
      if (element.parent(\'.dropdown-menu\')) {\n
        element.closest(\'li.dropdown\').addClass(\'active\')\n
      }\n
\n
      callback && callback()\n
    }\n
\n
    transition ?\n
      $active\n
        .one($.support.transition.end, next)\n
        .emulateTransitionEnd(150) :\n
      next()\n
\n
    $active.removeClass(\'in\')\n
  }\n
\n
\n
  // TAB PLUGIN DEFINITION\n
  // =====================\n
\n
  var old = $.fn.tab\n
\n
  $.fn.tab = function ( option ) {\n
    return this.each(function () {\n
      var $this = $(this)\n
      var data  = $this.data(\'bs.tab\')\n
\n
      if (!data) $this.data(\'bs.tab\', (data = new Tab(this)))\n
      if (typeof option == \'string\') data[option]()\n
    })\n
  }\n
\n
  $.fn.tab.Constructor = Tab\n
\n
\n
  // TAB NO CONFLICT\n
  // ===============\n
\n
  $.fn.tab.noConflict = function () {\n
    $.fn.tab = old\n
    return this\n
  }\n
\n
\n
  // TAB DATA-API\n
  // ============\n
\n
  $(document).on(\'click.bs.tab.data-api\', \'[data-toggle="tab"], [data-toggle="pill"]\', function (e) {\n
    e.preventDefault()\n
    $(this).tab(\'show\')\n
  })\n
\n
}(jQuery);\n
\n
/* ========================================================================\n
 * Bootstrap: affix.js v3.0.3\n
 * http://getbootstrap.com/javascript/#affix\n
 * ========================================================================\n
 * Copyright 2013 Twitter, Inc.\n
 *\n
 * Licensed under the Apache License, Version 2.0 (the "License");\n
 * you may not use this file except in compliance with the License.\n
 * You may obtain a copy of the License at\n
 *\n
 * http://www.apache.org/licenses/LICENSE-2.0\n
 *\n
 * Unless required by applicable law or agreed to in writing, software\n
 * distributed under the License is distributed on an "AS IS" BASIS,\n
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
 * See the License for the specific language governing permissions and\n
 * limitations under the License.\n
 * ======================================================================== */\n
\n
\n
+function ($) { "use strict";\n
\n
  // AFFIX CLASS DEFINITION\n
  // ======================\n
\n
  var Affix = function (element, options) {\n
    this.options = $.extend({}, Affix.DEFAULTS, options)\n
    this.$window = $(window)\n
      .on(\'scroll.bs.affix.data-api\', $.proxy(this.checkPosition, this))\n
      .on(\'click.bs.affix.data-api\',  $.proxy(this.checkPositionWithEventLoop, this))\n
\n
    this.$element = $(element)\n
    this.affixed  =\n
    this.unpin    = null\n
\n
    this.checkPosition()\n
  }\n
\n
  Affix.RESET = \'affix affix-top affix-bottom\'\n
\n
  Affix.DEFAULTS = {\n
    offset: 0\n
  }\n
\n
  Affix.prototype.checkPositionWithEventLoop = function () {\n
    setTimeout($.proxy(this.checkPosition, this), 1)\n
  }\n
\n
  Affix.prototype.checkPosition = function () {\n
    if (!this.$element.is(\':visible\')) return\n
\n
    var scrollHeight = $(document).height()\n
    var scrollTop    = this.$window.scrollTop()\n
    var position     = this.$element.offset()\n
    var offset       = this.options.offset\n
    var offsetTop    = offset.top\n
    var offsetBottom = offset.bottom\n
\n
    if (typeof offset != \'object\')         offsetBottom = offsetTop = offset\n
    if (typeof offsetTop == \'function\')    offsetTop    = offset.top()\n
    if (typeof offsetBottom == \'function\') offsetBottom = offset.bottom()\n
\n
    var affix = this.unpin   != null && (scrollTop + this.unpin <= position.top) ? false :\n
                offsetBottom != null && (position.top + this.$element.height() >= scrollHeight - offsetBottom) ? \'bottom\' :\n
                offsetTop    != null && (scrollTop <= offsetTop) ? \'top\' : false\n
\n
    if (this.affixed === affix) return\n
    if (this.unpin) this.$element.css(\'top\', \'\')\n
\n
    this.affixed = affix\n
    this.unpin   = affix == \'bottom\' ? position.top - scrollTop : null\n
\n
    this.$element.removeClass(Affix.RESET).addClass(\'affix\' + (affix ? \'-\' + affix : \'\'))\n
\n
    if (affix == \'bottom\') {\n
      this.$element.offset({ top: document.body.offsetHeight - offsetBottom - this.$element.height() })\n
    }\n
  }\n
\n
\n
  // AFFIX PLUGIN DEFINITION\n
  // =======================\n
\n
  var old = $.fn.affix\n
\n
  $.fn.affix = function (option) {\n
    return this.each(function () {\n
      var $this   = $(this)\n
      var data    = $this.data(\'bs.affix\')\n
      var options = typeof option == \'object\' && option\n
\n
      if (!data) $this.data(\'bs.affix\', (data = new Affix(this, options)))\n
      if (typeof option == \'string\') data[option]()\n
    })\n
  }\n
\n
  $.fn.affix.Constructor = Affix\n
\n
\n
  // AFFIX NO CONFLICT\n
  // =================\n
\n
  $.fn.affix.noConflict = function () {\n
    $.fn.affix = old\n
    return this\n
  }\n
\n
\n
  // AFFIX DATA-API\n
  // ==============\n
\n
  $(window).on(\'load\', function () {\n
    $(\'[data-spy="affix"]\').each(function () {\n
      var $spy = $(this)\n
      var data = $spy.data()\n
\n
      data.offset = data.offset || {}\n
\n
      if (data.offsetBottom) data.offset.bottom = data.offsetBottom\n
      if (data.offsetTop)    data.offset.top    = data.offsetTop\n
\n
      $spy.affix(data)\n
    })\n
  })\n
\n
}(jQuery);\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>58533</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
