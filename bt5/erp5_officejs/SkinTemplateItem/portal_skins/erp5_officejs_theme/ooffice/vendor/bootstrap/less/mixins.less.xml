<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts44314531.21</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>mixins.less</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/octet-stream</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

//\n
// Mixins\n
// --------------------------------------------------\n
\n
\n
// Utilities\n
// -------------------------\n
\n
// Clearfix\n
// Source: http://nicolasgallagher.com/micro-clearfix-hack/\n
//\n
// For modern browsers\n
// 1. The space content is one way to avoid an Opera bug when the\n
//    contenteditable attribute is included anywhere else in the document.\n
//    Otherwise it causes space to appear at the top and bottom of elements\n
//    that are clearfixed.\n
// 2. The use of `table` rather than `block` is only necessary if using\n
//    `:before` to contain the top-margins of child elements.\n
.clearfix() {\n
  &:before,\n
  &:after {\n
    content: " "; // 1\n
    display: table; // 2\n
  }\n
  &:after {\n
    clear: both;\n
  }\n
}\n
\n
// WebKit-style focus\n
.tab-focus() {\n
  // Default\n
  outline: thin dotted;\n
  // WebKit\n
  outline: 5px auto -webkit-focus-ring-color;\n
  outline-offset: -2px;\n
}\n
\n
// Center-align a block level element\n
.center-block() {\n
  display: block;\n
  margin-left: auto;\n
  margin-right: auto;\n
}\n
\n
// Sizing shortcuts\n
.size(@width; @height) {\n
  width: @width;\n
  height: @height;\n
}\n
.square(@size) {\n
  .size(@size; @size);\n
}\n
\n
// Placeholder text\n
.placeholder(@color: @input-color-placeholder) {\n
  &:-moz-placeholder            { color: @color; } // Firefox 4-18\n
  &::-moz-placeholder           { color: @color;   // Firefox 19+\n
                                  opacity: 1; } // See https://github.com/twbs/bootstrap/pull/11526\n
  &:-ms-input-placeholder       { color: @color; } // Internet Explorer 10+\n
  &::-webkit-input-placeholder  { color: @color; } // Safari and Chrome\n
}\n
\n
// Text overflow\n
// Requires inline-block or block for proper styling\n
.text-overflow() {\n
  overflow: hidden;\n
  text-overflow: ellipsis;\n
  white-space: nowrap;\n
}\n
\n
// CSS image replacement\n
//\n
// Heads up! v3 launched with with only `.hide-text()`, but per our pattern for\n
// mixins being reused as classes with the same name, this doesn\'t hold up. As\n
// of v3.0.1 we have added `.text-hide()` and deprecated `.hide-text()`. Note\n
// that we cannot chain the mixins together in Less, so they are repeated.\n
//\n
// Source: https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757\n
\n
// Deprecated as of v3.0.1 (will be removed in v4)\n
.hide-text() {\n
  font: ~"0/0" a;\n
  color: transparent;\n
  text-shadow: none;\n
  background-color: transparent;\n
  border: 0;\n
}\n
// New mixin to use as of v3.0.1\n
.text-hide() {\n
  .hide-text();\n
}\n
\n
\n
\n
// CSS3 PROPERTIES\n
// --------------------------------------------------\n
\n
// Single side border-radius\n
.border-top-radius(@radius) {\n
  border-top-right-radius: @radius;\n
   border-top-left-radius: @radius;\n
}\n
.border-right-radius(@radius) {\n
  border-bottom-right-radius: @radius;\n
     border-top-right-radius: @radius;\n
}\n
.border-bottom-radius(@radius) {\n
  border-bottom-right-radius: @radius;\n
   border-bottom-left-radius: @radius;\n
}\n
.border-left-radius(@radius) {\n
  border-bottom-left-radius: @radius;\n
     border-top-left-radius: @radius;\n
}\n
\n
// Drop shadows\n
.box-shadow(@shadow) {\n
  -webkit-box-shadow: @shadow; // iOS <4.3 & Android <4.1\n
          box-shadow: @shadow;\n
}\n
\n
// Transitions\n
.transition(@transition) {\n
  -webkit-transition: @transition;\n
          transition: @transition;\n
}\n
.transition-property(@transition-property) {\n
  -webkit-transition-property: @transition-property;\n
          transition-property: @transition-property;\n
}\n
.transition-delay(@transition-delay) {\n
  -webkit-transition-delay: @transition-delay;\n
          transition-delay: @transition-delay;\n
}\n
.transition-duration(@transition-duration) {\n
  -webkit-transition-duration: @transition-duration;\n
          transition-duration: @transition-duration;\n
}\n
.transition-transform(@transition) {\n
  -webkit-transition: -webkit-transform @transition;\n
     -moz-transition: -moz-transform @transition;\n
       -o-transition: -o-transform @transition;\n
          transition: transform @transition;\n
}\n
\n
// Transformations\n
.rotate(@degrees) {\n
  -webkit-transform: rotate(@degrees);\n
      -ms-transform: rotate(@degrees); // IE9+\n
          transform: rotate(@degrees);\n
}\n
.scale(@ratio) {\n
  -webkit-transform: scale(@ratio);\n
      -ms-transform: scale(@ratio); // IE9+\n
          transform: scale(@ratio);\n
}\n
.translate(@x; @y) {\n
  -webkit-transform: translate(@x, @y);\n
      -ms-transform: translate(@x, @y); // IE9+\n
          transform: translate(@x, @y);\n
}\n
.skew(@x; @y) {\n
  -webkit-transform: skew(@x, @y);\n
      -ms-transform: skewX(@x) skewY(@y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+\n
          transform: skew(@x, @y);\n
}\n
.translate3d(@x; @y; @z) {\n
  -webkit-transform: translate3d(@x, @y, @z);\n
          transform: translate3d(@x, @y, @z);\n
}\n
\n
.rotateX(@degrees) {\n
  -webkit-transform: rotateX(@degrees);\n
      -ms-transform: rotateX(@degrees); // IE9+\n
          transform: rotateX(@degrees);\n
}\n
.rotateY(@degrees) {\n
  -webkit-transform: rotateY(@degrees);\n
      -ms-transform: rotateY(@degrees); // IE9+\n
          transform: rotateY(@degrees);\n
}\n
.perspective(@perspective) {\n
  -webkit-perspective: @perspective;\n
     -moz-perspective: @perspective;\n
          perspective: @perspective;\n
}\n
.perspective-origin(@perspective) {\n
  -webkit-perspective-origin: @perspective;\n
     -moz-perspective-origin: @perspective;\n
          perspective-origin: @perspective;\n
}\n
.transform-origin(@origin) {\n
  -webkit-transform-origin: @origin;\n
     -moz-transform-origin: @origin;\n
          transform-origin: @origin;\n
}\n
\n
// Animations\n
.animation(@animation) {\n
  -webkit-animation: @animation;\n
          animation: @animation;\n
}\n
\n
// Backface visibility\n
// Prevent browsers from flickering when using CSS 3D transforms.\n
// Default value is `visible`, but can be changed to `hidden`\n
.backface-visibility(@visibility){\n
  -webkit-backface-visibility: @visibility;\n
     -moz-backface-visibility: @visibility;\n
          backface-visibility: @visibility;\n
}\n
\n
// Box sizing\n
.box-sizing(@boxmodel) {\n
  -webkit-box-sizing: @boxmodel;\n
     -moz-box-sizing: @boxmodel;\n
          box-sizing: @boxmodel;\n
}\n
\n
// User select\n
// For selecting text on the page\n
.user-select(@select) {\n
  -webkit-user-select: @select;\n
     -moz-user-select: @select;\n
      -ms-user-select: @select; // IE10+\n
       -o-user-select: @select;\n
          user-select: @select;\n
}\n
\n
// Resize anything\n
.resizable(@direction) {\n
  resize: @direction; // Options: horizontal, vertical, both\n
  overflow: auto; // Safari fix\n
}\n
\n
// CSS3 Content Columns\n
.content-columns(@column-count; @column-gap: @grid-gutter-width) {\n
  -webkit-column-count: @column-count;\n
     -moz-column-count: @column-count;\n
          column-count: @column-count;\n
  -webkit-column-gap: @column-gap;\n
     -moz-column-gap: @column-gap;\n
          column-gap: @column-gap;\n
}\n
\n
// Optional hyphenation\n
.hyphens(@mode: auto) {\n
  word-wrap: break-word;\n
  -webkit-hyphens: @mode;\n
     -moz-hyphens: @mode;\n
      -ms-hyphens: @mode; // IE10+\n
       -o-hyphens: @mode;\n
          hyphens: @mode;\n
}\n
\n
// Opacity\n
.opacity(@opacity) {\n
  opacity: @opacity;\n
  // IE8 filter\n
  @opacity-ie: (@opacity * 100);\n
  filter: ~"alpha(opacity=@{opacity-ie})";\n
}\n
\n
\n
\n
// GRADIENTS\n
// --------------------------------------------------\n
\n
#gradient {\n
\n
  // Horizontal gradient, from left to right\n
  //\n
  // Creates two color stops, start and end, by specifying a color and position for each color stop.\n
  // Color stops are not available in IE9 and below.\n
  .horizontal(@start-color: #555; @end-color: #333; @start-percent: 0%; @end-percent: 100%) {\n
    background-image: -webkit-linear-gradient(left, color-stop(@start-color @start-percent), color-stop(@end-color @end-percent)); // Safari 5.1-6, Chrome 10+\n
    background-image:  linear-gradient(to right, @start-color @start-percent, @end-color @end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+\n
    background-repeat: repeat-x;\n
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr=\'%d\', endColorstr=\'%d\', GradientType=1)",argb(@start-color),argb(@end-color))); // IE9 and down\n
  }\n
\n
  // Vertical gradient, from top to bottom\n
  //\n
  // Creates two color stops, start and end, by specifying a color and position for each color stop.\n
  // Color stops are not available in IE9 and below.\n
  .vertical(@start-color: #555; @end-color: #333; @start-percent: 0%; @end-percent: 100%) {\n
    background-image: -webkit-linear-gradient(top, @start-color @start-percent, @end-color @end-percent);  // Safari 5.1-6, Chrome 10+\n
    background-image: linear-gradient(to bottom, @start-color @start-percent, @end-color @end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+\n
    background-repeat: repeat-x;\n
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr=\'%d\', endColorstr=\'%d\', GradientType=0)",argb(@start-color),argb(@end-color))); // IE9 and down\n
  }\n
\n
  .directional(@start-color: #555; @end-color: #333; @deg: 45deg) {\n
    background-repeat: repeat-x;\n
    background-image: -webkit-linear-gradient(@deg, @start-color, @end-color); // Safari 5.1-6, Chrome 10+\n
    background-image: linear-gradient(@deg, @start-color, @end-color); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+\n
  }\n
  .horizontal-three-colors(@start-color: #00b3ee; @mid-color: #7a43b6; @color-stop: 50%; @end-color: #c3325f) {\n
    background-image: -webkit-linear-gradient(left, @start-color, @mid-color @color-stop, @end-color);\n
    background-image: linear-gradient(to right, @start-color, @mid-color @color-stop, @end-color);\n
    background-repeat: no-repeat;\n
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr=\'%d\', endColorstr=\'%d\', GradientType=1)",argb(@start-color),argb(@end-color))); // IE9 and down, gets no color-stop at all for proper fallback\n
  }\n
  .vertical-three-colors(@start-color: #00b3ee; @mid-color: #7a43b6; @color-stop: 50%; @end-color: #c3325f) {\n
    background-image: -webkit-linear-gradient(@start-color, @mid-color @color-stop, @end-color);\n
    background-image: linear-gradient(@start-color, @mid-color @color-stop, @end-color);\n
    background-repeat: no-repeat;\n
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr=\'%d\', endColorstr=\'%d\', GradientType=0)",argb(@start-color),argb(@end-color))); // IE9 and down, gets no color-stop at all for proper fallback\n
  }\n
  .radial(@inner-color: #555; @outer-color: #333) {\n
    background-image: -webkit-radial-gradient(circle, @inner-color, @outer-color);\n
    background-image: radial-gradient(circle, @inner-color, @outer-color);\n
    background-repeat: no-repeat;\n
  }\n
  .striped(@color: rgba(255,255,255,.15); @angle: 45deg) {\n
    background-image: -webkit-linear-gradient(@angle, @color 25%, transparent 25%, transparent 50%, @color 50%, @color 75%, transparent 75%, transparent);\n
    background-image: linear-gradient(@angle, @color 25%, transparent 25%, transparent 50%, @color 50%, @color 75%, transparent 75%, transparent);\n
  }\n
}\n
\n
// Reset filters for IE\n
//\n
// When you need to remove a gradient background, do not forget to use this to reset\n
// the IE filter for IE9 and below.\n
.reset-filter() {\n
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(enabled = false)"));\n
}\n
\n
\n
\n
// Retina images\n
//\n
// Short retina mixin for setting background-image and -size\n
\n
.img-retina(@file-1x; @file-2x; @width-1x; @height-1x) {\n
  background-image: url("@{file-1x}");\n
\n
  @media\n
  only screen and (-webkit-min-device-pixel-ratio: 2),\n
  only screen and (   min--moz-device-pixel-ratio: 2),\n
  only screen and (     -o-min-device-pixel-ratio: 2/1),\n
  only screen and (        min-device-pixel-ratio: 2),\n
  only screen and (                min-resolution: 192dpi),\n
  only screen and (                min-resolution: 2dppx) {\n
    background-image: url("@{file-2x}");\n
    background-size: @width-1x @height-1x;\n
  }\n
}\n
\n
\n
// Responsive image\n
//\n
// Keep images from scaling beyond the width of their parents.\n
\n
.img-responsive(@display: block;) {\n
  display: @display;\n
  max-width: 100%; // Part 1: Set a maximum relative to the parent\n
  height: auto; // Part 2: Scale the height according to the width, otherwise you get stretching\n
}\n
\n
\n
// COMPONENT MIXINS\n
// --------------------------------------------------\n
\n
// Horizontal dividers\n
// -------------------------\n
// Dividers (basically an hr) within dropdowns and nav lists\n
.nav-divider(@color: #e5e5e5) {\n
  height: 1px;\n
  margin: ((@line-height-computed / 2) - 1) 0;\n
  overflow: hidden;\n
  background-color: @color;\n
}\n
\n
// Panels\n
// -------------------------\n
.panel-variant(@border; @heading-text-color; @heading-bg-color; @heading-border) {\n
  border-color: @border;\n
\n
  & > .panel-heading {\n
    color: @heading-text-color;\n
    background-color: @heading-bg-color;\n
    border-color: @heading-border;\n
\n
    + .panel-collapse .panel-body {\n
      border-top-color: @border;\n
    }\n
  }\n
  & > .panel-footer {\n
    + .panel-collapse .panel-body {\n
      border-bottom-color: @border;\n
    }\n
  }\n
}\n
\n
// Alerts\n
// -------------------------\n
.alert-variant(@background; @border; @text-color) {\n
  background-color: @background;\n
  border-color: @border;\n
  color: @text-color;\n
\n
  hr {\n
    border-top-color: darken(@border, 5%);\n
  }\n
  .alert-link {\n
    color: darken(@text-color, 10%);\n
  }\n
}\n
\n
// Tables\n
// -------------------------\n
.table-row-variant(@state; @background) {\n
  // Exact selectors below required to override `.table-striped` and prevent\n
  // inheritance to nested tables.\n
  .table {\n
    > thead,\n
    > tbody,\n
    > tfoot {\n
      > tr > .@{state},\n
      > .@{state} > td,\n
      > .@{state} > th {\n
        background-color: @background;\n
      }\n
    }\n
  }\n
\n
  // Hover states for `.table-hover`\n
  // Note: this is not available for cells or rows within `thead` or `tfoot`.\n
  .table-hover > tbody {\n
    > tr > .@{state}:hover,\n
    > .@{state}:hover > td,\n
    > .@{state}:hover > th {\n
      background-color: darken(@background, 5%);\n
    }\n
  }\n
}\n
\n
// Button variants\n
// -------------------------\n
// Easily pump out default styles, as well as :hover, :focus, :active,\n
// and disabled options for all buttons\n
.button-variant(@color; @background; @border) {\n
  color: @color;\n
  background-color: @background;\n
  border-color: @border;\n
\n
  &:hover,\n
  &:focus,\n
  &:active,\n
  &.active,\n
  .open .dropdown-toggle& {\n
    color: @color;\n
    background-color: darken(@background, 8%);\n
        border-color: darken(@border, 12%);\n
  }\n
  &:active,\n
  &.active,\n
  .open .dropdown-toggle& {\n
    background-image: none;\n
  }\n
  &.disabled,\n
  &[disabled],\n
  fieldset[disabled] & {\n
    &,\n
    &:hover,\n
    &:focus,\n
    &:active,\n
    &.active {\n
      background-color: @background;\n
          border-color: @border;\n
    }\n
  }\n
\n
  .badge {\n
    color: @background;\n
    background-color: #fff;\n
  }\n
}\n
\n
// Button sizes\n
// -------------------------\n
.button-size(@padding-vertical; @padding-horizontal; @font-size; @line-height; @border-radius) {\n
  padding: @padding-vertical @padding-horizontal;\n
  font-size: @font-size;\n
  line-height: @line-height;\n
  border-radius: @border-radius;\n
}\n
\n
// Pagination\n
// -------------------------\n
.pagination-size(@padding-vertical; @padding-horizontal; @font-size; @border-radius) {\n
  > li {\n
    > a,\n
    > span {\n
      padding: @padding-vertical @padding-horizontal;\n
      font-size: @font-size;\n
    }\n
    &:first-child {\n
      > a,\n
      > span {\n
        .border-left-radius(@border-radius);\n
      }\n
    }\n
    &:last-child {\n
      > a,\n
      > span {\n
        .border-right-radius(@border-radius);\n
      }\n
    }\n
  }\n
}\n
\n
// Labels\n
// -------------------------\n
.label-variant(@color) {\n
  background-color: @color;\n
  &[href] {\n
    &:hover,\n
    &:focus {\n
      background-color: darken(@color, 10%);\n
    }\n
  }\n
}\n
\n
// Navbar vertical align\n
// -------------------------\n
// Vertically center elements in the navbar.\n
// Example: an element has a height of 30px, so write out `.navbar-vertical-align(30px);` to calculate the appropriate top margin.\n
.navbar-vertical-align(@element-height) {\n
  margin-top: ((@navbar-height - @element-height) / 2);\n
  margin-bottom: ((@navbar-height - @element-height) / 2);\n
}\n
\n
// Progress bars\n
// -------------------------\n
.progress-bar-variant(@color) {\n
  background-color: @color;\n
  .progress-striped & {\n
    #gradient > .striped();\n
  }\n
}\n
\n
// Responsive utilities\n
// -------------------------\n
// More easily include all the states for responsive-utilities.less.\n
.responsive-visibility() {\n
  display: block !important;\n
  table&  { display: table; }\n
  tr&     { display: table-row !important; }\n
  th&,\n
  td&     { display: table-cell !important; }\n
}\n
\n
.responsive-invisibility() {\n
    &,\n
  tr&,\n
  th&,\n
  td& { display: none !important; }\n
}\n
\n
\n
// Grid System\n
// -----------\n
\n
// Centered container element\n
.container-fixed() {\n
  margin-right: auto;\n
  margin-left: auto;\n
  padding-left:  (@grid-gutter-width / 2);\n
  padding-right: (@grid-gutter-width / 2);\n
  .clearfix();\n
}\n
\n
// Creates a wrapper for a series of columns\n
.make-row(@gutter: @grid-gutter-width) {\n
  margin-left:  (@gutter / -2);\n
  margin-right: (@gutter / -2);\n
  .clearfix();\n
}\n
\n
// Generate the extra small columns\n
.make-xs-column(@columns; @gutter: @grid-gutter-width) {\n
  position: relative;\n
  float: left;\n
  width: percentage((@columns / @grid-columns));\n
  // Prevent columns from collapsing when empty\n
  min-height: 1px;\n
  // Inner gutter via padding\n
  padding-left:  (@gutter / 2);\n
  padding-right: (@gutter / 2);\n
}\n
\n
// Generate the small columns\n
.make-sm-column(@columns; @gutter: @grid-gutter-width) {\n
  position: relative;\n
  // Prevent columns from collapsing when empty\n
  min-height: 1px;\n
  // Inner gutter via padding\n
  padding-left:  (@gutter / 2);\n
  padding-right: (@gutter / 2);\n
\n
  // Calculate width based on number of columns available\n
  @media (min-width: @screen-sm-min) {\n
    float: left;\n
    width: percentage((@columns / @grid-columns));\n
  }\n
}\n
\n
// Generate the small column offsets\n
.make-sm-column-offset(@columns) {\n
  @media (min-width: @screen-sm-min) {\n
    margin-left: percentage((@columns / @grid-columns));\n
  }\n
}\n
.make-sm-column-push(@columns) {\n
  @media (min-width: @screen-sm-min) {\n
    left: percentage((@columns / @grid-columns));\n
  }\n
}\n
.make-sm-column-pull(@columns) {\n
  @media (min-width: @screen-sm-min) {\n
    right: percentage((@columns / @grid-columns));\n
  }\n
}\n
\n
// Generate the medium columns\n
.make-md-column(@columns; @gutter: @grid-gutter-width) {\n
  position: relative;\n
  // Prevent columns from collapsing when empty\n
  min-height: 1px;\n
  // Inner gutter via padding\n
  padding-left:  (@gutter / 2);\n
  padding-right: (@gutter / 2);\n
\n
  // Calculate width based on number of columns available\n
  @media (min-width: @screen-md-min) {\n
    float: left;\n
    width: percentage((@columns / @grid-columns));\n
  }\n
}\n
\n
// Generate the medium column offsets\n
.make-md-column-offset(@columns) {\n
  @media (min-width: @screen-md-min) {\n
    margin-left: percentage((@columns / @grid-columns));\n
  }\n
}\n
.make-md-column-push(@columns) {\n
  @media (min-width: @screen-md) {\n
    left: percentage((@columns / @grid-columns));\n
  }\n
}\n
.make-md-column-pull(@columns) {\n
  @media (min-width: @screen-md-min) {\n
    right: percentage((@columns / @grid-columns));\n
  }\n
}\n
\n
// Generate the large columns\n
.make-lg-column(@columns; @gutter: @grid-gutter-width) {\n
  position: relative;\n
  // Prevent columns from collapsing when empty\n
  min-height: 1px;\n
  // Inner gutter via padding\n
  padding-left:  (@gutter / 2);\n
  padding-right: (@gutter / 2);\n
\n
  // Calculate width based on number of columns available\n
  @media (min-width: @screen-lg-min) {\n
    float: left;\n
    width: percentage((@columns / @grid-columns));\n
  }\n
}\n
\n
// Generate the large column offsets\n
.make-lg-column-offset(@columns) {\n
  @media (min-width: @screen-lg-min) {\n
    margin-left: percentage((@columns / @grid-columns));\n
  }\n
}\n
.make-lg-column-push(@columns) {\n
  @media (min-width: @screen-lg-min) {\n
    left: percentage((@columns / @grid-columns));\n
  }\n
}\n
.make-lg-column-pull(@columns) {\n
  @media (min-width: @screen-lg-min) {\n
    right: percentage((@columns / @grid-columns));\n
  }\n
}\n
\n
\n
// Framework grid generation\n
//\n
// Used only by Bootstrap to generate the correct number of grid classes given\n
// any value of `@grid-columns`.\n
\n
.make-grid-columns() {\n
  // Common styles for all sizes of grid columns, widths 1-12\n
  .col(@index) when (@index = 1) { // initial\n
    @item: ~".col-xs-@{index}, .col-sm-@{index}, .col-md-@{index}, .col-lg-@{index}";\n
    .col(@index + 1, @item);\n
  }\n
  .col(@index, @list) when (@index =< @grid-columns) { // general; "=<" isn\'t a typo\n
    @item: ~".col-xs-@{index}, .col-sm-@{index}, .col-md-@{index}, .col-lg-@{index}";\n
    .col(@index + 1, ~"@{list}, @{item}");\n
  }\n
  .col(@index, @list) when (@index > @grid-columns) { // terminal\n
    @{list} {\n
      position: relative;\n
      // Prevent columns from collapsing when empty\n
      min-height: 1px;\n
      // Inner gutter via padding\n
      padding-left:  (@grid-gutter-width / 2);\n
      padding-right: (@grid-gutter-width / 2);\n
    }\n
  }\n
  .col(1); // kickstart it\n
}\n
\n
.make-grid-columns-float(@class) {\n
  .col(@index) when (@index = 1) { // initial\n
    @item: ~".col-@{class}-@{index}";\n
    .col(@index + 1, @item);\n
  }\n
  .col(@index, @list) when (@index =< @grid-columns) { // general\n
    @item: ~".col-@{class}-@{index}";\n
    .col(@index + 1, ~"@{list}, @{item}");\n
  }\n
  .col(@index, @list) when (@index > @grid-columns) { // terminal\n
    @{list} {\n
      float: left;\n
    }\n
  }\n
  .col(1); // kickstart it\n
}\n
\n
.calc-grid(@index, @class, @type) when (@type = width) and (@index > 0) {\n
  .col-@{class}-@{index} {\n
    width: percentage((@index / @grid-columns));\n
  }\n
}\n
.calc-grid(@index, @class, @type) when (@type = push) {\n
  .col-@{class}-push-@{index} {\n
    left: percentage((@index / @grid-columns));\n
  }\n
}\n
.calc-grid(@index, @class, @type) when (@type = pull) {\n
  .col-@{class}-pull-@{index} {\n
    right: percentage((@index / @grid-columns));\n
  }\n
}\n
.calc-grid(@index, @class, @type) when (@type = offset) {\n
  .col-@{class}-offset-@{index} {\n
    margin-left: percentage((@index / @grid-columns));\n
  }\n
}\n
\n
// Basic looping in LESS\n
.make-grid(@index, @class, @type) when (@index >= 0) {\n
  .calc-grid(@index, @class, @type);\n
  // next iteration\n
  .make-grid(@index - 1, @class, @type);\n
}\n
\n
\n
// Form validation states\n
//\n
// Used in forms.less to generate the form validation CSS for warnings, errors,\n
// and successes.\n
\n
.form-control-validation(@text-color: #555; @border-color: #ccc; @background-color: #f5f5f5) {\n
  // Color the label and help text\n
  .help-block,\n
  .control-label,\n
  .radio,\n
  .checkbox,\n
  .radio-inline,\n
  .checkbox-inline  {\n
    color: @text-color;\n
  }\n
  // Set the border and box shadow on specific inputs to match\n
  .form-control {\n
    border-color: @border-color;\n
    .box-shadow(inset 0 1px 1px rgba(0,0,0,.075)); // Redeclare so transitions work\n
    &:focus {\n
      border-color: darken(@border-color, 10%);\n
      @shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten(@border-color, 20%);\n
      .box-shadow(@shadow);\n
    }\n
  }\n
  // Set validation states also for addons\n
  .input-group-addon {\n
    color: @text-color;\n
    border-color: @border-color;\n
    background-color: @background-color;\n
  }\n
}\n
\n
// Form control focus state\n
//\n
// Generate a customized focus state and for any input with the specified color,\n
// which defaults to the `@input-focus-border` variable.\n
//\n
// We highly encourage you to not customize the default value, but instead use\n
// this to tweak colors on an as-needed basis. This aesthetic change is based on\n
// WebKit\'s default styles, but applicable to a wider range of browsers. Its\n
// usability and accessibility should be taken into account with any change.\n
//\n
// Example usage: change the default blue border and shadow to white for better\n
// contrast against a dark gray background.\n
\n
.form-control-focus(@color: @input-border-focus) {\n
  @color-rgba: rgba(red(@color), green(@color), blue(@color), .6);\n
  &:focus {\n
    border-color: @color;\n
    outline: 0;\n
    .box-shadow(~"inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px @{color-rgba}");\n
  }\n
}\n
\n
// Form control sizing\n
//\n
// Relative text size, padding, and border-radii changes for form controls. For\n
// horizontal sizing, wrap controls in the predefined grid classes. `<select>`\n
// element gets special love because it\'s special, and that\'s a fact!\n
\n
.input-size(@input-height; @padding-vertical; @padding-horizontal; @font-size; @line-height; @border-radius) {\n
  height: @input-height;\n
  padding: @padding-vertical @padding-horizontal;\n
  font-size: @font-size;\n
  line-height: @line-height;\n
  border-radius: @border-radius;\n
\n
  select& {\n
    height: @input-height;\n
    line-height: @input-height;\n
  }\n
\n
  textarea& {\n
    height: auto;\n
  }\n
}\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>24469</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
