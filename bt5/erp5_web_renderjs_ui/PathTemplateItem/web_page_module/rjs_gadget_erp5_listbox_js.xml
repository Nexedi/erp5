<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="Web Script" module="erp5.portal_type"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Access_contents_information_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Add_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Change_local_roles_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Modify_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_View_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>categories</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>content_md5</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>default_reference</string> </key>
            <value> <string>gadget_erp5_field_listbox.js</string> </value>
        </item>
        <item>
            <key> <string>description</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>rjs_gadget_erp5_listbox_js</string> </value>
        </item>
        <item>
            <key> <string>language</string> </key>
            <value> <string>en</string> </value>
        </item>
        <item>
            <key> <string>portal_type</string> </key>
            <value> <string>Web Script</string> </value>
        </item>
        <item>
            <key> <string>short_title</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>text_content</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/*jslint indent: 2, maxerr: 3, nomen: true */\n
/*global window, document, rJS, URI, RSVP, UriTemplate */\n
(function (window, document, rJS, URI, RSVP, UriTemplate) {\n
  "use strict";\n
\n
  rJS(window)\n
    /////////////////////////////////////////////////////////////////\n
    // ready\n
    /////////////////////////////////////////////////////////////////\n
    // Init local properties\n
    .ready(function (g) {\n
      g.props = {\n
        cell_gadget_list: [],\n
        listbox_uid_dict: {}\n
      };\n
    })\n
\n
    // Assign the element to a variable\n
    .ready(function (g) {\n
      return g.getElement()\n
        .push(function (element) {\n
          g.props.element = element;\n
        });\n
    })\n
\n
    //////////////////////////////////////////////\n
    // acquired method\n
    //////////////////////////////////////////////\n
    .declareAcquiredMethod("jio_allDocs", "jio_allDocs")\n
    .declareAcquiredMethod("translateHtml", "translateHtml")\n
    .declareAcquiredMethod("getUrlFor", "getUrlFor")\n
    .declareAcquiredMethod("getUrlParameter", "getUrlParameter")\n
    .declareAcquiredMethod("getFieldTypeGadgetUrl", "getFieldTypeGadgetUrl")\n
    //////////////////////////////////////////////\n
    // initialize the gadget content\n
    //////////////////////////////////////////////\n
    .declareMethod(\'render\', function (options) {\n
      var gadget = this,\n
        thead = gadget.props.element.querySelector(\'thead\'),\n
        field_json = options.field_json,\n
        tr = document.createElement("tr"),\n
        document_table = gadget.props.element.querySelector(\'.document_table\'),\n
        th,\n
        length_table = field_json.column_list.length,\n
        i;\n
\n
      gadget.props.field_json = field_json;\n
      gadget.props.extended_search = options.extended_search;\n
      if (field_json.show_anchor) {\n
        th = document.createElement("th");\n
        th.textContent = "Jump";\n
        th.setAttribute("data-i18n", "Jump");\n
        tr.appendChild(th);\n
      }\n
      for (i = 0; i < length_table; i += 1) {\n
        th = document.createElement("th");\n
        th.textContent = field_json.column_list[i][1];\n
        th.setAttribute("data-i18n", field_json.column_list[i][1]);\n
        tr.appendChild(th);\n
      }\n
      thead.appendChild(tr);\n
      return new RSVP.Queue()\n
        .push(function () {\n
          // XXX Fix in case of multiple listboxes\n
          return gadget.getUrlParameter(field_json.key + \'_begin_from\');\n
        })\n
        .push(function (result) {\n
          if (result === undefined) {\n
            result = \'0\';\n
          }\n
          gadget.props.begin_from = parseInt(result, 10) || 0;\n
          return gadget.translateHtml(document_table.innerHTML);\n
        })\n
        .push(function (my_translate_html) {\n
          document_table.innerHTML = my_translate_html;\n
        });\n
    })\n
\n
    //////////////////////////////////////////////\n
    // render the listbox in an asynchronous way\n
    //////////////////////////////////////////////\n
    .declareService(function () {\n
      var gadget = this,\n
        props = gadget.props,\n
        field_json = props.field_json,\n
        begin_from = props.begin_from,\n
        table = props.element.querySelector(\'table\'),\n
        original_tfoot = props.element.querySelector(\'tfoot\'),\n
        tbody = document.createElement("tbody"),\n
        url_query =  props.extended_search,\n
        query_string = new URI(field_json.query).query(true).query,\n
        lines = field_json.lines,\n
        select_list = [],\n
        dataset,\n
        counter,\n
        i;\n
\n
      if (field_json.query === undefined) {\n
        original_tfoot.textContent = "Unsupported list method: \'" + field_json.list_method + "\'";\n
        return;\n
      }\n
     // function buildQueryString(previous, next) {\n
     //   return previous + next[0] + \':= "\' + url_query + \'" OR \';\n
     // }\n
\n
      if (url_query) {\n
        //query_string = field_json.column_list.reduce(buildQueryString, \' AND (\').replace(new RegExp("OR " + \'$\'), \')\');\n
        if (query_string) {\n
          query_string = \' AND \' + url_query;\n
        } else {\n
          query_string = url_query;\n
        }\n
      }\n
\n
      for (i = 0; i < field_json.column_list.length; i += 1) {\n
        select_list.push(field_json.column_list[i][0]);\n
      }\n
\n
      return gadget.jio_allDocs({\n
        // XXX Not jIO compatible, but until a better api is found...\n
        "list_method_template": field_json.list_method_template,\n
        "query": query_string,\n
        "limit": [begin_from, lines + 1],\n
        "select_list": select_list\n
        }).push(function (result) {\n
        var promise_list = [result];\n
        counter = Math.min(result.data.total_rows, lines);\n
        for (i = 0; i < counter; i += 1) {\n
          promise_list.push(\n
            gadget.getUrlFor({\n
              command: \'index\',\n
              options: {\n
                jio_key: result.data.rows[i].id,\n
                selection_index: begin_from + i,\n
                query: new URI(field_json.query).query(true).query + query_string,\n
                list_method_template: field_json.list_method_template,\n
                page: field_json.page\n
              }\n
            })\n
          );\n
        }\n
        return RSVP.all(promise_list);\n
\n
      }).push(function (result_list) {\n
        var j,\n
          tr,\n
          th,\n
          a,\n
          result = result_list[0],\n
          tmp_url,\n
          tmp_div,\n
          value,\n
          promise_list = [],\n
          uid_value,\n
          uid_value_dict = {};\n
\n
        function renderSubCell(element, sub_field_json) {\n
          return gadget.getFieldTypeGadgetUrl(sub_field_json.type)\n
            .push(function (gadget_url) {\n
              return gadget.declareGadget(gadget_url, {\n
                element: element\n
              });\n
            })\n
            .push(function (cell_gadget) {\n
              gadget.props.cell_gadget_list.push(cell_gadget);\n
              sub_field_json.editable = sub_field_json.editable && field_json.editable; // XXX \n
              return cell_gadget.render({field_json: sub_field_json});\n
            });\n
        }\n
\n
        dataset = result;\n
        for (i = 0; i < counter; i += 1) {\n
          tr = document.createElement("tr");\n
          tmp_url = result_list[i + 1];\n
\n
          if (field_json.show_anchor) {\n
            th = document.createElement("th");\n
            a = document.createElement("a");\n
            a.href = tmp_url;\n
            a.className = "ui-link ui-btn ui-corner-all ui-icon-carat-r ui-btn-icon-notext";\n
            th.appendChild(a);\n
            tr.appendChild(th);\n
          }\n
          for (j = 0; j < field_json.column_list.length; j += 1) {\n
            th = document.createElement("th");\n
            value = result.data.rows[i].value[field_json.column_list[j][0]] || "";\n
            if (value.type === undefined) {\n
              a = document.createElement("a");\n
              a.href = tmp_url;\n
              a.className = "ui-link";\n
              a.textContent = value;\n
              th.appendChild(a);\n
            } else {\n
              tmp_div = document.createElement("div");\n
              if (gadget.props.listbox_uid_dict.key === undefined) {\n
                gadget.props.listbox_uid_dict.key = result.data.rows[i].value["listbox_uid:list"].key;\n
                gadget.props.listbox_uid_dict.value = [result.data.rows[i].value["listbox_uid:list"].value];\n
                uid_value_dict[result.data.rows[i].value["listbox_uid:list"].value] = null;\n
              } else {\n
                uid_value = result.data.rows[i].value["listbox_uid:list"].value;\n
                if (!uid_value_dict.hasOwnProperty(uid_value)) {\n
                  uid_value_dict[uid_value] = null;\n
                  gadget.props.listbox_uid_dict.value.push(uid_value);\n
                }\n
              }\n
\n
              promise_list.push(renderSubCell(tmp_div, value));\n
\n
              //when a sub field is not editable but it\'s in listbox\'s editable colummn \n
              //then create link, see ListBox.py line 2518\n
              if (value.editable === 0) {\n
                a = document.createElement("a");\n
                a.href = tmp_url;\n
                a.className = "ui-link";\n
                a.appendChild(tmp_div);\n
                th.appendChild(a);\n
              } else {\n
                th.appendChild(tmp_div);\n
              }\n
            }\n
            tr.appendChild(th);\n
          }\n
\n
          tbody.appendChild(tr);\n
        }\n
        return RSVP.all(promise_list);\n
      }).push(function () {\n
        var prev_param = {},\n
          next_param = {};\n
\n
        function setNext() {\n
          if (dataset.data.rows.length > lines) {\n
            next_param[gadget.props.field_json.key + \'_begin_from\'] = begin_from + lines;\n
          }\n
        }\n
\n
        if (begin_from === 0) {\n
          setNext();\n
        } else {\n
          prev_param[gadget.props.field_json.key + \'_begin_from\'] = begin_from - lines;\n
          setNext();\n
        }\n
        return RSVP.all([\n
          gadget.getUrlFor({command: \'change\', options: prev_param}),\n
          gadget.getUrlFor({command: \'change\', options: next_param})\n
        ]);\n
\n
      }).push(function (url_list) {\n
        var fragment = document.createDocumentFragment(),\n
          tfoot = gadget.__element.querySelector("tfoot"),\n
          //tfoot = document.createElement("tfoot"),\n
          tr = document.createElement("tr"),\n
          th = document.createElement("th"),\n
          paging_prev = document.createElement("a"),\n
          paging_next = document.createElement("a"),\n
          paging_info = document.createElement("span"),\n
          paging_menu = document.createElement("div"),\n
          paging_wrap = document.createElement("div"),\n
          temp = document.createElement("div"),\n
          temp_table = document.createElement("table"),\n
          len;\n
\n
        th.setAttribute("colspan", field_json.column_list.length);\n
        // NOTE: Romain: paging menu with 3+ buttons should have another class name (like ui-paging-grid)\n
        paging_menu.className = "ui-controlgroup ui-controlgroup-horizontal ui-corner-all ui-paging-menu";\n
        paging_wrap.className = "ui-controlgroup-controls";\n
\n
        paging_prev.className = "ui-btn ui-icon-carat-l ui-btn-icon-left responsive ui-first-child";\n
        paging_prev.textContent = "Previous";\n
        paging_prev.setAttribute("data-i18n", "Previous");\n
        paging_prev.href = url_list[0];\n
        paging_info.className = "ui-btn ui-disabled";\n
        if ((begin_from === 0) && (counter === 0)) {\n
          paging_info.textContent = "No records";\n
          paging_info.setAttribute("data-i18n", "No Records");\n
        } else if ((dataset.data.rows.length <= lines) && (begin_from === 0)) {\n
          paging_info.setAttribute("data-i18n", "[last]Record(s)");\n
          paging_info.appendChild(document.createTextNode(counter));\n
          paging_info.appendChild(document.createTextNode("Record(s)"));\n
        } else {\n
          paging_info.setAttribute("data-i18n", "[node]Record(s)");\n
          paging_info.appendChild(document.createTextNode("Records "));\n
          paging_info.appendChild(document.createTextNode((((begin_from + lines) / lines - 1) * lines + 1) + " - " + (((begin_from + lines) / lines - 1) * lines + counter)));\n
        }\n
        // paging_info.textContent = "Page " + ((begin_from + lines) / lines);\n
        paging_next.className = "ui-btn ui-icon-carat-r ui-btn-icon-right responsive ui-last-child";\n
        paging_next.textContent = "Next";\n
        paging_next.setAttribute("data-i18n", "Next");\n
        paging_next.href = url_list[1];\n
\n
        if (begin_from === 0) {\n
          paging_prev.className += " ui-disabled";\n
        }\n
        if (dataset.data.rows.length <= lines) {\n
          paging_next.className += " ui-disabled";\n
        }\n
\n
        paging_wrap.appendChild(paging_prev);\n
        paging_wrap.appendChild(paging_info);\n
        paging_wrap.appendChild(paging_next);\n
        paging_menu.appendChild(paging_wrap);\n
        th.appendChild(paging_menu);\n
        tr.appendChild(th);\n
        tfoot.appendChild(tr);\n
        fragment.appendChild(tbody);\n
        fragment.appendChild(tfoot);\n
\n
        for (len = table.children.length; len > 0; len -= 1) {\n
          table.removeChild(table.lastChild);\n
        }\n
        // NOTE: for passing translations, temp must contain a table\n
        temp_table.appendChild(fragment);\n
        temp.appendChild(temp_table);\n
        table.appendChild(temp.querySelector("tbody"));\n
        return gadget.translateHtml(temp.querySelector("tfoot").innerHTML);\n
      })\n
        .push(function (my_translated_html) {\n
          var temp = document.createElement("tfoot");\n
          temp.innerHTML = my_translated_html;\n
          table.appendChild(temp);\n
        });\n
    })\n
\n
\n
    .declareMethod("getContent", function () {\n
      var form_gadget = this,\n
        k,\n
        field_gadget,\n
        count = form_gadget.props.cell_gadget_list.length,\n
        data = {},\n
        queue = new RSVP.Queue();\n
\n
      function extendData(field_data) {\n
        var key;\n
        for (key in field_data) {\n
          if (field_data.hasOwnProperty(key)) {\n
            data[key] = field_data[key];\n
          }\n
        }\n
      }\n
\n
      for (k = 0; k < count; k += 1) {\n
        field_gadget = form_gadget.props.cell_gadget_list[k];\n
        // XXX Hack until better defined\n
        if (field_gadget.getContent !== undefined) {\n
          queue\n
            .push(field_gadget.getContent.bind(field_gadget))\n
            .push(extendData);\n
        }\n
      }\n
      return queue\n
        .push(function () {\n
          data[form_gadget.props.listbox_uid_dict.key] = form_gadget.props.listbox_uid_dict.value;\n
          return data;\n
        });\n
    })\n
\n
    .allowPublicAcquisition("notifyInvalid", function () {\n
      return;\n
    })\n
\n
    .allowPublicAcquisition("notifyValid", function () {\n
      return;\n
    });\n
\n
}(window, document, rJS, URI, RSVP, UriTemplate));

]]></string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>Gadget ERP5 Listbox JS</string> </value>
        </item>
        <item>
            <key> <string>version</string> </key>
            <value> <string>001</string> </value>
        </item>
        <item>
            <key> <string>workflow_history</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <global name="PersistentMapping" module="Persistence.mapping"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value>
              <dictionary>
                <item>
                    <key> <string>document_publication_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAM=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>edit_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAQ=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>processing_status_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAU=</string> </persistent>
                    </value>
                </item>
              </dictionary>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="3" aka="AAAAAAAAAAM=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>publish_alive</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>romain</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1406898405.51</float>
                        <string>GMT</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
            <item>
                <key> <string>validation_state</string> </key>
                <value> <string>published_alive</string> </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="4" aka="AAAAAAAAAAQ=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>edit</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value>
                  <none/>
                </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>946.56368.46897.8174</string> </value>
            </item>
            <item>
                <key> <string>state</string> </key>
                <value> <string>current</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1446565852.84</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="5" aka="AAAAAAAAAAU=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>detect_converted_file</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>romain</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>external_processing_state</string> </key>
                <value> <string>converted</string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>0.0.0.0</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1405429753.25</float>
                        <string>GMT</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
</ZopeData>
