<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>"""\n
  Set reference and password to create a user. Create a global user if SSO enable.\n
  Proxy:\n
  Manager -- allow to set password on all account\n
"""\n
\n
#Don\'t allow to call from url\n
if REQUEST:\n
  raise ValueError, "You can not call this script from the url"\n
\n
portal = context.getPortalObject()\n
portal_preferences = context.portal_preferences\n
person = context.getDestinationDecisionValue(portal_type="Person")\n
\n
login_list = [x for x in person.objectValues(portal_type=\'ERP5 Login\') \\\n
              if x.getValidationState() == \'validated\']\n
if len(login_list):\n
  login = login_list[0]\n
else:\n
  login = person.newContent(portal_type=\'ERP5 Login\')\n
# Create user of the person only if not exist\n
if person.hasReference() and login.hasPassword():\n
  return person.getReference(), None\n
\n
# Set login\n
reference = context.getReference()\n
if not login.hasReference():\n
  if not reference:\n
    raise ValueError, "Impossible to create an account without login"\n
  login.setReference(reference)\n
  if not person.hasReference():\n
    person.setReference(reference)\n
else:\n
  reference = person.getReference()\n
\n
password = None\n
# Set password if no password on the Login\n
if not login.hasPassword():\n
  if context.getPassword():\n
    #User has fill a password\n
    password = context.getPassword()\n
    login.setEncodedPassword(password)\n
  else:\n
    if not portal_preferences.isPreferredSystemGeneratePassword():\n
      # user will set it trough a credential recovery process\n
      password = None\n
      module = portal.getDefaultModule(portal_type=\'Credential Recovery\')\n
      credential_recovery = module.newContent(\n
                                     portal_type="Credential Recovery",\n
                                     reference=reference,\n
                                     destination_decision=person.getRelativeUrl(),\n
                                     language=portal.Localizer.get_selected_language())\n
      credential_recovery.submit()\n
    else:\n
      # system should generate a password\n
      password = context.Person_generatePassword(alpha=5, numeric=3)\n
      login.setPassword(password)\n
\n
  # create a global account\n
  if context.ERP5Site_isSingleSignOnEnable():\n
    #The master manage encoded password and clear password\n
    person.Person_createNewGlobalUserAccount(password=password)\n
    person.Person_validateGlobalUserAccount()\n
\n
  if login.getValidationState() == \'draft\':\n
    login.validate()\n
else:\n
  #Person has an already an account\n
  if context.ERP5Site_isSingleSignOnEnable():\n
    #Check assignment for the current instance\n
    person.Person_validateGlobalUserAccount()\n
\n
return reference, password\n
</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>REQUEST=None</string> </value>
        </item>
        <item>
            <key> <string>_proxy_roles</string> </key>
            <value>
              <tuple>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>CredentialRequest_createUser</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
