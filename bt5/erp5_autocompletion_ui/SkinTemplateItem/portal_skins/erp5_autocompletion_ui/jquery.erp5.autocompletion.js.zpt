<tal:block tal:define="update_path python: container.ERP5Site_getCompletionDictList.absolute_url()">
$(function() {
    // private
    function generateSource(params) {
        var data = {};
        if (params.search_portal_type)
          data.search_portal_type = params.search_portal_type;
        if (params.search_catalog_key)
          data.search_catalog_key = params.search_catalog_key;

        return function(request, response) {
            if(params.transformSearchTextFunction)
              request.term = params.transformSearchTextFunction(request.term);

            $.extend(data, {starts_with: request.term});
            $.ajax({
                url: "<tal:block tal:replace="update_path" />",
                dataType: "json",
                data: data,
                success: response,
                // Otherwise JQuery would serialize an array to portal_type[]=p1&portal_type[]=p2
                // instead of Zope portal_type=p1&portal_type=p2
                traditional: true,
            });
        };
    }

    function search(event, ui) {
      // Ignore key input if processing with Input Method Editor
      if(event.keyCode == 229)
        return false;
      return true;
    }      

    /*
     * Wrapper around jQuery.ui.autocomplete that queries catalog
     * to return matching terms. Display title by default.
     *
     * Parameters:
     *   - search_catalog_key: catalog key that should be matched against
     *     user input. For example, "title" to match titles,
     *     your_custom_reference to search for customized reference, etc
     *   - optional search_portal_type
     *
     * Example:
     *   $(".your_input").ERP5Autocomplete({
     *     search_portal_type: "Product",
     *     search_catalog_key: "title",
     *   });
     */
    $.fn.ERP5Autocomplete = function(kw) {
      var autocomplete = 
        this.autocomplete({source: generateSource(kw),
                           delay: 600,
                           search: search})
        .keyup(function(event) {
           // With Input Method Editor, Enter allows to select between choices
           if(event.keyCode == 13)
             $(this).autocomplete("search");
        });

      autocomplete = autocomplete.data("autocomplete") ?
                     // jQuery UI <= 1.8
                     autocomplete.data("autocomplete") :
                     // jQuery UI > 1.8
                     autocomplete.data("ui-autocomplete");

      autocomplete._renderItem = function(ul, item) {
        item_html = "<a><b>" + item.label + "</b>";
        if(item.description)
          item_html += '<br><span style="font-size: 70%">' +
                        item.description + "</span>";

        item_html += "</a>";
        return $("<li></li>").data("item.autocomplete", item)
          .append(item_html)
          .appendTo(ul);
      };

      return autocomplete;
    };
});
</tal:block>