var loading_deferred = undefined;

function replaceContent(req) {
  if (loading_deferred) {
    loading_deferred.cancel();
    loading_deferred = undefined;
  }
  //var container = $('container');
  var container = MochiKit.DOM.getElement("container");
  container.innerHTML = req.responseText;

  addOnClickEventsToTabs(req);
}

function showServerSideError(req) {
  if (loading_deferred) {
    loading_deferred.cancel();
    loading_deferred = undefined;
  }
  //var container = $('container');
  var container = MochiKit.DOM.getElement("container");
  container.innerHTML = 'Server side error.';

  addOnClickEventsToTabs(req);
}

function showLoadingMessage() {
  //var container = $('container');
  var container = MochiKit.DOM.getElement("container");
  container.innerHTML = '<div><p style="text-align: left; vertical-align: middle; font-size: large;">Loading...</p></div>';
  loading_deferred = undefined;
}

function selectTab(e) {
  //var tab_box = $('tab_box');
  //var item_list = tab_box.getElementsByTagName('li');
  var item_list = MochiKit.DOM.getElementsByTagAndClassName("li", null, "tab_box");
  for (var i = 0; i < item_list.length; i++) {
    var item = item_list[i];
    //var node = item.getElementsByTagName('a')[0];
    var node = MochiKit.DOM.getFirstElementByTagAndClassName("a", null, item);
    if (this == node) {
      if (getNodeAttribute(item, 'class') != 'selected') {
        MochiKit.DOM.setNodeAttribute(item, 'class', 'selected');
      }
      node.blur();
    } else {
      if (getNodeAttribute(item, 'class') != 'non_selected') {
        MochiKit.DOM.setNodeAttribute(item, 'class', 'non_selected');
      }
    }
    MochiKit.Signal.disconnectAll(node, 'onclick');
    MochiKit.Signal.connect(node, 'onclick', function (e) { e.stop(); });
  }

  var mapping = {
  <tal:block 
  tal:replace="structure python: ',\n'.join(['%s: \x22%s\x22' %(x['id'], x['renderer']) for x in context.ERP5Site_getTabList(add_all_tabs=1)])"></tal:block>
  };

  var url = mapping[this.parentNode.id];
  var d = MochiKit.Async.doSimpleXMLHttpRequest(url);
  d.addCallbacks(replaceContent, showServerSideError);
  e.stop();

  loading_deferred = MochiKit.Async.callLater(0.3, showLoadingMessage);

  // Set a cookie.
  document.cookie = 'erp5_site_selected_tab=' + escape(this.parentNode.id);
}
<tal:block tal:define="portal python: context.getPortalObject();
                       portal_url python: portal.absolute_url();
                       witch_server_root python: portal.portal_preferences.getPreferredWitchToolServerRoot();
                       site_url python: '\x22%s/portal_wizard/proxy/%s\x22' %(portal_url,witch_server_root)">
  function showProductList() {
    site_url = <tal:block tal:replace="site_url"></tal:block>;
    var url = site_url+"/web_site_module/express_frame/ERP5Site_getExpressProductListFrame";
    var d = doSimpleXMLHttpRequest(url);
    d.addBoth(replaceContent)
    loading_deferred = callLater(0.3, showLoadingMessage);
  }

  function showProduct(reference) {
    site_url =  <tal:block tal:replace="site_url"></tal:block>;
    var url = site_url+"/web_site_module/express_frame/ERP5Site_getExpressProductFrame?reference=";
    url = url + reference;
    var d = doSimpleXMLHttpRequest(url);
    d.addBoth(replaceContent)
    loading_deferred = callLater(0.3, showLoadingMessage);
  }
</tal:block>

function addOnClickEventsToTabs(e) {
  //var tab_box = $('tab_box');
  //var item_list = tab_box.getElementsByTagName('li');
  var item_list = MochiKit.DOM.getElementsByTagAndClassName("li", null, "tab_box");
  for (var i = 0; i < item_list.length; i++) {
    //connect(item_list[i], 'onclick', function(e){e.stop();})
    //var node = item_list[i].getElementsByTagName('a')[0];
    var node = MochiKit.DOM.getFirstElementByTagAndClassName("a", null, item_list[i]);
    MochiKit.Signal.disconnectAll(node, 'onclick');
    MochiKit.Signal.connect(node, 'onclick', selectTab);
  }
  return true;
}

connect(window, 'onload', addOnClickEventsToTabs);

function showProductOnLoad() {
var tmp = window.location.search.substring(1).split("&");

var GET = [];
for (var i in tmp)
  if (tmp[i].indexOf("=")!=-1)
    GET[decodeURI(tmp[i].substring(0, tmp[i].indexOf("=")))] = decodeURI(tmp[i].substring(tmp[i].indexOf("=")+1));
  else
    GET[decodeURI(tmp[i])]='';
if (GET["jumptab"])
  {
    if (GET["reference"])
      {
       showProduct(GET["reference"]);
      }
    else
      {
        showProductList();
      }
  }
}

addLoadEvent(showProductOnLoad);