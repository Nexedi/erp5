<tal:comment replace="nothing">
"""
================================================================================
Creates the Book content.
================================================================================
"""
</tal:comment>
<tal:block tal:define="book_theme                        python: options.get('book_theme');
                       book_title                        python: options.get('book_title');
                       book_language                     python: options.get('book_language');
                       book_theme_css_font_list          python: options.get('book_theme_css_font_list');
                       book_theme_css_url                python: options.get('book_theme_css_url');
                       book_template_css_url             python: options.get('book_template_css_url');
                       book_short_title                  python: options.get('book_short_title');
                       book_description                  python: options.get('book_description');
                       book_source_person_title          python: options.get('book_source_person_title');
                       book_content                      python: options.get('book_content');
                       book_format                       python: options.get('book_format');
                       book_rendering_fix                python: options.get('book_rendering_fix');">
  <!DOCTYPE html>
  <html tal:attributes="class python: ''.join(['ci-', book_theme, ' ci-', book_language])">
  <head>
    <meta charset="utf-8">
    <title tal:content="python: book_title"></title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <tal:block tal:repeat="font_url book_theme_css_font_list">
      <link rel="stylesheet" tal:attributes="href font_url" />
    </tal:block>
    <link rel="stylesheet" tal:attributes="href book_theme_css_url" />
    <link rel="stylesheet" tal:attributes="href book_template_css_url" />
    </head>
    	<body class="ci-book ci-book-content">
    	  <tal:block metal:use-macro="context/WebPage_createBookContent/macros/book_content" />
      </body>
	 </html>
</tal:block>

<tal:block tal:condition="python: False">
  <tal:block metal:define-macro="book_content">
    <tal:block tal:content="structure python: book_content"></tal:block>
    <tal:block tal:condition="python: book_format == 'pdf'">
      <tal:block tal:content="structure python: book_rendering_fix"></tal:block>
    </tal:block>
  </tal:block>
</tal:block>