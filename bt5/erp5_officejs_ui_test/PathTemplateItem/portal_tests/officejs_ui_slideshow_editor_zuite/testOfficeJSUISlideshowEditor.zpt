<html xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Test OfficeJS UI</title>
</head>
<body>
<table cellpadding="1" cellspacing="1" border="1">
<thead>
<tr><td rowspan="1" colspan="3">Test OfficeJS UI</td></tr>
</thead><tbody>
<tal:block metal:use-macro="here/Zuite_CommonTemplate/macros/init" />
<!-- Clean Up -->
<tr>
  <td>open</td>
  <td>${base_url}/bar_module/ListBoxZuite_reset</td>
  <td></td>
</tr>
<tr>
  <td>assertTextPresent</td>
  <td>Reset Successfully.</td>
  <td></td>
</tr>
<!-- Initialize -->
<tal:block tal:define="web_site_name python: 'officejs_slideshow_editor'">
  <tal:block metal:use-macro="here/Zuite_CommonTemplateForOfficejsUi/macros/install_offline_and_redirect" />
</tal:block>

<tr>
  <td>waitForElementPresent</td>
  <td>//a[@data-i18n='Storages']</td>
  <td></td>
</tr>
<tr>
  <td>click</td>
  <td>//a[@data-i18n='Storages']</td>
  <td></td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>link=Local is Enough</td>
  <td></td>
</tr>
<tr>
  <td>click</td>
  <td>link=Local is Enough</td>
  <td></td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>link=Add</td>
  <td></td>
</tr>
<tr>
  <td>click</td>
  <td>link=Add</td>
  <td></td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>//button[@data-i18n='Save']</td>
  <td></td>
</tr>
<tr>
  <td>store</td>
  <td tal:content="python: 'Test Titre %s' % DateTime()">Titre</td>
  <td>title</td>
</tr>
<tr>
  <td>store</td>
  <td tal:content="python: 'Test Reference %s' % DateTime()">Reference</td>
  <td>reference</td>
</tr>
<tr>
  <td>store</td>
  <td tal:content="python: 'Test Language %s' % DateTime()">Language</td>
  <td>language</td>
</tr>
<tr>
  <td>store</td>
  <td tal:content="python: 'Test Version %s' % DateTime()">Version</td>
  <td>version</td>
</tr>
<tr>
  <td>store</td>
  <td tal:content="python: 'Test Description %s' % DateTime()">Description</td>
  <td>description</td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>//input[@name='title']</td>
  <td></td>
</tr>
<tr>
  <td>type</td>
  <td>//input[@name='title']</td>
  <td>${title}</td>
</tr>
<tr>
  <td>type</td>
  <td>//input[@name='reference']</td>
  <td>${reference}</td>
</tr>
<tr>
  <td>type</td>
  <td>//input[@name='version']</td>
  <td>${version}</td>
</tr>
<tr>
  <td>type</td>
  <td>//input[@name='language']</td>
  <td>${language}</td>
</tr>
<tr>
  <td>type</td>
  <td>//textarea[@name='description']</td>
  <td>${description}</td>
</tr>

<!--<tr>
  <td>waitForElementPresent</td>
  <td>identifier=cke_1_top</td>
  <td></td>
</tr>-->
<!-- Wait for editor completly loaded, this is workaround, wait for lock in renderjs -->
<tr>
  <td>pause</td>
  <td>2713</td>
  <td></td>
</tr>
<tr>
  <td>click</td>
  <td>//button[@data-i18n='Save']</td>
  <td></td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>//div[@data-gadget-scope="notification"]//button[text()='Data Updated']</td>
  <td></td>
</tr>
<tr>
  <td>click</td>
  <td>//a[@data-i18n='Document']</td>
  <td></td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>link=Add</td>
  <td></td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>link=${title}</td>
  <td></td>
</tr>
<tr>
  <td>click</td>
  <td>link=${title}</td>
  <td></td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>//textarea[@name='description']</td>
  <td></td>
</tr>
<tr>
  <td>verifyValue</td>
  <td>//input[@name='title']</td>
  <td>${title}</td>
</tr>
<tr>
  <td>verifyValue</td>
  <td>//input[@name='reference']</td>
  <td>${reference}</td>
</tr>
<tr>
  <td>verifyValue</td>
  <td>//input[@name='version']</td>
  <td>${version}</td>
</tr>
<tr>
  <td>verifyValue</td>
  <td>//input[@name='language']</td>
  <td>${language}</td>
</tr>
<tr>
  <td>verifyValue</td>
  <td>//textarea[@name='description']</td>
  <td>${description}</td>
</tr>

<!-- Test Slides -->

<tr>
  <td>assertTextPresent</td>
  <td>0 Slides</td>
  <td></td>
</tr>

<tr>
  <td colspan="3"><b>Create first slide</b></td>
</tr>
<tr>
  <td>click</td>
  <td>//button[text()='New Slide']</td>
  <td></td>
</tr>
<tr>
  <td>waitForTextPresent</td>
  <td>Slide 1</td>
  <td></td>
</tr>

<tr>
  <td colspan="3"><b>Set text content</b></td>
</tr>

<tal:block tal:define="text_content python: 'slide 1 text content'">
  <tal:block metal:use-macro="container/Zuite_CommonTemplateForRenderjsUi/macros/type_ckeditor_text_content"/>
</tal:block>

<tr>
  <td colspan="3"><b>Edit the metadata</b></td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>type</td>
  <td></td>
</tr>
<tr>
  <td>type</td>
  <td>title_html</td>
  <td>slide 1 test title</td>
</tr>

<tr>
  <td colspan="3"><b>Go to the comments form</b></td>
</tr>
<tr>
  <td>click</td>
  <td>//button[text()='Comments']</td>
  <td></td>
</tr>
<tr>
  <td>waitForElementNotPresent</td>
  <td>type</td>
  <td></td>
</tr>

<tr>
  <td colspan="3"><b>Set comment content</b></td>
</tr>
<tal:block tal:define="text_content python: 'slide 1 comment content'">
  <tal:block metal:use-macro="container/Zuite_CommonTemplateForRenderjsUi/macros/type_ckeditor_text_content"/>
</tal:block>

<tr>
  <td colspan="3"><b>Go to the text form</b></td>
</tr>
<tr>
  <td>click</td>
  <td>//button[text()='Text']</td>
  <td></td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>type</td>
  <td></td>
</tr>

<tr>
  <td colspan="3"><b>Check the Chapter Title</b></td>
</tr>
<tr>
  <td>assertValue</td>
  <td>title_html</td>
  <td>slide 1 test title</td>
</tr>

<tr>
  <td colspan="3"><b>Check text content</b></td>
</tr>
<tal:block tal:define="text_content python: '<p>slide 1 text content</p>'">
  <tal:block metal:use-macro="container/Zuite_CommonTemplateForRenderjsUi/macros/verify_ckeditor_text_content"/>
</tal:block>

<tr>
  <td colspan="3"><b>Go to the comment form</b></td>
</tr>
<tr>
  <td>click</td>
  <td>//button[text()='Comments']</td>
  <td></td>
</tr>
<tr>
  <td>waitForElementNotPresent</td>
  <td>type</td>
  <td></td>
</tr>

<tr>
  <td colspan="3"><b>Check comment content</b></td>
</tr>
<tal:block tal:define="text_content python: '<p>slide 1 comment content</p>'">
  <tal:block metal:use-macro="container/Zuite_CommonTemplateForRenderjsUi/macros/verify_ckeditor_text_content"/>
</tal:block>

<tr>
  <td colspan="3"><b>Go back to the slide list</b></td>
</tr>
<tr>
  <td>click</td>
  <td>//button[text()='List']</td>
  <td></td>
</tr>
<tr>
  <td>waitForTextPresent</td>
  <td>1 Slides</td>
  <td></td>
</tr>

<tr>
  <td colspan="3"><b>Go back to the slide 1</b></td>
</tr>
<tr>
  <td>click</td>
  <td>//button[text()='Edit']</td>
  <td></td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>//div[@data-gadget-scope="editor"]//iframe</td>
  <td></td>
</tr>
<tr>
  <td>click</td>
  <td>//button[text()='Text']</td>
  <td></td>
</tr>
<tr>
  <td>waitForTextPresent</td>
  <td>Slide 1</td>
  <td></td>
</tr>
  <tr>
  <td>waitForElementPresent</td>
  <td>type</td>
  <td></td>
</tr>

<tr>
  <td colspan="3"><b>Go to the text form</b></td>
</tr>
<tr>
  <td>click</td>
  <td>//button[text()='Text']</td>
  <td></td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>type</td>
  <td></td>
</tr>

<tr>
  <td colspan="3"><b>Check the metadata</b></td>
</tr>
<tr>
  <td>assertValue</td>
  <td>title_html</td>
  <td>slide 1 test title</td>
</tr>

<tr>
  <td colspan="3"><b>Click on Save</b></td>
</tr>
<tr>
 <td>waitForElementPresent</td>
 <td>//div[@data-gadget-scope='header']//button[@data-i18n='Save']</td>
 <td></td>
</tr>
<tr>
 <td>assertElementPresent</td>
 <td>//div[@data-gadget-scope='header']//button[@data-i18n='Save']</td>
 <td></td>
</tr>
<tr>
 <td>waitForElementNotPresent</td>
 <td>//div[@data-gadget-scope='header']//button[@data-i18n='Save'][contains(@class, "ui-disabled")]</td>
 <td></td>
</tr>
<tr>
 <td>assertElementNotPresent</td>
 <td>//div[@data-gadget-scope='header']//button[@data-i18n='Save'][contains(@class, "ui-disabled")]</td>
 <td></td>
</tr>
<tr>
 <td>click</td>
 <td>//div[@data-gadget-scope='header']//button[@data-i18n='Save']</td>
 <td></td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>//div[@data-gadget-scope="notification"]//button[text()='Data Updated']</td>
  <td></td>
</tr>

<tr>
  <td colspan="3"><b>Title</b></td>
</tr>
<tr>
  <td>waitForElementPresent</td>
  <td>type</td>
  <td></td>
</tr>

<tr>
  <td>assertValue</td>
  <td>title_html</td>
  <td>slide 1 test title</td>
</tr>

</tbody></table>
</body>
</html>