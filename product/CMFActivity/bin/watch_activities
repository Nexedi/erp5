#!/bin/sh
set -e

# ideas:
#  - more control on what would be displayed
#  - allow to group by tag instead of method_id
#    - somehow done, use shell variable text_group
#  - use python with curses to have runtime control

show_help()
{
  script_name=`basename "$0"`
  echo "
  Usage:
    $script_name <mysql_opt> [interval seconds]
  Interval is default 5.
  mysql_opt are default mysql command line options.
  Put them in quotes if more than one option is passed.

  Typical usage:
    $script_name erp5
    $script_name \"-h remotehost -u user erp5remote\" 3
"
}

MYSQL_OPT=$1
INTERVAL=$2

[ "$MYSQL_OPT" ] || {
  show_help
  exit 1
}

node_priority_cols="processing_node AS node, MIN(priority) AS min_pri, MAX(priority) AS max_pri"
for t in message message_queue message_job; do
  SELECT=$SELECT"
  SELECT count(*) AS $t, ${text_group:-method_id}, $node_priority_cols, MAX(retry) FROM $t
    GROUP BY processing_node, ${text_group:-method_id}
    ORDER BY processing_node, ${text_group:-method_id};
  SELECT priority,
    TIME_FORMAT(TIMEDIFF(UTC_TIMESTAMP(6), MAX(date)), \"%T\") AS min,
    TIME_FORMAT(TIMEDIFF(UTC_TIMESTAMP(6), AVG(date)), \"%T\") AS avg,
    TIME_FORMAT(TIMEDIFF(UTC_TIMESTAMP(6), MIN(date)), \"%T\") AS max
    FROM $t GROUP BY priority ORDER BY priority;"
  [ $t = message ] || {
    not_processing=$not_processing" UNION ALL "
    count=$count,
  }
  not_processing=$not_processing"
  SELECT count(*) AS count, $node_priority_cols, MIN(date) AS min_date, MAX(date) AS max_date
    FROM $t WHERE processing_node<=0 GROUP BY processing_node"
  count=$count"(SELECT count(*) AS $t FROM $t) as _$t"
done
exec watch -n ${INTERVAL:-5} "${MYSQL:-mysql} $MYSQL_OPT --disable-pager -t -e '
SET autocommit=off; SELECT * FROM $count;$SELECT
SELECT SUM(count) as count, node, MIN(min_pri) AS min_pri, MAX(max_pri) AS max_pri, MIN(min_date) AS min_date, MAX(max_date) AS max_date FROM ($not_processing) as t GROUP BY node;'"
