<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="Notebook" module="erp5.portal_type"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Access_contents_information_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Add_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Change_local_roles_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Modify_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_View_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>content_md5</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>default_reference</string> </key>
            <value> <string>default-wendelin_sample_data_chart</string> </value>
        </item>
        <item>
            <key> <string>description</string> </key>
            <value> <string>Notebook based on tutorial at https://wendelin.nexedi.com/wendelin-Learning.Track/wendelin-HowTo.Create.Notebook.with.Plotly.Chart.Editor/. Please check the detailed steps there to make this notebook properly work.</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>wendelin_environment_data_sample_graph</string> </value>
        </item>
        <item>
            <key> <string>language</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>portal_type</string> </key>
            <value> <string>Notebook</string> </value>
        </item>
        <item>
            <key> <string>short_title</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>text_content</string> </key>
            <value> <string encoding="cdata"><![CDATA[

%% md\n
# Time Series\n
<div class="plot_div" id="plot_div"/>\n
\n
\n
%% fetch\n
js: jio.js\n
js: ndarray_bundle.js\n
js: wendelin.js\n
js: https://cdn.plot.ly/plotly-latest.min.js\n
\n
\n
%% js\n
hateoas_url = "https://softinstxxxxx.host.vifib.net/erp5/web_site_module/renderjs_runner/hateoas/";\n
jio = jIO.createJIO({\n
  type: "erp5",\n
  url: hateoas_url,\n
  default_view_reference: "view"\n
});\n
\n
gadget = {\n
  getSetting: function(property) {\n
    return new RSVP.Queue()\n
      .push(function () {\n
        if (property == "hateoas_url") {\n
          return hateoas_url;\n
        }\n
        return;\n
      });\n
  },\n
  jio_getAttachment: function(id, url, parameter_dict) {\n
    return jio.getAttachment(id, url, parameter_dict);\n
  },\n
  jio_get: function(id) {return jio.get(id);}\n
}\n
\n
var graph = document.getElementById(\'plot_div\'),\n
  graph_data = [],\n
  label_list = ["date", "humidity_min","humidity_mean","humidity_max", "pressure_min","pressure_mean","pressure_max", "temperature_min","temperature_mean", "temperature_max"];\n
\n
selectorOptions = {\n
    "buttons": [{\n
        "step": \'day\',\n
        "stepmode": \'backward\',\n
        "count": 1,\n
        "label": \'day\'\n
    },/* {\n
        "step": \'day\',\n
        "stepmode": \'backward\',\n
        "count": 7,\n
        "label": \'week\'\n
    },*/ {\n
        "step": \'month\',\n
        "stepmode": \'backward\',\n
        "count": 1,\n
        "label": \'month\'\n
    }, {\n
        "step": \'year\',\n
        "stepmode": \'backward\',\n
        "count": 1,\n
        "label": \'year\'\n
    }],\n
}\n
\n
\n
function update_graph(start_date, stop_date){\n
  return getData(start_date, stop_date)\n
    .push(function (data) {\n
      return Plotly.react(graph,\n
        data,\n
        { \'title\' :\'Environmental Sensor Data\',\n
          \'xaxis\': {\n
            \'autorange\': true,\n
            \'rangeselector\': selectorOptions,\n
          }\n
        }\n
      );\n
    });\n
}\n
\n
function unpack(rows, key) {\n
  return rows.map(function(row) { return row[key]; });\n
}\n
\n
function getData(start_date, stop_date){\n
  var graph_data=[],\n
    ratio = screen.availWidth / 1024,\n
    interval,\n
    frequency,\n
    start_index,\n
    stop_index,\n
    array_id;\n
\n
   if (stop_date === undefined) {\n
     frequency = 30000;\n
     start_index = 0;\n
     stop_index = 0;\n
   } else {\n
    interval = stop_date - start_date;\n
    if (interval >= 1000 * 60 * 60 * 24 * 100 * ratio) {\n
      frequency = 30000;\n
    } else if (interval >= 1000 * 60 * 60 * 24 * 28 * ratio) {\n
      frequency = 3000;\n
    } else if (interval >= 1000 * 60 * 60 * 24 * 7 * ratio) {\n
      frequency = 300;\n
    } else {\n
      frequency = 60;\n
    }\n
  }\n
  return jio.allDocs({\n
    query: \'portal_type:"Data Array" AND \' +\n
           \'title: "Sample Array (\' + frequency + \' Seconds)"\'\n
  })\n
    // query for tutorial\n
    /*query: \'portal_type:"Data Analysis Line" AND \' +\n
           \'title: "Resampled Array (\' + frequency + \' Seconds)" AND \' +\n
           \'resource_reference:"GENERIC-INTERVAL-RESAMPLED-ARRAY" AND \' +\n
           \'parent_source_title:"Sample Factory" AND \' +\n
           \'simulation_state:"started"\'\n
  })\n
    .push(function (result) {\n
      var data_analysis_line_id = result.data.rows[0].id;\n
      return jio.allDocs({\n
        query: \'portal_type:"Data Array" AND \' +\n
               \'aggregate_related_relative_url:"\' + data_analysis_line_id +\'"\'\n
      });\n
    })*/\n
    .push(function (result) {\n
      array_id = result.data.rows[0].id;\n
      return wendelin.getArrayRawSlice(gadget, array_id, 0, 1);\n
    })\n
    .push(function (result) {\n
      array_start_date = wendelin.convertFirstColToDate([[result.data[0]]])[0][0];\n
      if (start_index === undefined) {\n
        start_index = Math.max(0, Math.ceil((start_date - array_start_date) / (frequency*1000))),\n
        stop_index = Math.ceil((stop_date - array_start_date) / (frequency*1000));\n
      }\n
      return wendelin.getArrayRawSlice(gadget, array_id, start_index, stop_index);\n
    })\n
    .push(function(result) {\n
      for (i = 0; i < label_list.length; i += 1) {\n
        graph_data = graph_data.concat(nj.unpack(result.pick( null, label_list[i])));\n
      }\n
      return graph_data\n
    })\n
    .push(function(result){\n
      var filtered_graph_data = [];\n
      for (var i=0; i<result.length; i++) {\n
        if (result[i][0] != 0) {\n
          filtered_graph_data.push(result[i]);\n
        }\n
      }\n
      return wendelin.convertFirstColToDate(filtered_graph_data)\n
    })\n
    .push(function (graph_data) {\n
      var humidity_trace = {\n
          type: "scattergl",\n
          mode: "markers",\n
          name: \'Humidity(%)\',\n
          x: unpack(graph_data, label_list.indexOf("date")),\n
          y: unpack(graph_data, label_list.indexOf("humidity_mean")),\n
          line: {color: \'#17BECF\'}\n
      }\n
\n
      var pressure_trace = {\n
          type: "scattergl",\n
          mode: "markers",\n
          name: \'Pressure(Pa)\',\n
          x: unpack(graph_data, label_list.indexOf("date")),\n
          y: unpack(graph_data, label_list.indexOf("pressure_mean")),\n
          line: {color: \'#7F7F7F\'}\n
      }\n
\n
      var temperature_trace = {\n
          type: "scattergl",\n
          mode: "markers",\n
          name: \'Temperature(CÂ°)\',\n
          x: unpack(graph_data, label_list.indexOf("date")),\n
          y: unpack(graph_data, label_list.indexOf("temperature_mean")),\n
          line: {color: \'#FF0000\'}\n
      }\n
\n
      var data = [humidity_trace,pressure_trace,temperature_trace];\n
      return data\n
    });\n
}\n
\n
function plot () {\n
  return getData()\n
    .push(function (data) {\n
      Plotly.newPlot(\n
        graph,\n
        data,\n
        { \'title\' :\'Environmental Sensor Data\',\n
          \'xaxis\': {\n
          \'autorange\': true,\n
          \'rangeselector\': selectorOptions,}\n
        });\n
      graph.on(\'plotly_relayout\', function(eventdata) {\n
        var start_date = new Date(eventdata["xaxis.range[0]"]),\n
          stop_date = new Date(eventdata["xaxis.range[1]"]);\n
        return update_graph(start_date, stop_date);\n
      });\n
    });\n
}\n
\n
plot();

]]></string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>Data Sample Chart</string> </value>
        </item>
        <item>
            <key> <string>workflow_history</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <global name="PersistentMapping" module="Persistence.mapping"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value>
              <dictionary>
                <item>
                    <key> <string>document_publication_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAM=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>edit_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAQ=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>processing_status_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAU=</string> </persistent>
                    </value>
                </item>
              </dictionary>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="3" aka="AAAAAAAAAAM=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.Workflow"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_log</string> </key>
            <value>
              <list>
                <dictionary>
                  <item>
                      <key> <string>action</string> </key>
                      <value> <string>publish_alive</string> </value>
                  </item>
                  <item>
                      <key> <string>actor</string> </key>
                      <value> <string>zope</string> </value>
                  </item>
                  <item>
                      <key> <string>comment</string> </key>
                      <value> <string></string> </value>
                  </item>
                  <item>
                      <key> <string>error_message</string> </key>
                      <value> <string></string> </value>
                  </item>
                  <item>
                      <key> <string>time</string> </key>
                      <value>
                        <object>
                          <klass>
                            <global name="_reconstructor" module="copy_reg"/>
                          </klass>
                          <tuple>
                            <global name="DateTime" module="DateTime.DateTime"/>
                            <global name="object" module="__builtin__"/>
                            <none/>
                          </tuple>
                          <state>
                            <tuple>
                              <float>1612184596.36</float>
                              <string>UTC</string>
                            </tuple>
                          </state>
                        </object>
                      </value>
                  </item>
                  <item>
                      <key> <string>validation_state</string> </key>
                      <value> <string>published_alive</string> </value>
                  </item>
                </dictionary>
              </list>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="4" aka="AAAAAAAAAAQ=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.Workflow"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_log</string> </key>
            <value>
              <list>
                <dictionary>
                  <item>
                      <key> <string>action</string> </key>
                      <value> <string>edit</string> </value>
                  </item>
                  <item>
                      <key> <string>actor</string> </key>
                      <value> <unicode>zope</unicode> </value>
                  </item>
                  <item>
                      <key> <string>comment</string> </key>
                      <value>
                        <none/>
                      </value>
                  </item>
                  <item>
                      <key> <string>error_message</string> </key>
                      <value> <string></string> </value>
                  </item>
                  <item>
                      <key> <string>serial</string> </key>
                      <value> <string>1007.36975.39364.22101</string> </value>
                  </item>
                  <item>
                      <key> <string>state</string> </key>
                      <value> <string>current</string> </value>
                  </item>
                  <item>
                      <key> <string>time</string> </key>
                      <value>
                        <object>
                          <klass>
                            <global name="_reconstructor" module="copy_reg"/>
                          </klass>
                          <tuple>
                            <global name="DateTime" module="DateTime.DateTime"/>
                            <global name="object" module="__builtin__"/>
                            <none/>
                          </tuple>
                          <state>
                            <tuple>
                              <float>1682063074.39</float>
                              <string>UTC</string>
                            </tuple>
                          </state>
                        </object>
                      </value>
                  </item>
                </dictionary>
              </list>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="5" aka="AAAAAAAAAAU=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.Workflow"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_log</string> </key>
            <value>
              <list>
                <dictionary>
                  <item>
                      <key> <string>action</string> </key>
                      <value> <string>detect_converted_file</string> </value>
                  </item>
                  <item>
                      <key> <string>actor</string> </key>
                      <value> <string>zope</string> </value>
                  </item>
                  <item>
                      <key> <string>comment</string> </key>
                      <value> <string></string> </value>
                  </item>
                  <item>
                      <key> <string>error_message</string> </key>
                      <value> <string></string> </value>
                  </item>
                  <item>
                      <key> <string>external_processing_state</string> </key>
                      <value> <string>converted</string> </value>
                  </item>
                  <item>
                      <key> <string>serial</string> </key>
                      <value> <string>0.0.0.0</string> </value>
                  </item>
                  <item>
                      <key> <string>time</string> </key>
                      <value>
                        <object>
                          <klass>
                            <global name="_reconstructor" module="copy_reg"/>
                          </klass>
                          <tuple>
                            <global name="DateTime" module="DateTime.DateTime"/>
                            <global name="object" module="__builtin__"/>
                            <none/>
                          </tuple>
                          <state>
                            <tuple>
                              <float>1610566812.48</float>
                              <string>UTC</string>
                            </tuple>
                          </state>
                        </object>
                      </value>
                  </item>
                </dictionary>
              </list>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
